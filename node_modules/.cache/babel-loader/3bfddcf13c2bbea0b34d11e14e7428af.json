{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/HistoryRymindrs/CreateRymindr/Modal/index.js\";\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport PropTypes from 'prop-types';\nimport Tabmenu from './Memberlist';\nimport { styled } from '@material-ui/core/styles';\nconst CloseButton = styled(IconButton)({\n  position: 'absolute',\n  right: 0,\n  top: 0\n});\nconst DialogTitleStyled = styled(DialogTitle)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 24px',\n  marginBottom: 20\n});\nconst TypoPopHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600'\n}));\nexport default function ConfirmationDialogRaw(props) {\n  const {\n    onClose,\n    value: valueProp,\n    open,\n    ...other\n  } = props;\n  const [value, setValue] = useState(valueProp);\n  useEffect(() => {\n    console.log(open);\n\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  const handleCancel = () => {\n    setValue(false);\n    onClose(!open);\n  };\n\n  const handleOk = () => {\n    onClose(!open);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    fullWidth: true,\n    maxWidth: \"md\",\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitleStyled, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TypoPopHeadStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Contacts\"), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"default\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, props.children), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOk,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Done\")));\n}\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/HistoryRymindrs/CreateRymindr/Modal/index.js"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","Typography","React","useEffect","useState","CloseIcon","PropTypes","Tabmenu","styled","CloseButton","position","right","top","DialogTitleStyled","borderBottom","padding","marginBottom","TypoPopHeadStyled","theme","color","palette","secondary","contrastText","fontSize","fontWeight","ConfirmationDialogRaw","props","onClose","value","valueProp","open","other","setValue","console","log","handleCancel","handleOk","children","propTypes","func","isRequired","bool","string"],"mappings":";AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,aAA9B,EAA6CC,aAA7C,EAA4DC,WAA5D,EAAyEC,UAAzE,EAAqFC,UAArF,QAAuG,mBAAvG;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACR,UAAD,CAAN,CAAmB;AACrCU,EAAAA,QAAQ,EAAE,UAD2B;AAErCC,EAAAA,KAAK,EAAE,CAF8B;AAGrCC,EAAAA,GAAG,EAAE;AAHgC,CAAnB,CAApB;AAMA,MAAMC,iBAAiB,GAAGL,MAAM,CAACT,WAAD,CAAN,CAAoB;AAC5Ce,EAAAA,YAAY,EAAE,mBAD8B;AAE5CC,EAAAA,OAAO,EAAE,WAFmC;AAG5CC,EAAAA,YAAY,EAAE;AAH8B,CAApB,CAA1B;AAMA,MAAMC,iBAAiB,GAAGT,MAAM,CAACP,UAAD,CAAN,CAAmB,CAAC;AAAEiB,EAAAA;AAAF,CAAD,MAAgB;AAC3DC,EAAAA,KAAK,EAAED,KAAK,CAACE,OAAN,CAAcC,SAAd,CAAwBC,YAD4B;AAE3DC,EAAAA,QAAQ,EAAE,EAFiD;AAG3DC,EAAAA,UAAU,EAAE;AAH+C,CAAhB,CAAnB,CAA1B;AAMA,eAAe,SAASC,qBAAT,CAAgCC,KAAhC,EAAuC;AACpD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAK,EAAEC,SAAlB;AAA6BC,IAAAA,IAA7B;AAAmC,OAAGC;AAAtC,MAAgDL,KAAtD;AACA,QAAM,CAACE,KAAD,EAAQI,QAAR,IAAoB5B,QAAQ,CAACyB,SAAD,CAAlC;AAEA1B,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,QAAI,CAACA,IAAL,EAAW;AACTE,MAAAA,QAAQ,CAACH,SAAD,CAAR;AACD;AACF,GALQ,EAKN,CAACA,SAAD,EAAYC,IAAZ,CALM,CAAT;;AAOA,QAAMK,YAAY,GAAG,MAAM;AACzBH,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAL,IAAAA,OAAO,CAAC,CAACG,IAAF,CAAP;AACD,GAHD;;AAKA,QAAMM,QAAQ,GAAG,MAAM;AACrBT,IAAAA,OAAO,CAAC,CAACG,IAAF,CAAP;AACD,GAFD;;AAGA,sBACE,oBAAC,MAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,QAAQ,EAAC,IAFX;AAGE,IAAA,oBAAoB,MAHtB;AAIE,IAAA,oBAAoB,MAJtB;AAKE,uBAAgB,2BALlB;AAME,IAAA,IAAI,EAAEA;AANR,KAOMC,KAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASE,oBAAC,iBAAD;AAAmB,IAAA,EAAE,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,cAAc,EAAC,eAAnC;AAAmD,IAAA,UAAU,EAAC,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAEI,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CATF,eAiBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACW,QADT,CAjBF,eAqBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,QAAjB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CArBF,CADF;AA6BD;AAEDX,qBAAqB,CAACa,SAAtB,GAAkC;AAChCX,EAAAA,OAAO,EAAErB,SAAS,CAACiC,IAAV,CAAeC,UADQ;AAEhCV,EAAAA,IAAI,EAAExB,SAAS,CAACmC,IAAV,CAAeD,UAFW;AAGhCZ,EAAAA,KAAK,EAAEtB,SAAS,CAACoC,MAAV,CAAiBF;AAHQ,CAAlC","sourcesContent":["import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Typography } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport CloseIcon from '@material-ui/icons/Close'\nimport PropTypes from 'prop-types'\nimport Tabmenu from './Memberlist'\nimport { styled } from '@material-ui/core/styles'\n\nconst CloseButton = styled(IconButton)({\n  position: 'absolute',\n  right: 0,\n  top: 0\n})\n\nconst DialogTitleStyled = styled(DialogTitle)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 24px',\n  marginBottom: 20\n})\n\nconst TypoPopHeadStyled = styled(Typography)(({ theme }) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600'\n}))\n\nexport default function ConfirmationDialogRaw (props) {\n  const { onClose, value: valueProp, open, ...other } = props\n  const [value, setValue] = useState(valueProp)\n\n  useEffect(() => {\n    console.log(open)\n    if (!open) {\n      setValue(valueProp)\n    }\n  }, [valueProp, open])\n\n  const handleCancel = () => {\n    setValue(false)\n    onClose(!open)\n  }\n\n  const handleOk = () => {\n    onClose(!open)\n  }\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      disableBackdropClick\n      disableEscapeKeyDown\n      aria-labelledby='confirmation-dialog-title'\n      open={open}\n      {...other}\n    >\n      <DialogTitleStyled id='form-dialog-title'>\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\n          <TypoPopHeadStyled>Contacts</TypoPopHeadStyled>\n          <IconButton color='default' onClick={handleCancel}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitleStyled>\n      <DialogContent>\n        {props.children}\n        {/* <Tabmenu groupdata={props.groupdata} memberdata={props.memberdata} /> */}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleOk} color='primary'>\n          Done\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}