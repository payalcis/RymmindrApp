{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/Bookings/EventBooking/EventBookingDuplicate.js\";\nimport { Visibility, Replay, Send, AddCircle, Cancel } from '@material-ui/icons';\nimport { Box, Button, Checkbox, FormControlLabel, Grid, MenuItem, Paper, Switch, TextField, Typography, Radio, RadioGroup, Divider, FormControl, FormLabel, IconButton } from '@material-ui/core';\nimport { DatePicker, MuiPickersUtilsProvider, TimePicker } from '@material-ui/pickers';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport MomentUtils from '@date-io/moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { createEventbook, getBusinessUsers, getGroups, getCategory } from '../../../store/actions/bookevent';\nimport { getBookListDetail } from '../../../store/actions/booklist';\nimport moment from 'moment';\nimport { withSnackbar } from 'notistack';\nimport PropTypes from 'prop-types';\nimport CircularSpinner from '../../../component/CircularSpinner/index';\nimport FullscreenSpinner from '../../../component/FullscreenSpinner/index';\nimport Tabmenu from './Modal/Memberlist';\nimport ConfirmationDialogRaw from './Modal';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport ckEditorConfig from '../../../helper/ckEditorConfig';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative'\n  },\n  categoryIon: {\n    height: 32,\n    margin: -10,\n    marginLeft: 0,\n    marginRight: 10\n  }\n}));\nconst TypoHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 24,\n  color: theme.palette.primary.main,\n  textTransform: 'uppercase',\n  fontWeight: 'bold'\n}));\nconst TypoHeadInnerStyled = styled(TypoHeadStyled)(({\n  theme\n}) => ({\n  color: theme.palette.text.primary\n}));\nconst PaperStyled = styled(Paper)({\n  padding: '35px 15px',\n  height: 100 + '%'\n});\nconst GridStyled = styled(Grid)(({\n  theme\n}) => ({}));\nconst GridVioletStyled = styled(Grid)({\n  padding: '10px 0',\n  height: 100 + '%',\n  background: '#edf8fe',\n  borderRadius: 15,\n  minHeight: 210,\n  position: 'relative'\n});\nconst AutocompleteStyled = styled(Autocomplete)({\n  height: 154,\n  '&>div': {\n    margin: 0,\n    '&>div': {\n      height: 154,\n      alignItems: 'flex-start'\n    }\n  }\n});\nconst ButtonAddStyled = styled(Button)({\n  fontSize: 16,\n  fontWeight: 'bold',\n  '& svg': {\n    fontSize: '28px !important'\n  }\n});\nconst currencies = [{\n  value: '10',\n  label: '10 Min'\n}, {\n  value: '15',\n  label: '15 Min'\n}, {\n  value: '30',\n  label: '30 Min'\n}, {\n  value: '45',\n  label: '45 Min'\n}, {\n  value: '1',\n  label: '1 Hour'\n}, {\n  value: '2',\n  label: '2 Hour'\n}];\nconst category = [{\n  value: 'Parents Evening',\n  label: 'Parents Evening',\n  category_id: 159,\n  img: require('../../../assets/images/parent.png')\n}, {\n  value: 'Event',\n  label: 'Event',\n  category_id: 158,\n  img: require('../../../assets/images/event.png')\n}, {\n  value: 'Appointment',\n  label: 'Appointment',\n  category_id: 157,\n  img: require('../../../assets/images/event_blue.png')\n}];\nconst IconButtonStyled = styled(IconButton)(({\n  theme\n}) => ({\n  color: theme.palette.error.main,\n  position: 'absolute',\n  right: -15,\n  top: -15,\n  cursor: 'pointer',\n  '& svg': {\n    width: '2.3rem',\n    height: '2.3rem'\n  }\n})); //form field\n\nconst FormFields = {\n  message: '',\n  EventForm_to_group: '',\n  eventForm_to: '',\n  user_id: '',\n  user_name: '',\n  subject: '',\n  category: '',\n  dynaminc_field: '',\n  allow_parents: '',\n  set_date: '',\n  id: ''\n};\n\nconst CreateEventbook = props => {\n  const {\n    user_id,\n    business_code,\n    first_name,\n    last_name\n  } = JSON.parse(localStorage.getItem('userData'));\n  const {\n    enqueueSnackbar,\n    error,\n    sucessEvent,\n    getGroups,\n    getBookListDetail,\n    groups,\n    bookdetails,\n    businessusers,\n    getBusinessUsers,\n    loading,\n    matched_contact,\n    createEventbook,\n    getCategory\n  } = props;\n  const [formValue, setFormValue] = useState(FormFields);\n  const [formValidation, setFormValidation] = useState(FormFields);\n  const [setDate, setDateChange] = useState();\n  const [categoryVal, setCategoryVal] = React.useState('');\n  const [allowParentValue, setAllowParent] = useState('');\n  const [getMessage, setMessage] = useState('');\n  const history = useHistory();\n  const date = new Date();\n  const [checked, setChecked] = useState([]);\n  const [memberchecked, setMemberchecked] = useState([]);\n  const [group_members, setGroup_members] = useState([]);\n  const [groupname_membersname, setGroupname_membersname] = useState([]);\n  const [eventForm_to, setEventForm_to] = useState('');\n  const [checkupdate, setCheckupdate] = useState(0);\n  const [showTime, setShowTime] = useState('No');\n  const [tempTime, setTempTime] = useState();\n  const [isPageLoading, setPageLoading] = useState(false); //let { ID } = useParams();\n\n  let {\n    ID,\n    member_id,\n    group_id,\n    get_name\n  } = useParams();\n  useEffect(() => {\n    const dataToSend = {\n      user_id,\n      category_id: ''\n    }; // props.getcategories(dataToSend)\n\n    getGroups({\n      user_id\n    });\n    const SendToBusiness = {\n      user_id,\n      business_code\n    };\n    getBusinessUsers(SendToBusiness); // getCategory();\n\n    if (ID != undefined) {\n      setPageLoading(true);\n      getBookListDetail({\n        ID,\n        user_id\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (ID != undefined) {\n      if (bookdetails !== null) {\n        setPageLoading(false);\n        setTimeout(() => {\n          setFormValue({\n            id: ID,\n            message: bookdetails[0].message,\n            subject: bookdetails[0].subject,\n            set_date: bookdetails[0].event_date,\n            category: bookdetails[0].category,\n            allow_parents: bookdetails[0].add_comment,\n            eventForm_to: '@'\n          });\n        }, 0);\n\n        if (bookdetails[0].category == '157') {\n          setCategoryVal('Appointment');\n        } else if (bookdetails[0].category == '158') {\n          setCategoryVal('Event');\n        } else if (bookdetails[0].category == '159') {\n          setCategoryVal('Parents Evening');\n        } // setCategoryVal(bookdetails[0].category);\n        //setDateChange(moment(bookdetails[0].event_date));\n\n\n        setAllowParent(bookdetails[0].add_comment); //this is for popoup\n\n        const newChecked = [];\n        const mem_checked = [];\n        const groupname = [];\n        const mobile_name = [];\n        var temp = null;\n        bookdetails[0].event_to_group.split(',').forEach((element, index) => {\n          newChecked.push(parseInt(element));\n        });\n        bookdetails[0].event_to.split(',').forEach((element, index) => {\n          mem_checked.push(element);\n        });\n\n        if (bookdetails[0].event_group_name != null) {\n          bookdetails[0].event_group_name.split(',').forEach((element, index) => {\n            if (groupname.indexOf(element) === -1) {\n              groupname.push(element);\n            }\n          });\n        }\n\n        if (bookdetails[0].event_mobile_no != null) {\n          bookdetails[0].event_mobile_no.split(',').forEach((element, index) => {\n            temp = businessusers.filter(x => element.user_id == element); // if(mobile_name.indexOf(element) === -1) {mobile_name.push(element)};\n          });\n\n          if (temp) {\n            bookdetails[0].user && bookdetails[0].user.length > 0 && bookdetails[0].user.forEach((data, i) => {\n              mobile_name.push(data.user_name);\n            });\n          }\n        }\n\n        setChecked(newChecked);\n        setMemberchecked(mem_checked);\n        setGroupname_membersname(groupname.concat(mobile_name)); //popup end\n        //dynamic eleent start\n\n        var new_meet_data = [];\n        var new_meet_data_frm = [];\n        var dynamic_valid = []; // bookdetails[0].meeting_data.forEach((element, index) => {\n        // // list[index][fieldName]    = fieldVal\n        // let innerObj = {};\n        // let innerObj_frm={};\n        // let  innerObj_valid={};\n        // innerObj['meetingDate'] = moment(element.meeting_date);\n        // innerObj['startTime']   = moment(element.meeting_date+' '+element.meeting_time_start);\n        // innerObj['endTime']     = moment(element.meeting_date+' '+element.meeting_time_end);\n        // innerObj['currency']    = element.meeting_slot;\n        // innerObj['breakStatus']    = element.comfort_break;\n        // innerObj['breakStartTime'] = moment(element.meeting_date+' '+element.meeting_time_start1);\n        // innerObj['breakEndTime']   = moment(element.meeting_date+' '+element.meeting_time_end1);\n        // innerObj['isbooked_check']   = element.is_slot_book;\n        // innerObj_frm['meetingDate'] = element.meeting_date;\n        // innerObj_frm['startTime']   = element.meeting_date+' '+element.meeting_time_start;\n        // innerObj_frm['endTime']     = element.meeting_date+' '+element.meeting_time_end;\n        // innerObj_frm['currency']    = element.meeting_slot;\n        // innerObj_frm['breakStatus']    = element.comfort_break;\n        // innerObj_frm['breakStartTime'] =element.meeting_date+' '+element.meeting_time_start1;\n        // innerObj_frm['breakEndTime']   =element.meeting_date+' '+element.meeting_time_end1;\n        // innerObj_valid['meetingDate'] = '';\n        // innerObj_valid['startTime']   = '';\n        // innerObj_valid['endTime']     = '';\n        // innerObj_valid['currency']    = '';\n        // innerObj_valid['breakStatus']    = '';\n        // innerObj_valid['breakStartTime'] ='';\n        // innerObj_valid['breakEndTime']   ='';\n        // new_meet_data.push(innerObj);\n        // new_meet_data_frm.push(innerObj_frm);\n        // dynamic_valid.push(innerObj_valid);\n        // });\n        //setInputList(new_meet_data);\n        // setDynamicFormValidation(dynamic_valid);\n        // setSaveInputList(new_meet_data_frm);\n\n        setAllowParent(bookdetails[0].add_comment); //end of dyamic field\n\n        setFormValue({ ...formValue,\n          set_date: moment(bookdetails[0].event_date)\n        });\n      }\n    }\n  }, [bookdetails]); //  const handleinput = (e, isEditor=null) => {\n  //     const formdata = { ...formValue}\n  //     const formvalidation = { ...formValidation }\n  //     if(!isEditor){\n  //       const { name, value } = e.target;\n  //       if (name === 'message') {\n  //         formdata.message = value\n  //         formvalidation.message = ''\n  //         setFormValidation(formvalidation)\n  //         }else if(name === 'subject'){\n  //         formdata.subject = value\n  //         formvalidation.subject = ''\n  //         setFormValidation(formvalidation)\n  //         }\n  //         else {\n  //           formdata[name] = value\n  //         }\n  //     }\n  //     else{\n  //       formdata.message = e\n  //       formvalidation.message = ''\n  //       setFormValidation(formvalidation)\n  //     }\n  //     setFormValue(formdata)\n  //   }\n\n  useEffect(() => {\n    const formdata = { ...formValue\n    };\n    const formvalidation = { ...formValidation\n    };\n    formdata.message = getMessage;\n    formvalidation.message = '';\n    setFormValidation(formvalidation);\n    setFormValue(formdata);\n  }, [getMessage]);\n\n  const subjectHandleinput = (e, isEditor = null) => {\n    const formdata = { ...formValue\n    };\n    const formvalidation = { ...formValidation\n    };\n    const {\n      name,\n      value\n    } = e.target;\n    formdata.subject = value;\n    formvalidation.subject = '';\n    setFormValidation(formvalidation);\n    setFormValue(formdata);\n  };\n\n  const handleCategoryChange = event => {\n    setCategoryVal(event.target.value);\n    var cat_id = '';\n\n    if (event.target.value == 'Parents Evening') {\n      cat_id = 159;\n    } else if (event.target.value == 'Event') {\n      cat_id = 158;\n    } else {\n      cat_id = 157;\n    }\n\n    setFormValue({ ...formValue,\n      subcategory_id: cat_id,\n      category: event.target.value\n    });\n  }; //start cloneing field\n  // Add remove fields\n\n\n  const [inputList, setInputList] = useState([{\n    meetingDate: new Date(),\n    currency: '15',\n    startTime: new Date(),\n    endTime: new Date(),\n    breakStatus: '0',\n    breakStartTime: new Date(),\n    breakEndTime: new Date(),\n    isbooked_check: 0\n  }]); // Save data array value\n\n  const [saveInputList, setSaveInputList] = useState([{\n    meetingDate: '',\n    currency: '15',\n    startTime: '',\n    endTime: '',\n    breakStatus: '0',\n    breakStartTime: '',\n    breakEndTime: ''\n  }]);\n  const [dynamicFormValidation, setDynamicFormValidation] = useState([{\n    meetingDate: '',\n    currency: '',\n    startTime: '',\n    endTime: '',\n    breakStatus: '',\n    breakStartTime: '',\n    breakEndTime: ''\n  }]); // handle input change\n\n  const handleInputChange = (fieldName, event, index) => {\n    const list = [...inputList];\n    const saveList = [...saveInputList];\n    const vali = [...dynamicFormValidation];\n    const fieldsArr = ['startTime', 'endTime', 'breakStartTime', 'breakEndTime'];\n    var fieldVal = '';\n    var saveFieldVal = '';\n    var saveVali = '';\n\n    if (fieldName == 'meetingDate') {\n      fieldVal = event;\n      const date = new Date(event);\n      saveFieldVal = moment(date).format('YYYY-MM-DD');\n      saveVali = '';\n    } else if (fieldsArr.indexOf(fieldName) >= 0) {\n      fieldVal = event;\n      const date = new Date(event);\n      saveFieldVal = moment(date).format('HH:mm');\n      console.log('saveFieldVal-', saveFieldVal); // setTempTime(event)\n    } else if (fieldName == 'breakStatus') {\n      let prevValue = list[index][fieldName];\n      let currentVal = prevValue !== event.target.value ? event.target.value : '';\n      fieldVal = currentVal;\n      saveFieldVal = currentVal;\n\n      if (currentVal === 'Yes') {\n        setShowTime('Yes');\n      } else {\n        setShowTime('No');\n      }\n    } else {\n      fieldVal = event.target.value;\n      saveFieldVal = event.target.value; // saveVali=event.target.value\n    }\n\n    list[index][fieldName] = fieldVal;\n    saveList[index][fieldName] = saveFieldVal;\n    vali[index][fieldName] = saveVali;\n    setInputList(list);\n    setSaveInputList(saveList);\n    setDynamicFormValidation(vali);\n  }; // handle click event of the Add button\n\n\n  const handleAddAnotherClick = () => {\n    let tempBreakStatus = '0';\n\n    if (inputList.length > 0 && inputList[inputList.length - 1].breakStatus == 'No') {\n      tempBreakStatus = 'No';\n    } else {\n      tempBreakStatus = 'Yes';\n    }\n\n    const date = new Date(tempTime);\n    let meetDate = '';\n\n    if (inputList.length > 0) {\n      let getDate = moment(new Date(inputList[inputList.length - 1].meetingDate), 'DD-MM-YYYY').add(1, 'days');\n      meetDate = getDate.format('YYYY-MM-DD');\n    } else {\n      meetDate = new Date().addDays(1);\n    }\n\n    setInputList([...inputList, {\n      // meetingDate: inputList.length > 0 ? (inputList[inputList.length-1].meetingDate).addDays(1) : new Date().addDays(1),\n      //meetingDate: inputList.length > 0 ? moment(inputList[inputList.length-1].meetingDate, \"DD-MM-YYYY\").add(1, 'days') : new Date().addDays(1),\n      meetingDate: meetDate,\n      currency: inputList.length > 0 ? inputList[inputList.length - 1].currency : '',\n      startTime: inputList.length > 0 ? inputList[inputList.length - 1].startTime : new Date(),\n      endTime: inputList.length > 0 ? inputList[inputList.length - 1].endTime : new Date(),\n      breakStatus: tempBreakStatus,\n      breakStartTime: inputList.length > 0 ? inputList[inputList.length - 1].breakStartTime : new Date(),\n      breakEndTime: inputList.length > 0 ? inputList[inputList.length - 1].breakEndTime : new Date()\n    }]);\n    let meetDate2 = '';\n\n    if (saveInputList.length > 0) {\n      let getDate = moment(new Date(saveInputList[saveInputList.length - 1].meetingDate), 'DD-MM-YYYY').add(1, 'days');\n      meetDate2 = getDate.format('YYYY-MM-DD');\n    } else {\n      meetDate2 = new Date().addDays(1);\n    }\n\n    setSaveInputList([...saveInputList, {\n      // meetingDate: saveInputList.length > 0 ? (saveInputList[saveInputList.length-1].meetingDate).addDays(1) : new Date().addDays(1),\n      //meetingDate: saveInputList.length > 0 ? moment(saveInputList[saveInputList.length-1].meetingDate, \"DD-MM-YYYY\").add(1, 'days') : new Date().addDays(1),\n      meetingDate: meetDate2,\n      currency: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].currency : '',\n      startTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].startTime : new Date(),\n      endTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].endTime : new Date(),\n      breakStatus: tempBreakStatus,\n      breakStartTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].breakStartTime : new Date(),\n      breakEndTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].breakEndTime : new Date()\n    }]);\n    setDynamicFormValidation([...dynamicFormValidation, {\n      meetingDate: '',\n      currency: '',\n      startTime: '',\n      endTime: '',\n      breakStatus: '',\n      breakStartTime: '',\n      breakEndTime: ''\n    }]); // setSaveInputList([...saveInputList, {\n    //   // meetingDate:'',\n    //   // currency: '',\n    //   // startTime: '',\n    //   // endTime : '',\n    //   // breakStatus: '0',\n    //   // breakStartTime: '',\n    //   // breakEndTime: '',\n    //   meetingDate: inputList.length > 0 ? inputList[inputList.length-1].meetingDate : '',\n    //     currency: inputList.length > 0 ? inputList[inputList.length-1].currency : '',\n    //     startTime: inputList.length > 0 ? inputList[inputList.length-1].startTime : '',\n    //     endTime : inputList.length > 0 ? inputList[inputList.length-1].endTime : '',\n    //     breakStatus: tempBreakStatus,\n    //     breakStartTime: inputList.length > 0 ? inputList[inputList.length-1].breakStartTime : '',\n    //     breakEndTime: inputList.length > 0 ? inputList[inputList.length-1].breakEndTime : '',\n    // }]);\n  }; // handle click event of the Remove button\n\n\n  const handleRemoveAnotherClick = index => {\n    const list = [...inputList];\n    const saveList = [...saveInputList];\n    const vali = [...dynamicFormValidation];\n    list.splice(index, 1);\n    saveList.splice(index, 1);\n    vali.splice(index, 1);\n    setInputList(list);\n    setSaveInputList(saveList);\n    setDynamicFormValidation(vali);\n  }; //end cloning\n\n\n  const handleAllowparents = event => {\n    if (event.target.value === allowParentValue) {\n      setAllowParent('');\n    } else {\n      setAllowParent(event.target.value);\n    }\n\n    setFormValue({ ...formValue,\n      allow_parents: event.target.value\n    });\n  };\n\n  const [phoneNumber, setPhoneNumber] = useState([]);\n\n  const handleTag = e => {\n    const newNumber = [...phoneNumber, e.target.value];\n    setPhoneNumber(Array.from(new Set(newNumber)));\n  };\n\n  const handleDateChange = e => {\n    const date = new Date(e);\n    const selecteddate = moment(date).format('YYYY-MM-DD');\n    setDateChange(selecteddate);\n    const formvalidation = { ...formValidation\n    };\n    formvalidation.set_date = '';\n    setFormValidation(formvalidation);\n    setFormValue({ ...formValue,\n      set_date: selecteddate\n    });\n  }; //const [selectedDate, handleDateChange] = useState(new Date())\n  //const [selectedTime, handleTimeChange] = useState(new Date())\n\n\n  const [currency, setCurrency] = React.useState('10');\n  const [note, setNote] = React.useState('');\n\n  const handleChange = event => {\n    setCurrency(event.target.value);\n  };\n\n  const handlenoteChange = e => {\n    setNote(e.target.value);\n  };\n\n  const classes = useStyles();\n  const ButtonColor = styled(Button)(({\n    theme\n  }) => ({\n    background: theme.palette.props.main,\n    color: theme.palette.props.contrastText\n  }));\n  const ButtonWarn = styled(Button)(({\n    theme\n  }) => ({\n    background: theme.palette.warning.main,\n    color: theme.palette.warning.contrastText\n  }));\n  const [open, setOpen] = useState(false);\n\n  const handleToopen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = newValue => {\n    setOpen(newValue);\n    const membername = [];\n    const groupname = [];\n    groups.forEach(element => {\n      const checkvalue = checked.indexOf(element.group_id);\n\n      if (checkvalue !== -1) {\n        groupname.push(element.group_name);\n      }\n    });\n\n    if (businessusers.length > 0) {\n      businessusers.forEach(element => {\n        const checkvalue = memberchecked.indexOf(element.user_id);\n\n        if (checkvalue !== -1) {\n          membername.push(`${element.first_name} ${element.last_name}`);\n        }\n      });\n    }\n\n    setGroupname_membersname(groupname.concat(membername));\n    const dataToSend = {\n      mobile_no: phoneNumber.join()\n    };\n\n    if (newValue) {// setValue(newValue);\n    }\n  };\n\n  const handleGroupToggle = value => {\n    const groupMembers = value.group_member_list;\n    const currentIndex = checked.indexOf(value.group_id);\n    const newChecked = [...checked];\n    const selectedmember = [...group_members];\n\n    if (currentIndex === -1) {\n      newChecked.push(value.group_id);\n      groupMembers.forEach(element => {\n        selectedmember.push(element.user_id);\n      });\n    } else {\n      newChecked.splice(currentIndex, 1);\n      groupMembers.forEach(element => {\n        const remomeitem = selectedmember.indexOf(element.user_id);\n        selectedmember.splice(remomeitem, 1);\n      });\n    }\n\n    const formvalidation = { ...formValidation\n    };\n    formvalidation.eventForm_to = '';\n    setFormValidation(formvalidation);\n    setFormValue({ ...formValue,\n      eventForm_to: '@'\n    });\n    setChecked(newChecked);\n    setGroup_members(selectedmember);\n  };\n\n  const handleMemberToggle = value => {\n    const currentIndex = memberchecked.indexOf(value.user_id);\n    const newChecked = [...memberchecked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value.user_id);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    const formvalidation = { ...formValidation\n    };\n    setFormValue({ ...formValue,\n      eventForm_to: '@'\n    });\n    formvalidation.eventForm_to = '';\n    setFormValidation(formvalidation);\n    setMemberchecked(newChecked);\n  };\n  /*\n  useMemo(() => {\n    alert('sddd');\n      setFormValue({ ...formValue, message:bookdetails[0].message  })\n   }, [bookdetails])\n  */\n\n\n  const validate = () => {\n    const formvalidation = { ...formValidation\n    };\n    let isError = false;\n\n    if (!formValue.message) {\n      isError = true;\n      formvalidation.message = 'Please add some message';\n      setFormValidation(formvalidation);\n    }\n\n    if (!formValue.subject) {\n      isError = true;\n      formvalidation.subject = 'Please add some subject';\n      setFormValidation(formvalidation);\n    } // if (!formValue.eventForm_to) {\n    //   isError = true\n    //   formvalidation.eventForm_to = 'Please add contact'\n    //   setFormValidation(formvalidation)\n    // }\n\n\n    if (groupname_membersname.length == 0) {\n      isError = true;\n      formvalidation.eventForm_to = 'Please add contact';\n      setFormValidation(formvalidation);\n    }\n\n    if (!formValue.set_date) {\n      isError = true;\n      formvalidation.set_date = 'Please Select valid Date';\n      setFormValidation(formvalidation);\n    }\n\n    return isError;\n  };\n\n  const handleToTagvalue = value => {\n    setPhoneNumber(value);\n  }; //dynamic field validation\n\n  /*\n  const dynamicValidate_old = () => {\n  const dynamicFormVal = [...dynamicFormValidation ]\n    const form_filed_change_val = [...saveInputList]\n  let isError = false\n  for (var i = 0; i < dynamicFormVal.length; i++) {\n    if(!form_filed_change_val[i].meetingDate){\n    isError = true\n    dynamicFormVal[i].meetingDate = 'This field is isRequired to select future date'\n    setDynamicFormValidation(dynamicFormVal)\n    }\n    if(!form_filed_change_val[i].endTime){\n    isError = true\n    dynamicFormVal[i].endTime = 'This field is isRequired'\n    setDynamicFormValidation(dynamicFormVal)\n    }\n    if(!form_filed_change_val[i].startTime){\n    isError = true\n    dynamicFormVal[i].startTime = 'This field is isRequired'\n    setDynamicFormValidation(dynamicFormVal)\n    }\n  }\n    return isError\n  };\n  */\n  //dynamic field validation\n\n\n  const dynamicValidate = () => {\n    const dynamicFormVal = [...dynamicFormValidation];\n    const form_filed_change_val = [...saveInputList];\n    let requiredMsg = 'This field is required';\n    let isError = false;\n\n    for (var i = 0; i < dynamicFormVal.length; i++) {\n      let meetingDate = form_filed_change_val[i].meetingDate;\n      let currency = form_filed_change_val[i].currency ? form_filed_change_val[i].currency : 0;\n      let startTime = form_filed_change_val[i].startTime;\n      let endTime = form_filed_change_val[i].endTime;\n      let breakStartTime = form_filed_change_val[i].breakStartTime;\n      let breakEndTime = form_filed_change_val[i].breakEndTime;\n      let breakStatus = form_filed_change_val[i].breakStatus;\n\n      if (!meetingDate) {\n        isError = true;\n        dynamicFormVal[i].meetingDate = requiredMsg;\n        setDynamicFormValidation(dynamicFormVal);\n      } // if(currency<1){\n      //   isError = true\n      //   dynamicFormVal[i].currency = requiredMsg\n      //   setDynamicFormValidation(dynamicFormVal)\n      // }\n\n\n      if (!startTime) {\n        isError = true;\n        dynamicFormVal[i].startTime = requiredMsg;\n        setDynamicFormValidation(dynamicFormVal);\n      }\n\n      if (!endTime) {\n        isError = true;\n        dynamicFormVal[i].endTime = requiredMsg;\n        setDynamicFormValidation(dynamicFormVal);\n      }\n\n      if (startTime && endTime) {\n        let currencyVal = currency < 10 ? currency * 60 : currency;\n        let slotDuration = '0:' + currencyVal;\n        let startTimeSec = getSeconds(startTime);\n        let endTimeSec = getSeconds(endTime);\n        let startTimeSlotDurSec = startTimeSec + getSeconds(slotDuration);\n\n        if (currencyVal) {\n          if (endTimeSec <= startTimeSlotDurSec) {\n            isError = true;\n            dynamicFormVal[i].endTime = 'End Time must be grater than addition of Start Time & Slot Duration';\n            setDynamicFormValidation(dynamicFormVal);\n          }\n        }\n\n        if (breakStatus == 1 && breakEndTime && breakStartTime) {\n          let breakStartTime = getSeconds(breakStartTime);\n          let breakEndTimeSec = getSeconds(breakEndTime);\n\n          if (breakStartTime < startTimeSec || breakStartTime > endTimeSec || breakEndTimeSec < startTimeSec || breakEndTimeSec > endTimeSec) {\n            isError = true;\n            dynamicFormVal[i].breakEndTimeSec = 'Please select break time between above Start Time and End Time';\n            setDynamicFormValidation(dynamicFormVal);\n          }\n\n          if (breakStartTime < breakEndTimeSec) {\n            isError = true;\n            dynamicFormVal[i].breakEndTimeSec = 'End Time must be grater than Start Time';\n            setDynamicFormValidation(dynamicFormVal);\n          }\n        }\n      }\n    }\n\n    return isError;\n  };\n\n  const getSeconds = hms => {\n    let hrs = 1;\n    let mins = 1;\n\n    if (typeof hms == 'object') {\n      hms = moment(hms).format('HH:mm');\n      let [hours, minutes] = hms.split(':');\n      hrs = hours * 3600;\n      mins = minutes * 60;\n    } else {\n      let [hours, minutes] = hms.split(':');\n      hrs = hours * 3600;\n      mins = minutes * 60;\n    }\n\n    return hrs + mins;\n  };\n\n  const handleReset = () => {\n    console.log('formValue==', formValue);\n    setFormValue({ ...formValue,\n      EventForm_to_group: '',\n      allow_parents: '',\n      category: '',\n      dynaminc_field: '',\n      eventForm_to: '',\n      message: '',\n      subject: '',\n      subcategory_id: 157,\n      category: 'Appointment'\n    });\n    setCategoryVal('Appointment');\n    setDateChange(moment(new Date()));\n    setGroupname_membersname([]);\n    setMemberchecked([]);\n    setChecked([]);\n    setGroup_members([]);\n    setSaveInputList([{\n      meetingDate: new Date(),\n      currency: '15',\n      startTime: '',\n      endTime: '',\n      breakStatus: '0',\n      breakStartTime: '',\n      breakEndTime: ''\n    }]);\n    setInputList([{\n      meetingDate: new Date(),\n      currency: '15',\n      startTime: new Date(),\n      endTime: new Date(),\n      breakStatus: '0',\n      breakStartTime: new Date(),\n      breakEndTime: new Date(),\n      isbooked_check: 0\n    }]);\n    setDynamicFormValidation([{\n      meetingDate: '',\n      currency: '',\n      startTime: '',\n      endTime: '',\n      breakStatus: '',\n      breakStartTime: '',\n      breakEndTime: ''\n    }]);\n  };\n\n  const handleToSubmit = () => {\n    if (validate()) return false;\n    if (dynamicValidate()) return false;\n    const formFeilds = { ...formValue\n    };\n    formFeilds.dynaminc_field = saveInputList; // if (validate()) return false\n\n    const EventFormField = { ...formFeilds\n    };\n    let tempChecked = [];\n    let tempMemberChecked = [];\n    checked.map((data, i) => {\n      if (!isNaN(data)) {\n        tempChecked.push(data);\n      }\n    }); // if(ID != null) {\n    //   if(bookdetails !==null){\n    //     EventFormField.id = ID\n    //   }\n    // }\n\n    EventFormField.allow_parents = formValue.allow_parents;\n    EventFormField.EventForm_to_group = tempChecked.join();\n    EventFormField.EventForm_group_members_to = [...new Set(group_members)].join();\n    EventFormField.user_id = user_id;\n    EventFormField.user_name = first_name;\n    memberchecked.map((data, i) => {\n      if (!isNaN(data)) {\n        tempMemberChecked.push(data);\n      }\n    });\n    EventFormField.eventForm_to = matched_contact !== null ? tempMemberChecked.join() + ',' + matched_contact.user_id : tempMemberChecked.join();\n    EventFormField.subcategory_id = EventFormField.category ? EventFormField.category : '157';\n    const unmatch = matched_contact ? matched_contact.mobile_no : '';\n    console.log('EventFormField=====', EventFormField); // return false;\n\n    const sendAttachment = '';\n    console.log('EventFormField=====', EventFormField);\n    createEventbook(EventFormField, unmatch, history, sendAttachment);\n  };\n\n  useMemo(() => {\n    error && enqueueSnackbar(error, {\n      variant: 'error'\n    });\n  }, [error]);\n  useMemo(() => {\n    sucessEvent && enqueueSnackbar(sucessEvent, {\n      variant: 'success'\n    });\n  }, [sucessEvent]);\n  useMemo(() => {\n    if (!ID) {\n      const newChecked = [...checked];\n\n      if (member_id != 0 || group_id != 0) {\n        const groupname = [];\n        const membername = [];\n\n        if (group_id != '0') {\n          if (groups.length > 0) {\n            groups.forEach(element => {\n              if (element.group_id == group_id) {\n                groupname.push(element.group_name);\n              }\n            });\n          } else {\n            groupname.push(get_name);\n          }\n\n          newChecked.push(group_id);\n          setChecked(newChecked);\n        } else if (member_id != '0') {\n          if (businessusers.length > 0) {\n            businessusers.forEach(element => {\n              if (element.user_id == member_id) {\n                membername.push(`${element.first_name} ${element.last_name}`);\n              }\n            });\n          } else {\n            membername.push(get_name);\n          }\n\n          newChecked.push(member_id);\n          setMemberchecked(newChecked);\n        }\n\n        setGroupname_membersname(groupname.concat(membername));\n      }\n\n      if (member_id == undefined && group_id == undefined) {\n        const membername = [];\n        const members = [];\n        setMemberchecked(members);\n        setGroupname_membersname(membername);\n      }\n    }\n  }, [groups, businessusers]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FullscreenSpinner, {\n    open: isPageLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1070,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1071,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmationDialogRaw, {\n    open: open,\n    onClose: handleClose,\n    groupdata: groups,\n    memberdata: businessusers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1072,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tabmenu, {\n    groupdata: groups,\n    memberdata: businessusers,\n    handleToggles: handleGroupToggle,\n    checked: checked,\n    handleMemberToggle: handleMemberToggle,\n    memberchecked: memberchecked,\n    handleToTagvalue: handleToTagvalue,\n    group_members: group_members,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1073,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    className: \"main-wrap-head\",\n    container: true,\n    style: {\n      marginBottom: 20\n    },\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1085,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1086,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TypoHeadStyled, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1087,\n      columnNumber: 13\n    }\n  }, \"New \", /*#__PURE__*/React.createElement(TypoHeadInnerStyled, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1088,\n      columnNumber: 19\n    }\n  }, \" Booking\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1091,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1092,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleReset,\n    size: \"large\",\n    startIcon: /*#__PURE__*/React.createElement(Replay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 105\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1093,\n      columnNumber: 15\n    }\n  }, \"Reset\")))), /*#__PURE__*/React.createElement(PaperStyled, {\n    className: \"main-wrap-body book-cont-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1099,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridStyled, {\n    className: \"booking-content\",\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AutocompleteStyled, {\n    multiple: true,\n    limitTags: 4,\n    id: \"tags-filled\",\n    filterSelectedOptions: false,\n    options: [],\n    freeSolo: true,\n    onChange: (event, newValue) => {\n      let newVal = newValue.toString();\n      let getArray = newVal.split(',');\n      let user_id_arr = [];\n      let group_id_arr = [];\n\n      for (let i = 0; i < getArray.length; i++) {\n        var getNewList = businessusers.find(ele => (ele.first_name + ' ' + ele.last_name).trim() == getArray[i]);\n\n        if (getNewList) {\n          user_id_arr.push(getNewList.user_id);\n        } else {\n          //FOR GROUPS\n          let getNewGroupList = groups.find(ele => ele.group_name == getArray[i]);\n          group_id_arr.push(getNewGroupList.group_id);\n        }\n      }\n\n      setGroup_members(group_id_arr);\n      setGroupname_membersname(newValue); //const formdata = { ...formvalue }\n\n      setChecked(group_id_arr);\n      setMemberchecked(user_id_arr); //formdata.message_group = (user_id_arr.join()) ? user_id_arr.join() :group_id_arr.join();\n      //formdata.to_member = user_id_arr.join();\n      //formdata.to_group = group_id_arr.join();\n\n      /*\n      const EventFormField = { ...formFeilds }\n       EventFormField.EventForm_to_group = user_id_arr.join()\n      EventFormField.EventForm_group_members_to = [...new Set(group_members)].join()\n      EventFormField.user_id = user_id\n      EventFormField.user_name = first_name\n      EventFormField.eventForm_to =*/\n    },\n    value: groupname_membersname,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      label: \"To\",\n      onChange: handleToopen,\n      onClick: handleToopen,\n      error: !!formValidation.eventForm_to,\n      helperText: formValidation.eventForm_to,\n      name: \"eventForm_to\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Subject\",\n    fullWidth: true,\n    variant: \"outlined\",\n    name: \"subject\",\n    value: formValue.subject,\n    onChange: subjectHandleinput,\n    error: !!formValidation.subject,\n    helperText: formValidation.subject,\n    className: \"mb-40\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    select: true,\n    label: \"Category\",\n    name: \"category\",\n    value: categoryVal,\n    fullWidth: true,\n    onChange: handleCategoryChange,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 15\n    }\n  }, category.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1187,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: option.img,\n    className: classes.categoryIon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1188,\n      columnNumber: 21\n    }\n  }), option.label)))), inputList.map((x, i) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    className: \"comfort-brkCard\",\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1197,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(GridVioletStyled, {\n    className: \"comfort-brkBox\",\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1198,\n      columnNumber: 19\n    }\n  }, inputList.length > 1 && i > 0 && /*#__PURE__*/React.createElement(IconButtonStyled, {\n    color: \"primary\",\n    component: \"span\",\n    size: \"large\",\n    onClick: () => handleRemoveAnotherClick(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 23\n    }\n  }, x.isbooked_check ? true : /*#__PURE__*/React.createElement(Cancel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1206,\n      columnNumber: 52\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    label: \"Meeting Date\",\n    inputVariant: \"outlined\",\n    value: x.meetingDate,\n    onChange: event => handleInputChange('meetingDate', event, i),\n    animateYearScrolling: true,\n    format: \"DD/MM/YYYY\",\n    fullWidth: true,\n    error: !!dynamicFormValidation[i].meetingDate,\n    helperText: dynamicFormValidation[i].meetingDate,\n    disabled: x.isbooked_check ? true : false,\n    disablePast: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1211,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1226,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    select: true,\n    label: \"Slot Duration\",\n    fullWidth: true,\n    value: x.currency,\n    disabled: x.isbooked_check ? true : false,\n    onChange: event => handleInputChange('currency', event, i),\n    variant: \"outlined\",\n    error: !!dynamicFormValidation[i].currency,\n    helperText: dynamicFormValidation[i].currency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1227,\n      columnNumber: 23\n    }\n  }, currencies.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1239,\n      columnNumber: 27\n    }\n  }, option.label)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1246,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    inputVariant: \"outlined\",\n    label: \"Start Time\",\n    value: x.startTime,\n    disabled: x.isbooked_check ? true : false,\n    onChange: event => handleInputChange('startTime', event, i),\n    fullWidth: true,\n    ampm: false,\n    error: !!dynamicFormValidation[i].startTime,\n    helperText: dynamicFormValidation[i].startTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1247,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1259,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    inputVariant: \"outlined\",\n    label: \"End Time\",\n    value: x.endTime,\n    disabled: x.isbooked_check ? true : false,\n    onChange: event => handleInputChange('endTime', event, i),\n    fullWidth: true,\n    ampm: false,\n    error: !!dynamicFormValidation[i].endTime,\n    helperText: dynamicFormValidation[i].endTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1260,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    className: \"comfort-opt\",\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1272,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1273,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"break-txt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1274,\n      columnNumber: 25\n    }\n  }, \"Would you like to create a comfort break for this session?\"), /*#__PURE__*/React.createElement(Box, {\n    className: \"break-status\",\n    style: {\n      marginLeft: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1278,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    className: \"inline-radio\",\n    \"aria-label\": \"breakStatus\",\n    name: \"breakStatus\",\n    value: x.breakStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1279,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: \"radio-lbl\",\n    disabled: x.isbooked_check ? true : false,\n    value: \"Yes\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      onChange: event => handleInputChange('breakStatus', event, i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1289,\n        columnNumber: 40\n      }\n    }),\n    label: \"Yes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1285,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: \"radio-lbl\",\n    disabled: x.isbooked_check ? true : false,\n    value: \"No\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      onChange: event => handleInputChange('breakStatus', event, i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1296,\n        columnNumber: 40\n      }\n    }),\n    label: \"No\",\n    checked: x.breakStatus == 'No' ? 'checked' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1292,\n      columnNumber: 29\n    }\n  }))))), x.breakStatus == 'Yes' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1306,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    inputVariant: \"outlined\",\n    label: \"Start Time\",\n    value: x.breakStartTime,\n    disabled: x.isbooked_check ? true : false,\n    onChange: event => handleInputChange('breakStartTime', event, i),\n    fullWidth: true,\n    ampm: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1307,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1317,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    inputVariant: \"outlined\",\n    label: \"End Time\",\n    value: x.breakEndTime,\n    disabled: x.isbooked_check ? true : false,\n    onChange: event => handleInputChange('breakEndTime', event, i),\n    fullWidth: true,\n    ampm: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1318,\n      columnNumber: 27\n    }\n  }))) : null)), /*#__PURE__*/React.createElement(Grid, {\n    className: \"block_gap\",\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1333,\n      columnNumber: 17\n    }\n  }, inputList.length - 1 === i && i < 4 && /*#__PURE__*/React.createElement(ButtonAddStyled, {\n    startIcon: /*#__PURE__*/React.createElement(AddCircle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1335,\n        columnNumber: 49\n      }\n    }),\n    color: \"primary\",\n    onClick: handleAddAnotherClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1335,\n      columnNumber: 21\n    }\n  }, \"Add another day\"), inputList.length - 1 === i && i < 4 && /*#__PURE__*/React.createElement(Divider, {\n    className: \"mt-30 mb-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1339,\n      columnNumber: 59\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1344,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    label: \"Booking deadline date\",\n    inputVariant: \"outlined\",\n    value: setDate,\n    onChange: handleDateChange,\n    animateYearScrolling: true,\n    name: \"set_date\",\n    format: \"DD/MM/YYYY\",\n    fullWidth: true,\n    error: !!formValidation.set_date,\n    helperText: formValidation.set_date,\n    disablePast: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1345,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mr-30 mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1358,\n      columnNumber: 15\n    }\n  }, \"Setting a deadline date helps contacts to book quickly.\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1377,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CKEditor, {\n    config: ckEditorConfig,\n    editor: Editor,\n    data: formValue.message,\n    name: \"message\",\n    error: !!formValidation.message,\n    onReady: editor => {\n      console.log('Editor is ready to use!', editor);\n    } // onChange={ ( event, editor ) => {\n    //   const data = editor.getData();\n    //   setMessage(data);\n    //   //console.log('formValue====',formValue);\n    //   // console.warn('dataert4545err', data);\n    //   //setFormValue({ ...formValue, message: data })\n    //   //messageHandleinput(data, true)\n    // }}\n    ,\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      setMessage(data);\n    } // onBlur={ ( event, editor ) => {\n    //     console.log( 'Blur.', editor );\n    //     const data = editor.getData();\n    //     setMessage(data);\n    // }}\n    ,\n    onFocus: (event, editor) => {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1378,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1408,\n      columnNumber: 15\n    }\n  }, formValidation.message)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1411,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1412,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonWarn, {\n    className: \"btn-booking\",\n    onClick: handleToSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    startIcon: /*#__PURE__*/React.createElement(Send, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1427,\n        columnNumber: 30\n      }\n    }),\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1421,\n      columnNumber: 17\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1430,\n      columnNumber: 31\n    }\n  }), checkupdate == 1 ? 'Update Booking' : 'Create Booking')))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.bookevent.loading,\n    error: state.bookevent.error,\n    sucessEvent: state.bookevent.sucessEvent,\n    groups: state.bookevent.groups,\n    bookdetails: state.booklist.bookdetails,\n    businessusers: state.bookevent.businessusers,\n    matched_contact: state.bookevent.matched_contact,\n    category: state.bookevent.category\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getGroups: data => dispatch(getGroups(data)),\n    getBookListDetail: data => dispatch(getBookListDetail(data)),\n    getBusinessUsers: data => dispatch(getBusinessUsers(data)),\n    createEventbook: (data, unmatch, history, sendAttachment) => dispatch(createEventbook(data, unmatch, history, sendAttachment)),\n    getCategory: () => dispatch(getCategory())\n  };\n};\n\nCreateEventbook.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  createEventbook: PropTypes.func.isRequired,\n  businessusers: PropTypes.array.isRequired,\n  getBusinessUsers: PropTypes.func.isRequired,\n  getGroups: PropTypes.func.isRequired,\n  getBookListDetail: PropTypes.func.isRequired,\n  matched_contact: PropTypes.any.isRequired,\n  getCategory: PropTypes.any.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(CreateEventbook));","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/Bookings/EventBooking/EventBookingDuplicate.js"],"names":["Visibility","Replay","Send","AddCircle","Cancel","Box","Button","Checkbox","FormControlLabel","Grid","MenuItem","Paper","Switch","TextField","Typography","Radio","RadioGroup","Divider","FormControl","FormLabel","IconButton","DatePicker","MuiPickersUtilsProvider","TimePicker","makeStyles","styled","MomentUtils","Autocomplete","React","useEffect","useMemo","useState","connect","useDispatch","createEventbook","getBusinessUsers","getGroups","getCategory","getBookListDetail","moment","withSnackbar","PropTypes","CircularSpinner","FullscreenSpinner","Tabmenu","ConfirmationDialogRaw","Link","useHistory","useParams","CKEditor","Editor","ckEditorConfig","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","position","categoryIon","height","margin","marginLeft","marginRight","TypoHeadStyled","fontSize","primary","main","textTransform","fontWeight","TypoHeadInnerStyled","PaperStyled","GridStyled","GridVioletStyled","background","borderRadius","minHeight","AutocompleteStyled","alignItems","ButtonAddStyled","currencies","value","label","category","category_id","img","require","IconButtonStyled","error","right","top","cursor","width","FormFields","message","EventForm_to_group","eventForm_to","user_id","user_name","subject","dynaminc_field","allow_parents","set_date","id","CreateEventbook","props","business_code","first_name","last_name","JSON","parse","localStorage","getItem","enqueueSnackbar","sucessEvent","groups","bookdetails","businessusers","loading","matched_contact","formValue","setFormValue","formValidation","setFormValidation","setDate","setDateChange","categoryVal","setCategoryVal","allowParentValue","setAllowParent","getMessage","setMessage","history","date","Date","checked","setChecked","memberchecked","setMemberchecked","group_members","setGroup_members","groupname_membersname","setGroupname_membersname","setEventForm_to","checkupdate","setCheckupdate","showTime","setShowTime","tempTime","setTempTime","isPageLoading","setPageLoading","ID","member_id","group_id","get_name","dataToSend","SendToBusiness","undefined","setTimeout","event_date","add_comment","newChecked","mem_checked","groupname","mobile_name","temp","event_to_group","split","forEach","element","index","push","parseInt","event_to","event_group_name","indexOf","event_mobile_no","filter","x","user","length","data","i","concat","new_meet_data","new_meet_data_frm","dynamic_valid","formdata","formvalidation","subjectHandleinput","e","isEditor","name","target","handleCategoryChange","event","cat_id","subcategory_id","inputList","setInputList","meetingDate","currency","startTime","endTime","breakStatus","breakStartTime","breakEndTime","isbooked_check","saveInputList","setSaveInputList","dynamicFormValidation","setDynamicFormValidation","handleInputChange","fieldName","list","saveList","vali","fieldsArr","fieldVal","saveFieldVal","saveVali","format","console","log","prevValue","currentVal","handleAddAnotherClick","tempBreakStatus","meetDate","getDate","add","addDays","meetDate2","handleRemoveAnotherClick","splice","handleAllowparents","phoneNumber","setPhoneNumber","handleTag","newNumber","Array","from","Set","handleDateChange","selecteddate","setCurrency","note","setNote","handleChange","handlenoteChange","classes","ButtonColor","contrastText","ButtonWarn","warning","open","setOpen","handleToopen","handleClose","newValue","membername","checkvalue","group_name","mobile_no","join","handleGroupToggle","groupMembers","group_member_list","currentIndex","selectedmember","remomeitem","handleMemberToggle","validate","isError","handleToTagvalue","dynamicValidate","dynamicFormVal","form_filed_change_val","requiredMsg","currencyVal","slotDuration","startTimeSec","getSeconds","endTimeSec","startTimeSlotDurSec","breakEndTimeSec","hms","hrs","mins","hours","minutes","handleReset","handleToSubmit","formFeilds","EventFormField","tempChecked","tempMemberChecked","map","isNaN","EventForm_group_members_to","unmatch","sendAttachment","variant","members","marginBottom","newVal","toString","getArray","user_id_arr","group_id_arr","getNewList","find","ele","trim","getNewGroupList","params","option","editor","getData","mapStateToProps","state","bookevent","booklist","mapDispatchToProps","dispatch","propTypes","func","isRequired","bool","array","any"],"mappings":"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","sourcesContent":["import { Visibility, Replay, Send, AddCircle, Cancel } from '@material-ui/icons';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  MenuItem,\n  Paper,\n  Switch,\n  TextField,\n  Typography,\n  Radio,\n  RadioGroup,\n  Divider,\n  FormControl,\n  FormLabel,\n  IconButton,\n} from '@material-ui/core';\nimport { DatePicker, MuiPickersUtilsProvider, TimePicker } from '@material-ui/pickers';\n\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport MomentUtils from '@date-io/moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport React, { useEffect, useMemo, useState } from 'react';\n\nimport { connect, useDispatch } from 'react-redux';\nimport { createEventbook, getBusinessUsers, getGroups, getCategory } from '../../../store/actions/bookevent';\n\nimport { getBookListDetail } from '../../../store/actions/booklist';\n\nimport moment from 'moment';\nimport { withSnackbar } from 'notistack';\nimport PropTypes from 'prop-types';\n\nimport CircularSpinner from '../../../component/CircularSpinner/index';\nimport FullscreenSpinner from '../../../component/FullscreenSpinner/index';\nimport Tabmenu from './Modal/Memberlist';\nimport ConfirmationDialogRaw from './Modal';\nimport { Link, useHistory, useParams } from 'react-router-dom';\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport ckEditorConfig from '../../../helper/ckEditorConfig';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n  },\n  categoryIon: {\n    height: 32,\n    margin: -10,\n    marginLeft: 0,\n    marginRight: 10,\n  },\n}));\n\nconst TypoHeadStyled = styled(Typography)(({ theme }) => ({\n  fontSize: 24,\n  color: theme.palette.primary.main,\n  textTransform: 'uppercase',\n  fontWeight: 'bold',\n}));\n\nconst TypoHeadInnerStyled = styled(TypoHeadStyled)(({ theme }) => ({\n  color: theme.palette.text.primary,\n}));\n\nconst PaperStyled = styled(Paper)({\n  padding: '35px 15px',\n  height: 100 + '%',\n});\n\nconst GridStyled = styled(Grid)(({ theme }) => ({}));\nconst GridVioletStyled = styled(Grid)({\n  padding: '10px 0',\n  height: 100 + '%',\n  background: '#edf8fe',\n  borderRadius: 15,\n  minHeight: 210,\n  position: 'relative',\n});\n\nconst AutocompleteStyled = styled(Autocomplete)({\n  height: 154,\n  '&>div': {\n    margin: 0,\n    '&>div': { height: 154, alignItems: 'flex-start' },\n  },\n});\n\nconst ButtonAddStyled = styled(Button)({\n  fontSize: 16,\n  fontWeight: 'bold',\n  '& svg': {\n    fontSize: '28px !important',\n  },\n});\nconst currencies = [\n  {\n    value: '10',\n    label: '10 Min',\n  },\n  {\n    value: '15',\n    label: '15 Min',\n  },\n  {\n    value: '30',\n    label: '30 Min',\n  },\n  {\n    value: '45',\n    label: '45 Min',\n  },\n  {\n    value: '1',\n    label: '1 Hour',\n  },\n  {\n    value: '2',\n    label: '2 Hour',\n  },\n];\n\nconst category = [\n  {\n    value: 'Parents Evening',\n    label: 'Parents Evening',\n    category_id: 159,\n    img: require('../../../assets/images/parent.png'),\n  },\n  {\n    value: 'Event',\n    label: 'Event',\n    category_id: 158,\n    img: require('../../../assets/images/event.png'),\n  },\n  {\n    value: 'Appointment',\n    label: 'Appointment',\n    category_id: 157,\n    img: require('../../../assets/images/event_blue.png'),\n  },\n];\n\nconst IconButtonStyled = styled(IconButton)(({ theme }) => ({\n  color: theme.palette.error.main,\n  position: 'absolute',\n  right: -15,\n  top: -15,\n  cursor: 'pointer',\n  '& svg': {\n    width: '2.3rem',\n    height: '2.3rem',\n  },\n}));\n\n//form field\nconst FormFields = {\n  message: '',\n  EventForm_to_group: '',\n  eventForm_to: '',\n  user_id: '',\n  user_name: '',\n  subject: '',\n  category: '',\n  dynaminc_field: '',\n  allow_parents: '',\n  set_date: '',\n  id: '',\n};\n\nconst CreateEventbook = (props) => {\n  const { user_id, business_code, first_name, last_name } = JSON.parse(localStorage.getItem('userData'));\n\n  const {\n    enqueueSnackbar,\n    error,\n    sucessEvent,\n    getGroups,\n    getBookListDetail,\n    groups,\n    bookdetails,\n    businessusers,\n    getBusinessUsers,\n    loading,\n    matched_contact,\n    createEventbook,\n    getCategory,\n  } = props;\n\n  const [formValue, setFormValue] = useState(FormFields);\n  const [formValidation, setFormValidation] = useState(FormFields);\n  const [setDate, setDateChange] = useState();\n  const [categoryVal, setCategoryVal] = React.useState('');\n  const [allowParentValue, setAllowParent] = useState('');\n  const [getMessage, setMessage] = useState('');\n  const history = useHistory();\n  const date = new Date();\n  const [checked, setChecked] = useState([]);\n  const [memberchecked, setMemberchecked] = useState([]);\n  const [group_members, setGroup_members] = useState([]);\n  const [groupname_membersname, setGroupname_membersname] = useState([]);\n  const [eventForm_to, setEventForm_to] = useState('');\n\n  const [checkupdate, setCheckupdate] = useState(0);\n  const [showTime, setShowTime] = useState('No');\n  const [tempTime, setTempTime] = useState();\n  const [isPageLoading, setPageLoading] = useState(false);\n\n  //let { ID } = useParams();\n  let { ID, member_id, group_id, get_name } = useParams();\n\n  useEffect(() => {\n    const dataToSend = {\n      user_id,\n      category_id: '',\n    };\n    // props.getcategories(dataToSend)\n    getGroups({ user_id });\n    const SendToBusiness = {\n      user_id,\n      business_code,\n    };\n    getBusinessUsers(SendToBusiness);\n\n    // getCategory();\n\n    if (ID != undefined) {\n      setPageLoading(true);\n      getBookListDetail({ ID, user_id });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (ID != undefined) {\n      if (bookdetails !== null) {\n        setPageLoading(false);\n        setTimeout(() => {\n          setFormValue({\n            id: ID,\n            message: bookdetails[0].message,\n            subject: bookdetails[0].subject,\n            set_date: bookdetails[0].event_date,\n            category: bookdetails[0].category,\n            allow_parents: bookdetails[0].add_comment,\n            eventForm_to: '@',\n          });\n        }, 0);\n\n        if (bookdetails[0].category == '157') {\n          setCategoryVal('Appointment');\n        } else if (bookdetails[0].category == '158') {\n          setCategoryVal('Event');\n        } else if (bookdetails[0].category == '159') {\n          setCategoryVal('Parents Evening');\n        }\n        // setCategoryVal(bookdetails[0].category);\n        //setDateChange(moment(bookdetails[0].event_date));\n        setAllowParent(bookdetails[0].add_comment);\n\n        //this is for popoup\n        const newChecked = [];\n        const mem_checked = [];\n        const groupname = [];\n        const mobile_name = [];\n        var temp = null;\n\n        bookdetails[0].event_to_group.split(',').forEach((element, index) => {\n          newChecked.push(parseInt(element));\n        });\n        bookdetails[0].event_to.split(',').forEach((element, index) => {\n          mem_checked.push(element);\n        });\n\n        if (bookdetails[0].event_group_name != null) {\n          bookdetails[0].event_group_name.split(',').forEach((element, index) => {\n            if (groupname.indexOf(element) === -1) {\n              groupname.push(element);\n            }\n          });\n        }\n        if (bookdetails[0].event_mobile_no != null) {\n          bookdetails[0].event_mobile_no.split(',').forEach((element, index) => {\n            temp = businessusers.filter((x) => element.user_id == element);\n            // if(mobile_name.indexOf(element) === -1) {mobile_name.push(element)};\n          });\n          if (temp) {\n            bookdetails[0].user &&\n              bookdetails[0].user.length > 0 &&\n              bookdetails[0].user.forEach((data, i) => {\n                mobile_name.push(data.user_name);\n              });\n          }\n        }\n\n        setChecked(newChecked);\n        setMemberchecked(mem_checked);\n        setGroupname_membersname(groupname.concat(mobile_name));\n        //popup end\n\n        //dynamic eleent start\n        var new_meet_data = [];\n        var new_meet_data_frm = [];\n        var dynamic_valid = [];\n\n        // bookdetails[0].meeting_data.forEach((element, index) => {\n        // // list[index][fieldName]    = fieldVal\n        // let innerObj = {};\n        // let innerObj_frm={};\n        // let  innerObj_valid={};\n\n        // innerObj['meetingDate'] = moment(element.meeting_date);\n        // innerObj['startTime']   = moment(element.meeting_date+' '+element.meeting_time_start);\n        // innerObj['endTime']     = moment(element.meeting_date+' '+element.meeting_time_end);\n        // innerObj['currency']    = element.meeting_slot;\n        // innerObj['breakStatus']    = element.comfort_break;\n        // innerObj['breakStartTime'] = moment(element.meeting_date+' '+element.meeting_time_start1);\n        // innerObj['breakEndTime']   = moment(element.meeting_date+' '+element.meeting_time_end1);\n        // innerObj['isbooked_check']   = element.is_slot_book;\n\n        // innerObj_frm['meetingDate'] = element.meeting_date;\n        // innerObj_frm['startTime']   = element.meeting_date+' '+element.meeting_time_start;\n        // innerObj_frm['endTime']     = element.meeting_date+' '+element.meeting_time_end;\n        // innerObj_frm['currency']    = element.meeting_slot;\n        // innerObj_frm['breakStatus']    = element.comfort_break;\n        // innerObj_frm['breakStartTime'] =element.meeting_date+' '+element.meeting_time_start1;\n        // innerObj_frm['breakEndTime']   =element.meeting_date+' '+element.meeting_time_end1;\n\n        // innerObj_valid['meetingDate'] = '';\n        // innerObj_valid['startTime']   = '';\n        // innerObj_valid['endTime']     = '';\n        // innerObj_valid['currency']    = '';\n        // innerObj_valid['breakStatus']    = '';\n        // innerObj_valid['breakStartTime'] ='';\n        // innerObj_valid['breakEndTime']   ='';\n\n        // new_meet_data.push(innerObj);\n        // new_meet_data_frm.push(innerObj_frm);\n        // dynamic_valid.push(innerObj_valid);\n        // });\n\n        //setInputList(new_meet_data);\n\n        // setDynamicFormValidation(dynamic_valid);\n        // setSaveInputList(new_meet_data_frm);\n        setAllowParent(bookdetails[0].add_comment);\n        //end of dyamic field\n        setFormValue({ ...formValue, set_date: moment(bookdetails[0].event_date) });\n      }\n    }\n  }, [bookdetails]);\n\n  //  const handleinput = (e, isEditor=null) => {\n  //     const formdata = { ...formValue}\n  //     const formvalidation = { ...formValidation }\n  //     if(!isEditor){\n  //       const { name, value } = e.target;\n  //       if (name === 'message') {\n  //         formdata.message = value\n  //         formvalidation.message = ''\n  //         setFormValidation(formvalidation)\n  //         }else if(name === 'subject'){\n  //         formdata.subject = value\n  //         formvalidation.subject = ''\n  //         setFormValidation(formvalidation)\n  //         }\n  //         else {\n  //           formdata[name] = value\n  //         }\n  //     }\n\n  //     else{\n  //       formdata.message = e\n  //       formvalidation.message = ''\n  //       setFormValidation(formvalidation)\n  //     }\n\n  //     setFormValue(formdata)\n  //   }\n\n  useEffect(() => {\n    const formdata = { ...formValue };\n    const formvalidation = { ...formValidation };\n    formdata.message = getMessage;\n    formvalidation.message = '';\n    setFormValidation(formvalidation);\n    setFormValue(formdata);\n  }, [getMessage]);\n\n  const subjectHandleinput = (e, isEditor = null) => {\n    const formdata = { ...formValue };\n    const formvalidation = { ...formValidation };\n    const { name, value } = e.target;\n    formdata.subject = value;\n    formvalidation.subject = '';\n    setFormValidation(formvalidation);\n    setFormValue(formdata);\n  };\n\n  const handleCategoryChange = (event) => {\n    setCategoryVal(event.target.value);\n    var cat_id = '';\n    if (event.target.value == 'Parents Evening') {\n      cat_id = 159;\n    } else if (event.target.value == 'Event') {\n      cat_id = 158;\n    } else {\n      cat_id = 157;\n    }\n    setFormValue({ ...formValue, subcategory_id: cat_id, category: event.target.value });\n  };\n\n  //start cloneing field\n  // Add remove fields\n  const [inputList, setInputList] = useState([\n    {\n      meetingDate: new Date(),\n      currency: '15',\n      startTime: new Date(),\n      endTime: new Date(),\n      breakStatus: '0',\n      breakStartTime: new Date(),\n      breakEndTime: new Date(),\n      isbooked_check: 0,\n    },\n  ]);\n\n  // Save data array value\n  const [saveInputList, setSaveInputList] = useState([\n    {\n      meetingDate: '',\n      currency: '15',\n      startTime: '',\n      endTime: '',\n      breakStatus: '0',\n      breakStartTime: '',\n      breakEndTime: '',\n    },\n  ]);\n\n  const [dynamicFormValidation, setDynamicFormValidation] = useState([\n    {\n      meetingDate: '',\n      currency: '',\n      startTime: '',\n      endTime: '',\n      breakStatus: '',\n      breakStartTime: '',\n      breakEndTime: '',\n    },\n  ]);\n  // handle input change\n  const handleInputChange = (fieldName, event, index) => {\n    const list = [...inputList];\n    const saveList = [...saveInputList];\n    const vali = [...dynamicFormValidation];\n    const fieldsArr = ['startTime', 'endTime', 'breakStartTime', 'breakEndTime'];\n    var fieldVal = '';\n    var saveFieldVal = '';\n    var saveVali = '';\n    if (fieldName == 'meetingDate') {\n      fieldVal = event;\n      const date = new Date(event);\n      saveFieldVal = moment(date).format('YYYY-MM-DD');\n      saveVali = '';\n    } else if (fieldsArr.indexOf(fieldName) >= 0) {\n      fieldVal = event;\n      const date = new Date(event);\n      saveFieldVal = moment(date).format('HH:mm');\n      console.log('saveFieldVal-',saveFieldVal)\n      // setTempTime(event)\n    } else if (fieldName == 'breakStatus') {\n      let prevValue = list[index][fieldName];\n      let currentVal = prevValue !== event.target.value ? event.target.value : '';\n      fieldVal = currentVal;\n      saveFieldVal = currentVal;\n\n      if (currentVal === 'Yes') {\n        setShowTime('Yes');\n      } else {\n        setShowTime('No');\n      }\n    } else {\n      fieldVal = event.target.value;\n      saveFieldVal = event.target.value;\n      // saveVali=event.target.value\n    }\n\n    list[index][fieldName] = fieldVal;\n    saveList[index][fieldName] = saveFieldVal;\n    vali[index][fieldName] = saveVali;\n\n    setInputList(list);\n    setSaveInputList(saveList);\n    setDynamicFormValidation(vali);\n  };\n\n  // handle click event of the Add button\n  const handleAddAnotherClick = () => {\n    let tempBreakStatus = '0';\n\n    if (inputList.length > 0 && inputList[inputList.length - 1].breakStatus == 'No') {\n      tempBreakStatus = 'No';\n    } else {\n      tempBreakStatus = 'Yes';\n    }\n\n    const date = new Date(tempTime);\n\n    let meetDate = '';\n\n    if (inputList.length > 0) {\n      let getDate = moment(new Date(inputList[inputList.length - 1].meetingDate), 'DD-MM-YYYY').add(1, 'days');\n      meetDate = getDate.format('YYYY-MM-DD');\n    } else {\n      meetDate = new Date().addDays(1);\n    }\n\n    setInputList([\n      ...inputList,\n      {\n        // meetingDate: inputList.length > 0 ? (inputList[inputList.length-1].meetingDate).addDays(1) : new Date().addDays(1),\n        //meetingDate: inputList.length > 0 ? moment(inputList[inputList.length-1].meetingDate, \"DD-MM-YYYY\").add(1, 'days') : new Date().addDays(1),\n        meetingDate: meetDate,\n        currency: inputList.length > 0 ? inputList[inputList.length - 1].currency : '',\n        startTime: inputList.length > 0 ? inputList[inputList.length - 1].startTime : new Date(),\n        endTime: inputList.length > 0 ? inputList[inputList.length - 1].endTime : new Date(),\n        breakStatus: tempBreakStatus,\n        breakStartTime: inputList.length > 0 ? inputList[inputList.length - 1].breakStartTime : new Date(),\n        breakEndTime: inputList.length > 0 ? inputList[inputList.length - 1].breakEndTime : new Date(),\n      },\n    ]);\n\n    let meetDate2 = '';\n    if (saveInputList.length > 0) {\n      let getDate = moment(new Date(saveInputList[saveInputList.length - 1].meetingDate), 'DD-MM-YYYY').add(1, 'days');\n      meetDate2 = getDate.format('YYYY-MM-DD');\n    } else {\n      meetDate2 = new Date().addDays(1);\n    }\n    setSaveInputList([\n      ...saveInputList,\n      {\n        // meetingDate: saveInputList.length > 0 ? (saveInputList[saveInputList.length-1].meetingDate).addDays(1) : new Date().addDays(1),\n        //meetingDate: saveInputList.length > 0 ? moment(saveInputList[saveInputList.length-1].meetingDate, \"DD-MM-YYYY\").add(1, 'days') : new Date().addDays(1),\n        meetingDate: meetDate2,\n        currency: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].currency : '',\n        startTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].startTime : new Date(),\n        endTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].endTime : new Date(),\n        breakStatus: tempBreakStatus,\n        breakStartTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].breakStartTime : new Date(),\n        breakEndTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].breakEndTime : new Date(),\n      },\n    ]);\n    setDynamicFormValidation([\n      ...dynamicFormValidation,\n      {\n        meetingDate: '',\n        currency: '',\n        startTime: '',\n        endTime: '',\n        breakStatus: '',\n        breakStartTime: '',\n        breakEndTime: '',\n      },\n    ]);\n\n    // setSaveInputList([...saveInputList, {\n    //   // meetingDate:'',\n    //   // currency: '',\n    //   // startTime: '',\n    //   // endTime : '',\n    //   // breakStatus: '0',\n    //   // breakStartTime: '',\n    //   // breakEndTime: '',\n    //   meetingDate: inputList.length > 0 ? inputList[inputList.length-1].meetingDate : '',\n    //     currency: inputList.length > 0 ? inputList[inputList.length-1].currency : '',\n    //     startTime: inputList.length > 0 ? inputList[inputList.length-1].startTime : '',\n    //     endTime : inputList.length > 0 ? inputList[inputList.length-1].endTime : '',\n    //     breakStatus: tempBreakStatus,\n    //     breakStartTime: inputList.length > 0 ? inputList[inputList.length-1].breakStartTime : '',\n    //     breakEndTime: inputList.length > 0 ? inputList[inputList.length-1].breakEndTime : '',\n    // }]);\n  };\n\n  // handle click event of the Remove button\n  const handleRemoveAnotherClick = (index) => {\n    const list = [...inputList];\n    const saveList = [...saveInputList];\n    const vali = [...dynamicFormValidation];\n    list.splice(index, 1);\n    saveList.splice(index, 1);\n    vali.splice(index, 1);\n    setInputList(list);\n    setSaveInputList(saveList);\n    setDynamicFormValidation(vali);\n  };\n\n  //end cloning\n\n  const handleAllowparents = (event) => {\n    if (event.target.value === allowParentValue) {\n      setAllowParent('');\n    } else {\n      setAllowParent(event.target.value);\n    }\n    setFormValue({ ...formValue, allow_parents: event.target.value });\n  };\n\n  const [phoneNumber, setPhoneNumber] = useState([]);\n  const handleTag = (e) => {\n    const newNumber = [...phoneNumber, e.target.value];\n    setPhoneNumber(Array.from(new Set(newNumber)));\n  };\n  const handleDateChange = (e) => {\n    const date = new Date(e);\n    const selecteddate = moment(date).format('YYYY-MM-DD');\n    setDateChange(selecteddate);\n    const formvalidation = { ...formValidation };\n    formvalidation.set_date = '';\n    setFormValidation(formvalidation);\n    setFormValue({ ...formValue, set_date: selecteddate });\n  };\n\n  //const [selectedDate, handleDateChange] = useState(new Date())\n  //const [selectedTime, handleTimeChange] = useState(new Date())\n\n  const [currency, setCurrency] = React.useState('10');\n  const [note, setNote] = React.useState('');\n\n  const handleChange = (event) => {\n    setCurrency(event.target.value);\n  };\n  const handlenoteChange = (e) => {\n    setNote(e.target.value);\n  };\n\n  const classes = useStyles();\n\n  const ButtonColor = styled(Button)(({ theme }) => ({\n    background: theme.palette.props.main,\n    color: theme.palette.props.contrastText,\n  }));\n\n  const ButtonWarn = styled(Button)(({ theme }) => ({\n    background: theme.palette.warning.main,\n    color: theme.palette.warning.contrastText,\n  }));\n\n  const [open, setOpen] = useState(false);\n  const handleToopen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (newValue) => {\n    setOpen(newValue);\n    const membername = [];\n    const groupname = [];\n    groups.forEach((element) => {\n      const checkvalue = checked.indexOf(element.group_id);\n      if (checkvalue !== -1) {\n        groupname.push(element.group_name);\n      }\n    });\n\n    if (businessusers.length > 0) {\n      businessusers.forEach((element) => {\n        const checkvalue = memberchecked.indexOf(element.user_id);\n        if (checkvalue !== -1) {\n          membername.push(`${element.first_name} ${element.last_name}`);\n        }\n      });\n    }\n\n    setGroupname_membersname(groupname.concat(membername));\n    const dataToSend = {\n      mobile_no: phoneNumber.join(),\n    };\n    if (newValue) {\n      // setValue(newValue);\n    }\n  };\n\n  const handleGroupToggle = (value) => {\n    const groupMembers = value.group_member_list;\n    const currentIndex = checked.indexOf(value.group_id);\n    const newChecked = [...checked];\n    const selectedmember = [...group_members];\n\n    if (currentIndex === -1) {\n      newChecked.push(value.group_id);\n      groupMembers.forEach((element) => {\n        selectedmember.push(element.user_id);\n      });\n    } else {\n      newChecked.splice(currentIndex, 1);\n      groupMembers.forEach((element) => {\n        const remomeitem = selectedmember.indexOf(element.user_id);\n        selectedmember.splice(remomeitem, 1);\n      });\n    }\n    const formvalidation = { ...formValidation };\n    formvalidation.eventForm_to = '';\n    setFormValidation(formvalidation);\n    setFormValue({ ...formValue, eventForm_to: '@' });\n    setChecked(newChecked);\n    setGroup_members(selectedmember);\n  };\n  const handleMemberToggle = (value) => {\n    const currentIndex = memberchecked.indexOf(value.user_id);\n    const newChecked = [...memberchecked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value.user_id);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    const formvalidation = { ...formValidation };\n    setFormValue({ ...formValue, eventForm_to: '@' });\n    formvalidation.eventForm_to = '';\n    setFormValidation(formvalidation);\n\n    setMemberchecked(newChecked);\n  };\n\n  /*\n useMemo(() => {\n    alert('sddd');\n      setFormValue({ ...formValue, message:bookdetails[0].message  })\n\n  }, [bookdetails])\n*/\n\n  const validate = () => {\n    const formvalidation = { ...formValidation };\n    let isError = false;\n    if (!formValue.message) {\n      isError = true;\n      formvalidation.message = 'Please add some message';\n      setFormValidation(formvalidation);\n    }\n    if (!formValue.subject) {\n      isError = true;\n      formvalidation.subject = 'Please add some subject';\n      setFormValidation(formvalidation);\n    }\n    // if (!formValue.eventForm_to) {\n    //   isError = true\n    //   formvalidation.eventForm_to = 'Please add contact'\n    //   setFormValidation(formvalidation)\n    // }\n    if (groupname_membersname.length == 0) {\n      isError = true;\n      formvalidation.eventForm_to = 'Please add contact';\n      setFormValidation(formvalidation);\n    }\n    if (!formValue.set_date) {\n      isError = true;\n      formvalidation.set_date = 'Please Select valid Date';\n      setFormValidation(formvalidation);\n    }\n\n    return isError;\n  };\n\n  const handleToTagvalue = (value) => {\n    setPhoneNumber(value);\n  };\n\n  //dynamic field validation\n  /*\nconst dynamicValidate_old = () => {\n  const dynamicFormVal = [...dynamicFormValidation ]\n    const form_filed_change_val = [...saveInputList]\n  let isError = false\n  for (var i = 0; i < dynamicFormVal.length; i++) {\n    if(!form_filed_change_val[i].meetingDate){\n    isError = true\n    dynamicFormVal[i].meetingDate = 'This field is isRequired to select future date'\n    setDynamicFormValidation(dynamicFormVal)\n    }\n    if(!form_filed_change_val[i].endTime){\n    isError = true\n    dynamicFormVal[i].endTime = 'This field is isRequired'\n    setDynamicFormValidation(dynamicFormVal)\n    }\n    if(!form_filed_change_val[i].startTime){\n    isError = true\n    dynamicFormVal[i].startTime = 'This field is isRequired'\n    setDynamicFormValidation(dynamicFormVal)\n    }\n  }\n\n\n  return isError\n};\n*/\n  //dynamic field validation\n  const dynamicValidate = () => {\n    const dynamicFormVal = [...dynamicFormValidation];\n    const form_filed_change_val = [...saveInputList];\n\n    let requiredMsg = 'This field is required';\n    let isError = false;\n    for (var i = 0; i < dynamicFormVal.length; i++) {\n      let meetingDate = form_filed_change_val[i].meetingDate;\n      let currency = form_filed_change_val[i].currency ? form_filed_change_val[i].currency : 0;\n      let startTime = form_filed_change_val[i].startTime;\n      let endTime = form_filed_change_val[i].endTime;\n      let breakStartTime = form_filed_change_val[i].breakStartTime;\n      let breakEndTime = form_filed_change_val[i].breakEndTime;\n      let breakStatus = form_filed_change_val[i].breakStatus;\n\n      if (!meetingDate) {\n        isError = true;\n        dynamicFormVal[i].meetingDate = requiredMsg;\n        setDynamicFormValidation(dynamicFormVal);\n      }\n\n      // if(currency<1){\n\n      //   isError = true\n      //   dynamicFormVal[i].currency = requiredMsg\n      //   setDynamicFormValidation(dynamicFormVal)\n      // }\n\n      if (!startTime) {\n        isError = true;\n        dynamicFormVal[i].startTime = requiredMsg;\n        setDynamicFormValidation(dynamicFormVal);\n      }\n\n      if (!endTime) {\n        isError = true;\n        dynamicFormVal[i].endTime = requiredMsg;\n        setDynamicFormValidation(dynamicFormVal);\n      }\n\n      if (startTime && endTime) {\n        let currencyVal = currency < 10 ? currency * 60 : currency;\n        let slotDuration = '0:' + currencyVal;\n        let startTimeSec = getSeconds(startTime);\n        let endTimeSec = getSeconds(endTime);\n        let startTimeSlotDurSec = startTimeSec + getSeconds(slotDuration);\n        if (currencyVal) {\n          if (endTimeSec <= startTimeSlotDurSec) {\n            isError = true;\n            dynamicFormVal[i].endTime = 'End Time must be grater than addition of Start Time & Slot Duration';\n            setDynamicFormValidation(dynamicFormVal);\n          }\n        }\n\n        if (breakStatus == 1 && breakEndTime && breakStartTime) {\n          let breakStartTime = getSeconds(breakStartTime);\n          let breakEndTimeSec = getSeconds(breakEndTime);\n\n          if (\n            breakStartTime < startTimeSec ||\n            breakStartTime > endTimeSec ||\n            breakEndTimeSec < startTimeSec ||\n            breakEndTimeSec > endTimeSec\n          ) {\n            isError = true;\n            dynamicFormVal[i].breakEndTimeSec = 'Please select break time between above Start Time and End Time';\n            setDynamicFormValidation(dynamicFormVal);\n          }\n\n          if (breakStartTime < breakEndTimeSec) {\n            isError = true;\n            dynamicFormVal[i].breakEndTimeSec = 'End Time must be grater than Start Time';\n            setDynamicFormValidation(dynamicFormVal);\n          }\n        }\n      }\n    }\n\n    return isError;\n  };\n\n  const getSeconds = (hms) => {\n    let hrs = 1;\n    let mins = 1;\n\n    if (typeof hms == 'object') {\n      hms = moment(hms).format('HH:mm');\n\n      let [hours, minutes] = hms.split(':');\n\n      hrs = hours * 3600;\n      mins = minutes * 60;\n    } else {\n      let [hours, minutes] = hms.split(':');\n      hrs = hours * 3600;\n      mins = minutes * 60;\n    }\n\n    return hrs + mins;\n  };\n\n  const handleReset = () => {\n    console.log('formValue==', formValue);\n\n    setFormValue({\n      ...formValue,\n      EventForm_to_group: '',\n      allow_parents: '',\n      category: '',\n      dynaminc_field: '',\n      eventForm_to: '',\n      message: '',\n      subject: '',\n      subcategory_id: 157,\n      category: 'Appointment',\n    });\n    setCategoryVal('Appointment');\n    setDateChange(moment(new Date()));\n    setGroupname_membersname([]);\n    setMemberchecked([]);\n    setChecked([]);\n    setGroup_members([]);\n\n    setSaveInputList([\n      {\n        meetingDate: new Date(),\n        currency: '15',\n        startTime: '',\n        endTime: '',\n        breakStatus: '0',\n        breakStartTime: '',\n        breakEndTime: '',\n      },\n    ]);\n    setInputList([\n      {\n        meetingDate: new Date(),\n        currency: '15',\n        startTime: new Date(),\n        endTime: new Date(),\n        breakStatus: '0',\n        breakStartTime: new Date(),\n        breakEndTime: new Date(),\n        isbooked_check: 0,\n      },\n    ]);\n    setDynamicFormValidation([\n      {\n        meetingDate: '',\n        currency: '',\n        startTime: '',\n        endTime: '',\n        breakStatus: '',\n        breakStartTime: '',\n        breakEndTime: '',\n      },\n    ]);\n  };\n  const handleToSubmit = () => {\n    if (validate()) return false;\n    if (dynamicValidate()) return false;\n\n    const formFeilds = { ...formValue };\n    formFeilds.dynaminc_field = saveInputList;\n    // if (validate()) return false\n    const EventFormField = { ...formFeilds };\n\n    let tempChecked = [];\n    let tempMemberChecked = [];\n\n    checked.map((data, i) => {\n      if (!isNaN(data)) {\n        tempChecked.push(data);\n      }\n    });\n\n    // if(ID != null) {\n    //   if(bookdetails !==null){\n    //     EventFormField.id = ID\n    //   }\n    // }\n    EventFormField.allow_parents = formValue.allow_parents;\n    EventFormField.EventForm_to_group = tempChecked.join();\n    EventFormField.EventForm_group_members_to = [...new Set(group_members)].join();\n    EventFormField.user_id = user_id;\n    EventFormField.user_name = first_name;\n\n    memberchecked.map((data, i) => {\n      if (!isNaN(data)) {\n        tempMemberChecked.push(data);\n      }\n    });\n\n    EventFormField.eventForm_to =\n      matched_contact !== null ? tempMemberChecked.join() + ',' + matched_contact.user_id : tempMemberChecked.join();\n    EventFormField.subcategory_id = EventFormField.category ? EventFormField.category : '157';\n\n    const unmatch = matched_contact ? matched_contact.mobile_no : '';\n    console.log('EventFormField=====', EventFormField);\n\n    // return false;\n    const sendAttachment = '';\n    console.log('EventFormField=====', EventFormField);\n    createEventbook(EventFormField, unmatch, history, sendAttachment);\n  };\n\n  useMemo(() => {\n    error && enqueueSnackbar(error, { variant: 'error' });\n  }, [error]);\n\n  useMemo(() => {\n    sucessEvent && enqueueSnackbar(sucessEvent, { variant: 'success' });\n  }, [sucessEvent]);\n\n  useMemo(() => {\n    if (!ID) {\n      const newChecked = [...checked];\n\n      if (member_id != 0 || group_id != 0) {\n        const groupname = [];\n        const membername = [];\n        if (group_id != '0') {\n          if (groups.length > 0) {\n            groups.forEach((element) => {\n              if (element.group_id == group_id) {\n                groupname.push(element.group_name);\n              }\n            });\n          } else {\n            groupname.push(get_name);\n          }\n\n          newChecked.push(group_id);\n          setChecked(newChecked);\n        } else if (member_id != '0') {\n          if (businessusers.length > 0) {\n            businessusers.forEach((element) => {\n              if (element.user_id == member_id) {\n                membername.push(`${element.first_name} ${element.last_name}`);\n              }\n            });\n          } else {\n            membername.push(get_name);\n          }\n\n          newChecked.push(member_id);\n          setMemberchecked(newChecked);\n        }\n\n        setGroupname_membersname(groupname.concat(membername));\n      }\n      if (member_id == undefined && group_id == undefined) {\n        const membername = [];\n        const members = [];\n        setMemberchecked(members);\n        setGroupname_membersname(membername);\n      }\n    }\n  }, [groups, businessusers]);\n\n  return (\n    <>\n      {<FullscreenSpinner open={isPageLoading} />}\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <ConfirmationDialogRaw open={open} onClose={handleClose} groupdata={groups} memberdata={businessusers}>\n          <Tabmenu\n            groupdata={groups}\n            memberdata={businessusers}\n            handleToggles={handleGroupToggle}\n            checked={checked}\n            handleMemberToggle={handleMemberToggle}\n            memberchecked={memberchecked}\n            handleToTagvalue={handleToTagvalue}\n            group_members={group_members}\n          />\n        </ConfirmationDialogRaw>\n\n        <Grid className=\"main-wrap-head\" container style={{ marginBottom: 20 }} alignItems=\"center\">\n          <Grid item xs={7}>\n            <TypoHeadStyled variant=\"h4\">\n              New <TypoHeadInnerStyled component=\"span\"> Booking</TypoHeadInnerStyled>\n            </TypoHeadStyled>\n          </Grid>\n          <Grid item xs={5}>\n            <Box display=\"flex\" justifyContent=\"flex-end\">\n              <Button variant=\"contained\" color=\"primary\" onClick={handleReset} size=\"large\" startIcon={<Replay />}>\n                Reset\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n        <PaperStyled className=\"main-wrap-body book-cont-wrap\">\n          <GridStyled className=\"booking-content\" container spacing={5}>\n            <Grid item xs={6}>\n              <AutocompleteStyled\n                multiple\n                limitTags={4}\n                id=\"tags-filled\"\n                filterSelectedOptions={false}\n                options={[]}\n                freeSolo\n                onChange={(event, newValue) => {\n                  let newVal = newValue.toString();\n                  let getArray = newVal.split(',');\n\n                  let user_id_arr = [];\n                  let group_id_arr = [];\n                  for (let i = 0; i < getArray.length; i++) {\n                    var getNewList = businessusers.find(\n                      (ele) => (ele.first_name + ' ' + ele.last_name).trim() == getArray[i]\n                    );\n\n                    if (getNewList) {\n                      user_id_arr.push(getNewList.user_id);\n                    } else {\n                      //FOR GROUPS\n                      let getNewGroupList = groups.find((ele) => ele.group_name == getArray[i]);\n                      group_id_arr.push(getNewGroupList.group_id);\n                    }\n                  }\n\n                  setGroup_members(group_id_arr);\n                  setGroupname_membersname(newValue);\n\n                  //const formdata = { ...formvalue }\n\n                  setChecked(group_id_arr);\n                  setMemberchecked(user_id_arr);\n\n                  //formdata.message_group = (user_id_arr.join()) ? user_id_arr.join() :group_id_arr.join();\n                  //formdata.to_member = user_id_arr.join();\n                  //formdata.to_group = group_id_arr.join();\n                  /*\n                  const EventFormField = { ...formFeilds }\n\n                  EventFormField.EventForm_to_group = user_id_arr.join()\n                  EventFormField.EventForm_group_members_to = [...new Set(group_members)].join()\n                  EventFormField.user_id = user_id\n                  EventFormField.user_name = first_name\n                  EventFormField.eventForm_to =*/\n                }}\n                value={groupname_membersname}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    variant=\"outlined\"\n                    label=\"To\"\n                    onChange={handleToopen}\n                    onClick={handleToopen}\n                    error={!!formValidation.eventForm_to}\n                    helperText={formValidation.eventForm_to}\n                    name=\"eventForm_to\"\n                  />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                label=\"Subject\"\n                fullWidth\n                variant=\"outlined\"\n                name=\"subject\"\n                value={formValue.subject}\n                onChange={subjectHandleinput}\n                error={!!formValidation.subject}\n                helperText={formValidation.subject}\n                className=\"mb-40\"\n              />\n\n              <TextField\n                select\n                label=\"Category\"\n                name=\"category\"\n                value={categoryVal}\n                fullWidth\n                onChange={handleCategoryChange}\n                variant=\"outlined\"\n              >\n                {category.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    <img src={option.img} className={classes.categoryIon} />\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n\n            {inputList.map((x, i) => (\n              <>\n                <Grid className=\"comfort-brkCard\" item xs={12}>\n                  <GridVioletStyled className=\"comfort-brkBox\" container spacing={5}>\n                    {inputList.length > 1 && i > 0 && (\n                      <IconButtonStyled\n                        color=\"primary\"\n                        component=\"span\"\n                        size=\"large\"\n                        onClick={() => handleRemoveAnotherClick(i)}\n                      >\n                        {x.isbooked_check ? true : <Cancel />}\n                      </IconButtonStyled>\n                    )}\n\n                    <Grid item xs={3}>\n                      <DatePicker\n                        label=\"Meeting Date\"\n                        inputVariant=\"outlined\"\n                        value={x.meetingDate}\n                        onChange={(event) => handleInputChange('meetingDate', event, i)}\n                        animateYearScrolling\n                        format=\"DD/MM/YYYY\"\n                        fullWidth\n                        error={!!dynamicFormValidation[i].meetingDate}\n                        helperText={dynamicFormValidation[i].meetingDate}\n                        disabled={x.isbooked_check ? true : false}\n                        disablePast={true}\n                      />\n                    </Grid>\n\n                    <Grid item xs={3}>\n                      <TextField\n                        select\n                        label=\"Slot Duration\"\n                        fullWidth\n                        value={x.currency}\n                        disabled={x.isbooked_check ? true : false}\n                        onChange={(event) => handleInputChange('currency', event, i)}\n                        variant=\"outlined\"\n                        error={!!dynamicFormValidation[i].currency}\n                        helperText={dynamicFormValidation[i].currency}\n                      >\n                        {currencies.map((option) => (\n                          <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    </Grid>\n\n                    <Grid item xs={3}>\n                      <TimePicker\n                        inputVariant=\"outlined\"\n                        label=\"Start Time\"\n                        value={x.startTime}\n                        disabled={x.isbooked_check ? true : false}\n                        onChange={(event) => handleInputChange('startTime', event, i)}\n                        fullWidth\n                        ampm={false}\n                        error={!!dynamicFormValidation[i].startTime}\n                        helperText={dynamicFormValidation[i].startTime}\n                      />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TimePicker\n                        inputVariant=\"outlined\"\n                        label=\"End Time\"\n                        value={x.endTime}\n                        disabled={x.isbooked_check ? true : false}\n                        onChange={(event) => handleInputChange('endTime', event, i)}\n                        fullWidth\n                        ampm={false}\n                        error={!!dynamicFormValidation[i].endTime}\n                        helperText={dynamicFormValidation[i].endTime}\n                      />\n                    </Grid>\n                    <Grid className=\"comfort-opt\" item xs={6}>\n                      <Box display=\"flex\"  alignItems=\"center\">\n                        <Typography className=\"break-txt\">\n                          Would you like to create a comfort break for this session?\n                        </Typography>\n\n                        <Box className=\"break-status\" style={{marginLeft:'20px'}}>\n                          <RadioGroup\n                            className=\"inline-radio\"\n                            aria-label=\"breakStatus\"\n                            name=\"breakStatus\"\n                            value={x.breakStatus}\n                          >\n                            <FormControlLabel\n                              className=\"radio-lbl\"\n                              disabled={x.isbooked_check ? true : false}\n                              value=\"Yes\"\n                              control={<Radio onChange={(event) => handleInputChange('breakStatus', event, i)} />}\n                              label=\"Yes\"\n                            />\n                            <FormControlLabel\n                              className=\"radio-lbl\"\n                              disabled={x.isbooked_check ? true : false}\n                              value=\"No\"\n                              control={<Radio onChange={(event) => handleInputChange('breakStatus', event, i)} />}\n                              label=\"No\"\n                              checked={x.breakStatus == 'No' ? 'checked' : ''}\n                            />\n                          </RadioGroup>\n                        </Box>\n                      </Box>\n                    </Grid>\n                    {x.breakStatus == 'Yes' ? (\n                      <>\n                        <Grid item xs={3}>\n                          <TimePicker\n                            inputVariant=\"outlined\"\n                            label=\"Start Time\"\n                            value={x.breakStartTime}\n                            disabled={x.isbooked_check ? true : false}\n                            onChange={(event) => handleInputChange('breakStartTime', event, i)}\n                            fullWidth\n                            ampm={false}\n                          />\n                        </Grid>\n                        <Grid item xs={3}>\n                          <TimePicker\n                            inputVariant=\"outlined\"\n                            label=\"End Time\"\n                            value={x.breakEndTime}\n                            disabled={x.isbooked_check ? true : false}\n                            onChange={(event) => handleInputChange('breakEndTime', event, i)}\n                            fullWidth\n                            ampm={false}\n                          />\n                        </Grid>\n                      </>\n                    ) : null}\n                  </GridVioletStyled>\n                </Grid>\n\n                <Grid className=\"block_gap\" item xs={12}>\n                  {inputList.length - 1 === i && i < 4 && (\n                    <ButtonAddStyled startIcon={<AddCircle />} color=\"primary\" onClick={handleAddAnotherClick}>\n                      Add another day\n                    </ButtonAddStyled>\n                  )}\n                  {inputList.length - 1 === i && i < 4 && <Divider className=\"mt-30 mb-20\" />}\n                </Grid>\n              </>\n            ))}\n\n            <Grid item xs={4}>\n              <DatePicker\n                label=\"Booking deadline date\"\n                inputVariant=\"outlined\"\n                value={setDate}\n                onChange={handleDateChange}\n                animateYearScrolling\n                name=\"set_date\"\n                format=\"DD/MM/YYYY\"\n                fullWidth\n                error={!!formValidation.set_date}\n                helperText={formValidation.set_date}\n                disablePast={true}\n              />\n              <Typography className=\"mr-30 mt-10\">Setting a deadline date helps contacts to book quickly.</Typography>\n            </Grid>\n            {/* <Grid className=\"comfort-opt\" item xs={8}>\n              <Box display='flex' alignItems='center'>\n                <Typography className='mr-30'>Allow parents to add a comment to their booking?</Typography>\n                <Box className=\"break-status\">\n                 <RadioGroup className=\"inline-radio\"\n                      aria-label=\"add_comment\"\n                      name=\"add_comment\"\n                      value={allowParentValue}>\n\n                  <FormControlLabel className=\"radio-lbl\"  value='Yes'   control={<Radio onClick={handleAllowparents} color='primary' />} label='Yes' />\n                  <FormControlLabel className=\"radio-lbl\"  value='No'   control={<Radio onClick={handleAllowparents} color='primary' />} label='No' />\n\n                </RadioGroup>\n                </Box>\n              </Box>\n            </Grid> */}\n\n            <Grid item xs={12}>\n              <CKEditor\n                config={ckEditorConfig}\n                editor={Editor}\n                data={formValue.message}\n                name=\"message\"\n                error={!!formValidation.message}\n                onReady={(editor) => {\n                  console.log('Editor is ready to use!', editor);\n                }}\n                // onChange={ ( event, editor ) => {\n                //   const data = editor.getData();\n                //   setMessage(data);\n                //   //console.log('formValue====',formValue);\n                //   // console.warn('dataert4545err', data);\n                //   //setFormValue({ ...formValue, message: data })\n                //   //messageHandleinput(data, true)\n                // }}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  setMessage(data);\n                }}\n                // onBlur={ ( event, editor ) => {\n                //     console.log( 'Blur.', editor );\n                //     const data = editor.getData();\n                //     setMessage(data);\n                // }}\n                onFocus={(event, editor) => {\n                  console.log('Focus.', editor);\n                }}\n              />\n              <p class=\"error\">{formValidation.message}</p>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Box display=\"flex\" justifyContent=\"flex-end\">\n                {/*  <ButtonColor variant='contained' color='primary' size='large' className='mr-30 width180' startIcon={<Visibility />}>\n                  Preview\n                </ButtonColor> */}\n\n                {/*<ButtonWarn variant='contained' color='primary' size='large' startIcon={<Send />}>\n                  Send Rymindr\n                </ButtonWarn>*/}\n\n                <ButtonWarn\n                  className=\"btn-booking\"\n                  onClick={handleToSubmit}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  startIcon={<Send />}\n                  disabled={loading}\n                >\n                  {loading && <CircularSpinner />}\n                  {checkupdate == 1 ? 'Update Booking' : 'Create Booking'}\n                </ButtonWarn>\n              </Box>\n            </Grid>\n          </GridStyled>\n        </PaperStyled>\n      </MuiPickersUtilsProvider>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.bookevent.loading,\n    error: state.bookevent.error,\n    sucessEvent: state.bookevent.sucessEvent,\n    groups: state.bookevent.groups,\n    bookdetails: state.booklist.bookdetails,\n    businessusers: state.bookevent.businessusers,\n    matched_contact: state.bookevent.matched_contact,\n    category: state.bookevent.category,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getGroups: (data) => dispatch(getGroups(data)),\n    getBookListDetail: (data) => dispatch(getBookListDetail(data)),\n    getBusinessUsers: (data) => dispatch(getBusinessUsers(data)),\n    createEventbook: (data, unmatch, history, sendAttachment) =>\n      dispatch(createEventbook(data, unmatch, history, sendAttachment)),\n\n    getCategory: () => dispatch(getCategory()),\n  };\n};\n\nCreateEventbook.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  createEventbook: PropTypes.func.isRequired,\n\n  businessusers: PropTypes.array.isRequired,\n  getBusinessUsers: PropTypes.func.isRequired,\n  getGroups: PropTypes.func.isRequired,\n  getBookListDetail: PropTypes.func.isRequired,\n  matched_contact: PropTypes.any.isRequired,\n  getCategory: PropTypes.any.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(CreateEventbook));\n"]},"metadata":{},"sourceType":"module"}