{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/LiveChat/ChatWindow.js\";\nimport { Attachment, CropOriginal, EmojiEmotions, DoneAll, Send, MoreVert, Close, Edit } from '@material-ui/icons';\nimport { Avatar, Box, Button, Dialog, DialogTitle, Grid, IconButton, InputBase, List, ListItem, ListItemAvatar, ListItemText, Paper, TextField, Typography, Menu, DialogContent, MenuItem } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport CircularSpinner from '../../component/CircularSpinner';\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport GroupDialog from './Modal';\nimport { connect } from 'react-redux';\nimport { getUserAndGroupList } from '../../store/actions/LiveChatActions';\nimport EmojiWindow from './EmojiWindow';\nimport clsx from 'clsx';\nimport Axios from '../../helper/axios';\nimport axios from 'axios';\nimport FileBase64 from 'react-file-base64'; // For firebase chat purpose\n\nimport firebase from 'firebase'; // import firebaseConfig from '../../firebase-chat-config';\n// firebase.initializeApp(firebaseConfig);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative'\n  },\n  rightPanel: {\n    [theme.breakpoints.up('md')]: {\n      display: 'block !important'\n    }\n  }\n}));\nconst AvatarShareStyled = styled(Avatar)({\n  height: 50,\n  width: 50,\n  marginRight: 20\n});\nconst AvatarChatStyled = styled(Avatar)({\n  height: 25,\n  width: 25,\n  marginRight: 10,\n  marginTop: 24\n});\nconst AvatarChatRightStyled = styled(AvatarChatStyled)({\n  marginRight: 0,\n  marginLeft: 10\n});\nconst TypoHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 24,\n  color: theme.palette.primary.main,\n  textTransform: 'uppercase',\n  fontWeight: 'bold'\n}));\nconst TypoHeadInnerStyled = styled(TypoHeadStyled)(({\n  theme\n}) => ({\n  color: theme.palette.text.primary\n}));\nconst SearchFieldStyled = styled(TextField)(() => ({\n  padding: 20\n}));\nconst PaperStyled = styled(Paper)(() => ({\n  paddingRight: 30,\n  paddingLeft: 30,\n  height: 100 + '%'\n}));\nconst GridHeaderStyled = styled(Grid)(() => ({\n  borderBottom: '1px solid rgba(64, 87, 106, 0.1)'\n}));\nconst GridFooterStyled = styled(Grid)(() => ({\n  borderTop: '1px solid rgba(64, 87, 106, 0.1)',\n  paddingTop: 10,\n  paddingBottom: 10\n}));\nconst TypoNameStyled = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.palette.text.primary,\n  fontSize: 14,\n  fontWeight: 'bold'\n}));\nconst TypoMobileStyled = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.palette.text.primary,\n  fontSize: 18 //   fontWeight: 'bold'\n\n}));\nconst TypoStatusStyled = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 14\n}));\nconst ChatBoxStyled = styled(Box)({\n  background: '#F5F5F5',\n  padding: 15,\n  borderRadius: 20,\n  borderTopLeftRadius: 0,\n  display: 'inline-block',\n  marginTop: 5\n});\nconst ChatBoxRightStyled = styled(ChatBoxStyled)({\n  background: '#D1EDFE',\n  borderRadius: 20,\n  borderTopRightRadius: 0\n});\nconst TextFieldStyled = styled(TextField)(({\n  theme\n}) => ({\n  padding: 20,\n  paddingBottom: 0\n}));\nconst ButtonColor = styled(Button)(({\n  theme\n}) => ({\n  background: theme.palette.props.main,\n  color: theme.palette.props.contrastText\n}));\nconst DoneAllStyled = styled(DoneAll)(({\n  theme\n}) => ({\n  color: theme.palette.text.primary,\n  fontSize: 22,\n  float: 'right',\n  marginLeft: 10,\n  '&.active': {\n    color: theme.palette.primary.main\n  }\n}));\nconst BoxDateStyled = styled(Box)(({\n  theme\n}) => ({\n  display: 'block',\n  margin: 'auto',\n  width: 130,\n  background: 'rgba(0, 0, 0, 0.1)',\n  textAlign: 'center',\n  borderRadius: 15,\n  padding: '5px 10px',\n  '& p': {\n    color: '#212121',\n    fontSize: 12,\n    fontWeight: '500'\n  }\n}));\nconst DialogTitleStyled = styled(DialogTitle)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 24px'\n});\nconst TypoPopHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600'\n}));\n\nfunction ChatWindow(props) {\n  const fileBrowse = useRef(null);\n  const imageBrowse = useRef(null);\n  const classes = useStyles(); // Get all the properties\n\n  const {\n    error,\n    success,\n    initChatDetail,\n    loading,\n    chatroom\n  } = props; // To show file browse\n\n  const showFileBrowse = () => {\n    fileBrowse.current.click();\n  }; // To show file browse\n\n\n  const showImageBrowse = () => {\n    imageBrowse.current.click();\n  }; // To upload the selected image\n\n\n  const handleImageSelect = async event => {\n    event.stopPropagation();\n    event.preventDefault();\n    var file = event.target.files[0]; // let formData = new FormData();\n    // formData.append(\"file\", file);\n    // formData.append(\"is_chat\", 1);\n    // await axios({\n    //     method: 'post',\n    //     url: 'https://rymindr.com/RymindrApi/api/notifications',\n    //     data: formData,\n    //     headers: {'Content-Type': 'multipart/form-data' }\n    // })\n    // .then(function (response) {\n    //     sendMessage(response.data.data.files[0], response.data.data.extensions[0]);\n    // });\n\n    const getBase64 = (file, cb) => {\n      //, cb\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        cb(reader.result);\n      };\n\n      reader.onerror = function (error) {\n        console.log('Error: ', error);\n      };\n    };\n\n    getBase64(file, async result => {\n      const fileInfo = {\n        name: file.name,\n        type: file.type,\n        size: Math.round(file.size / 1000) + ' kB',\n        base64: result,\n        file: file\n      };\n      let tempResult = result.replace('data:video/mp4;base64,', '');\n      let tempData = {\n        file: tempResult,\n        is_chat: 1,\n        user_id: user_id\n      };\n      let newFile = await Axios().post('https://rymindr.com/RymindrApi/api/notifications', tempData);\n\n      if (newFile.status == 200) {\n        let ext = newFile.data.substring(newFile.data.lastIndexOf('.') + 1);\n        sendMessage(newFile.data, ext);\n      }\n    });\n    imageBrowse.current.value = '';\n  }; // To upload the selected file\n\n\n  const handleFileSelect = async event => {\n    // event.stopPropagation();\n    // event.preventDefault();\n    var file = event.target.files[0];\n\n    const getBase64 = (file, cb) => {\n      //, cb\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = function () {\n        cb(reader.result);\n      };\n\n      reader.onerror = function (error) {\n        console.log('Error: ', error);\n      };\n    };\n\n    getBase64(file, async result => {\n      const fileInfo = {\n        name: file.name,\n        type: file.type,\n        size: Math.round(file.size / 1000) + ' kB',\n        base64: result,\n        file: file\n      };\n      let tempResult = result;\n      let tempData = {\n        file: tempResult,\n        is_chat: 1,\n        user_id: user_id\n      };\n      let newFile = await Axios().post('https://rymindr.com/RymindrApi/api/notifications', tempData);\n\n      if (newFile.status == 200) {\n        let ext = newFile.data.substring(newFile.data.lastIndexOf('.') + 1);\n        sendMessage(newFile.data, ext);\n      } // sendMessage(newFile, ext);\n      // await axios({\n      //     method: 'post',\n      //     url: 'https://rymindr.com/RymindrApi/api/notifications',\n      //     data: tempData,\n      //     headers: {'Content-Type': 'multipart/form-data' }\n      // })\n      // .then(function (response) {\n      //     if(response.data.length > 0) {\n      //         sendMessage(response.data.data.files[0], response.data.data.extensions[0]);\n      //     }\n      // });\n\n    });\n    fileBrowse.current.value = '';\n  };\n  /* ---------- Chat related code starts ---------- */\n\n\n  var messageRef = firebase.database().ref();\n  useEffect(() => {\n    listenMessages(); // Clear the rendered chat messages when component is unmounted and mounted again\n\n    return () => {\n      if (chatroom !== null) {\n        messageRef.child(chatroom).off();\n        updateReceivedMessages([]);\n      }\n    };\n  }, [chatroom]);\n  const [receivedMessages, updateReceivedMessages] = useState([]);\n  console.log('receivedMessages--', receivedMessages);\n\n  const listenMessages = () => {\n    if (chatroom !== null) {\n      messageRef.child(chatroom) // .limitToLast(10)\n      .on('value', message => {\n        if (message.val() !== null) {\n          // let list = Object.values(message.val());\n          // updateReceivedMessages(list);\n          let messages = message.val();\n          let msgList = [];\n          let dayThingArr = [];\n\n          for (let nodeId in messages) {\n            // To update the read status of message\n            if (messages[nodeId]['message_read_' + user_id] === false) {\n              firebase.database().ref(chatroom).child(nodeId).update({\n                ['message_read_' + user_id]: true\n              });\n            } // Adding nodeid in object\n\n\n            let msgObj = { ...messages[nodeId],\n              ...{\n                nodeId: nodeId\n              }\n            };\n            msgList.push(msgObj);\n          }\n\n          msgList.sort(function (a, b) {\n            return new Date(a.created_at) - new Date(b.created_at);\n          });\n          msgList.map(m => {\n            let _createdAt = new Date(parseInt(m.created_at)).toUTCString();\n\n            _createdAt = _createdAt.split(' ');\n            let formatted = _createdAt[0] + ' ' + _createdAt[1] + ' ' + _createdAt[2];\n            var inputDate = new Date(m.created_at);\n            var todaysDate = new Date();\n\n            if (inputDate.setHours(0, 0, 0, 0) == todaysDate.setHours(0, 0, 0, 0)) {\n              formatted = 'Today';\n            }\n\n            if (dayThingArr.includes(formatted)) {\n              m.dayThing = '';\n            } else {\n              dayThingArr.push(formatted);\n              m.dayThing = formatted;\n            }\n          });\n          console.log('msgList====', msgList);\n          updateReceivedMessages(msgList);\n          setTimeout(() => {\n            var objDiv = document.getElementById('chatBoxCont');\n            objDiv.scrollTop = objDiv.scrollHeight;\n          }, 0);\n        } else {\n          // Remove the existing messages\n          updateReceivedMessages([]);\n        }\n      });\n    }\n  };\n\n  const {\n    user_id,\n    first_name,\n    profile_image,\n    sc_bessi_name\n  } = JSON.parse(localStorage.getItem('userData'));\n  const [chatMessage, handleChatMessage] = useState('');\n\n  const handleMessageSend = () => {\n    if (chatMessage !== '') {\n      if (isEditMsg === true) {\n        if (initChatDetail.chatType === 'individual') {\n          let chatNode = '';\n          let userId = user_id;\n\n          if (initChatDetail.chatParticipant.user_id > userId) {\n            chatNode = `chatroom_individual_${userId}_${initChatDetail.chatParticipant.user_id}/${msgNodeId}`;\n          } else {\n            chatNode = `chatroom_individual_${initChatDetail.chatParticipant.user_id}_${userId}/${msgNodeId}`;\n          } // Remove the node from firebase\n\n\n          firebase.database().ref(chatNode).update({\n            message: chatMessage,\n            is_edited: true\n          });\n        } else {\n          let chatNode = `chatroom_group_${initChatDetail.chatParticipant.group_id}/${msgNodeId}`; // Remove the node from firebase\n\n          firebase.database().ref(chatNode).update({\n            message: chatMessage,\n            is_edited: true\n          });\n        }\n\n        handleChatMessage('');\n        updateIsEditMsg(false);\n        updateMsgAttributes({\n          message: null,\n          messageType: null\n        });\n      } else {\n        sendMessage(chatMessage);\n      }\n    }\n  };\n\n  const handleMessageFormSubmit = event => {\n    event.preventDefault();\n\n    if (chatMessage !== '') {\n      if (isEditMsg === true) {\n        if (initChatDetail.chatType === 'individual') {\n          let chatNode = '';\n          let userId = user_id;\n\n          if (initChatDetail.chatParticipant.user_id > userId) {\n            chatNode = `chatroom_individual_${userId}_${initChatDetail.chatParticipant.user_id}/${msgNodeId}`;\n          } else {\n            chatNode = `chatroom_individual_${initChatDetail.chatParticipant.user_id}_${userId}/${msgNodeId}`;\n          } // Remove the node from firebase\n\n\n          firebase.database().ref(chatNode).update({\n            message: chatMessage,\n            is_edited: true\n          });\n        } else {\n          let chatNode = `chatroom_group_${initChatDetail.chatParticipant.group_id}/${msgNodeId}`; // Remove the node from firebase\n\n          firebase.database().ref(chatNode).update({\n            message: chatMessage,\n            is_edited: true\n          });\n        }\n\n        handleChatMessage('');\n        updateIsEditMsg(false);\n        updateMsgAttributes({\n          message: null,\n          messageType: null\n        });\n      } else {\n        sendMessage(chatMessage);\n      }\n    }\n  };\n\n  const sendMessage = async (message, messageType = 'text') => {\n    console.log('first_name======', first_name);\n    let msg = {};\n\n    if (initChatDetail.chatType === 'individual') {\n      msg = {\n        sender_id: user_id,\n        sender_name: first_name ? first_name : sc_bessi_name,\n        sender_image: profile_image,\n        receiver_id: initChatDetail.chatParticipant.user_id,\n        // receiver_name: initChatDetail.chatParticipant.first_name? initChatDetail.chatParticipant.first_name: initChatDetail.chatParticipant.sc_bessi_name,\n        receiver_name: initChatDetail.chatParticipant.first_name && initChatDetail.chatParticipant.last_name ? initChatDetail.chatParticipant.first_name && initChatDetail.chatParticipant.last_name : initChatDetail.chatParticipant.sc_bessi_name,\n        receiver_image: initChatDetail.chatParticipant.profile_image,\n        message: message,\n        message_type: messageType,\n        ['message_read_' + initChatDetail.chatParticipant.user_id]: false,\n        created_at: firebase.database.ServerValue.TIMESTAMP,\n        is_edited: false\n      }; // Send push notification to receiver.\n\n      let data = {\n        sender_id: user_id,\n        receiver_id: initChatDetail.chatParticipant.user_id,\n        message: messageType == 'text' ? message : 'Attachment'\n      };\n    } else {\n      // Get the group members id's and merge it with msg object\n      let groupMembers = initChatDetail.chatParticipant.group_members;\n      groupMembers = groupMembers.length > 0 ? groupMembers.split(',') : [];\n      let msgReadByMembers = {};\n\n      if (groupMembers.length > 0) {\n        for (let i = 0; i < groupMembers.length; i++) {\n          msgReadByMembers = { ...msgReadByMembers,\n            ...{\n              ['message_read_' + groupMembers[i]]: false\n            }\n          };\n        }\n      }\n\n      msg = {\n        sender_id: user_id,\n        sender_name: first_name,\n        sender_image: profile_image,\n        message: message,\n        message_type: messageType,\n        created_at: firebase.database.ServerValue.TIMESTAMP,\n        is_edited: false,\n        ...msgReadByMembers\n      };\n    }\n\n    let messageRef = firebase.database().ref();\n    messageRef.child(chatroom).push(msg);\n    firebase.database().ref('/chatroom_individual_delete_' + initChatDetail.chatParticipant.user_id + '_' + user_id).on('value', snapshot => {\n      if (snapshot && snapshot.val() && snapshot.val().show == false) {\n        firebase.database().ref('/chatroom_individual_delete_' + initChatDetail.chatParticipant.user_id + '_' + user_id).update({\n          show: true,\n          time: snapshot.val().time\n        });\n      }\n    });\n    firebase.database().ref('/chatroom_individual_delete_' + user_id + '_' + initChatDetail.chatParticipant.user_id).update({\n      show: true,\n      time: firebase.database.ServerValue.TIMESTAMP\n    }); // Send push notification to receiver.\n\n    await Axios().post('notifications', {\n      sender_id: user_id,\n      receiver_id: initChatDetail.chatParticipant.user_id,\n      message: messageType == 'text' ? message : 'Attachment',\n      isFromWeb: 1\n    }); // await Axios().post('notifications/trigger_push_notification', {\n    //     'sender_id': user_id, 'receiver_id': initChatDetail.chatParticipant.user_id, 'message': messageType == 'text' ? message : 'Attachment'\n    // })\n\n    handleChatMessage('');\n  };\n\n  const [showMsgReadDetails, updateShowMsgReadDetails] = useState(false);\n  const [msgReadDetails, updateMsgReadDetails] = useState([]);\n\n  const handleMsgReadDetails = msgReadByMembersList => {\n    updateMsgReadDetails(msgReadByMembersList);\n    updateShowMsgReadDetails(!showMsgReadDetails);\n    setTimeout(() => {\n      var objDiv = document.getElementById('chatBoxCont');\n      objDiv.scrollTop = objDiv.scrollHeight;\n    }, 6000);\n  };\n  /* ---------- Chat related code ends ---------- */\n\n\n  const convertFrom24To12Format = time24 => {\n    //console.log('time24===',time24)\n    if (time24) {\n      const [sHours, minutes] = time24.match(/([0-9]{1,2}):([0-9]{2})/).slice(1);\n      const period = +sHours < 12 ? 'AM' : 'PM';\n      const hours = +sHours % 12 || 12;\n      return `${hours}:${minutes} ${period}`;\n    }\n  }; // To toogle emoji window\n\n\n  const [showEmoji, toggleShowEmoji] = useState(false);\n\n  const handleEmojiClick = emoji => {\n    let msg = chatMessage;\n    handleChatMessage(msg + emoji);\n  };\n\n  const [showGroupMember, handleGroupMember] = useState(false); // To download resource\n\n  const handleDownloadResource = async url => {\n    console.log('message-center===', url);\n    window.open(url, '_blank'); //return false;\n    // const form = document.createElement('form');\n    // const btn = document.createElement('button');\n    // form.appendChild(btn);\n    // form.action = url;\n    // form.method = 'get';\n    // document.body.appendChild(form);\n    // btn.click();\n    // document.body.removeChild(form);\n    //   const image = await fetch(url)\n    // const imageBlog = await image.blob()\n    // const imageURL = URL.createObjectURL(imageBlog)\n    // console.log('message-imageURL===', imageURL);\n    // return false;\n    // const link = document.createElement('a')\n    // link.href = imageURL\n    // link.download = 'dfgdfgdfg.pdf'\n    // document.body.appendChild(link)\n    // link.click()\n    // document.body.removeChild(link)\n  };\n\n  const [openImage, setOpenImage] = React.useState(false);\n  const [selectedImage, setSelectedImage] = React.useState('');\n\n  const handleClickImageOpen = file => {\n    setOpenImage(true);\n    setSelectedImage(file);\n  };\n\n  const handleCloseImageModal = () => {\n    setOpenImage(false);\n  };\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [msgNodeId, updateMsgNodeId] = useState('');\n  const [msgAttributes, updateMsgAttributes] = useState({\n    message: null,\n    messageType: null\n  });\n\n  const handleMenuClick = (event, nodeId, message, messageType) => {\n    setAnchorEl(event.currentTarget);\n    updateMsgNodeId(nodeId);\n    updateMsgAttributes({\n      message: message,\n      messageType: messageType\n    });\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDeleteChatMsg = () => {\n    if (initChatDetail.chatType === 'individual') {\n      let chatNode = '';\n      let userId = user_id;\n\n      if (initChatDetail.chatParticipant.user_id > userId) {\n        chatNode = `chatroom_individual_${userId}_${initChatDetail.chatParticipant.user_id}/${msgNodeId}`;\n      } else {\n        chatNode = `chatroom_individual_${initChatDetail.chatParticipant.user_id}_${userId}/${msgNodeId}`;\n      } // Remove the node from firebase\n\n\n      firebase.database().ref(chatNode).remove();\n    } else {\n      let chatNode = `chatroom_group_${initChatDetail.chatParticipant.group_id}/${msgNodeId}`; // Remove the node from firebase\n\n      firebase.database().ref(chatNode).remove();\n    }\n\n    setAnchorEl(null); // Reset the edit attribute for same message\n\n    handleChatMessage('');\n    updateIsEditMsg(false);\n    updateMsgAttributes({\n      message: null,\n      messageType: null\n    });\n  };\n\n  const [isEditMsg, updateIsEditMsg] = useState(false);\n\n  const handleEditChatMsg = () => {\n    handleChatMessage(msgAttributes.message);\n    updateIsEditMsg(true);\n    setAnchorEl(null);\n  };\n\n  const handleCancelUpdateMsg = () => {\n    handleChatMessage('');\n    updateIsEditMsg(false);\n  };\n\n  const date = new Date();\n  const formattedDate = date.toLocaleDateString('en-GB', {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric'\n  });\n  const that = this;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    className: clsx(classes.rightPanel, 'rightSide-cont'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    open: openImage,\n    onClose: handleCloseImageModal,\n    \"aria-labelledby\": \"form-dialog-title\",\n    maxWidth: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 693,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitleStyled, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TypoPopHeadStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 17\n    }\n  }, \"Attachment\")), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"default\",\n    onClick: handleCloseImageModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Close, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${selectedImage}` // style={{ maxWidth: '-webkit-fill-available' }} \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 15\n    }\n  }), ' '))), /*#__PURE__*/React.createElement(PaperStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridHeaderStyled, {\n    container: true,\n    alignItems: \"center\",\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    style: {\n      margin: 10,\n      marginLeft: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 15\n    }\n  }, initChatDetail.hasOwnProperty('chatType') ? initChatDetail.chatType === 'individual' ? /*#__PURE__*/React.createElement(AvatarShareStyled, {\n    alt: \"profile picture\",\n    src: initChatDetail.chatParticipant.profile_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(AvatarShareStyled, {\n    alt: \"group icon\",\n    src: initChatDetail.chatParticipant.group_icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 21\n    }\n  }) : // <AvatarShareStyled alt=\"profile picture\" src={require('../../assets/images/profile.jpeg')} />\n  null, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TypoNameStyled, {\n    onClick: () => handleGroupMember(!showGroupMember),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 19\n    }\n  }, initChatDetail.hasOwnProperty('chatType') ? initChatDetail.chatType === 'individual' ? initChatDetail.chatParticipant.first_name + ' ' + initChatDetail.chatParticipant.last_name : initChatDetail.chatParticipant.group_name : null), /*#__PURE__*/React.createElement(TypoMobileStyled, {\n    onClick: () => handleGroupMember(!showGroupMember),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 19\n    }\n  }, initChatDetail.hasOwnProperty('chatType') ? initChatDetail.chatType === 'individual' ? initChatDetail.chatParticipant.mobile_no : null : null), initChatDetail.hasOwnProperty('chatType') ? /*#__PURE__*/React.createElement(Dialog, {\n    onClose: () => handleGroupMember(!showGroupMember),\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: showGroupMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 23\n    }\n  }, initChatDetail.chatType === 'individual' ? initChatDetail.chatParticipant.first_name + ' ' + initChatDetail.chatParticipant.last_name : initChatDetail.chatParticipant.group_name), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 23\n    }\n  }, initChatDetail.chatType === 'group' ? initChatDetail.chatParticipant.group_member_list.map((member, memberIndex) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: memberIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: member.profile_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(PersonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 35\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: member.first_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 31\n    }\n  }))) : /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: initChatDetail.chatParticipant.profile_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(PersonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: initChatDetail.chatParticipant.first_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 29\n    }\n  })))) : null, initChatDetail.hasOwnProperty('chatType') ? /*#__PURE__*/React.createElement(Dialog, {\n    onClose: () => updateShowMsgReadDetails(!showMsgReadDetails),\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: showMsgReadDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 23\n    }\n  }, \"Details\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 23\n    }\n  }, initChatDetail.chatType === 'group' ? initChatDetail.chatParticipant.group_member_list.map((member, memberIndex) => {\n    return member.user_id !== user_id ? /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: memberIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: member.profile_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(PersonIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: member.first_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(DoneAllStyled, {\n      className: `${msgReadDetails.includes(member.user_id) ? 'active' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 33\n      }\n    })) : null;\n  }) : /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: initChatDetail.chatParticipant.profile_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(PersonIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: initChatDetail.chatParticipant.first_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 29\n    }\n  })))) : null)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: \"chatBoxCont\",\n    id: \"chatBoxCont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 11\n    }\n  }, loading ? /*#__PURE__*/React.createElement(CircularSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"chatList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    id: \"simple-menu\",\n    className: \"chat-act-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleMenuClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 17\n    }\n  }, // Edit option will be for text message only\n  msgAttributes.messageType === null || msgAttributes.messageType === 'text' ? /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: handleEditChatMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 23\n    }\n  }, \"Edit\") : null, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: handleDeleteChatMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 19\n    }\n  }, \"Delete\")), initChatDetail.hasOwnProperty('chatType') && initChatDetail.chatType === 'individual' ? receivedMessages && receivedMessages.length > 0 ? receivedMessages.map((receivedMessage, receivedMessageIndex) => {\n    function convertTZ(date, tzString) {\n      return new Date((typeof date === 'string' ? new Date(date) : date).toLocaleString('en-US', {\n        timeZone: tzString\n      }));\n    }\n\n    let msgCreatedAt = convertTZ(new Date(parseInt(receivedMessage.created_at)), 'Europe/London'); //let msgCreatedAt = new Date(parseInt(receivedMessage.created_at)).toUTCString();\n\n    let getOnlyTime = new Date(msgCreatedAt).toLocaleTimeString();\n    return receivedMessage.receiver_id == user_id ? /*#__PURE__*/React.createElement(React.Fragment, null, receivedMessage.dayThing ? /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(BoxDateStyled, {\n      alignSelf: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 33\n      }\n    }, receivedMessage.dayThing))) : null, /*#__PURE__*/React.createElement(\"li\", {\n      key: receivedMessageIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      style: {\n        margin: 10,\n        marginLeft: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AvatarChatStyled, {\n      alt: \"profile picture\",\n      src: receivedMessage.sender_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 33\n      }\n    }, receivedMessage.sender_name, \", \", convertFrom24To12Format(getOnlyTime)), console.log('receivedMessage--', receivedMessage), /*#__PURE__*/React.createElement(ChatBoxStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 33\n      }\n    }, // For text message\n    receivedMessage.message_type === 'text' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 39\n      }\n    }, receivedMessage.message) : // For images\n    receivedMessage.message_type === 'jpg' || receivedMessage.message_type === 'jpeg' || receivedMessage.message_type === 'png' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        height: 100,\n        width: 100,\n        cursor: 'pointer'\n      },\n      src: receivedMessage.message,\n      alt: \"image\",\n      onClick: () => handleClickImageOpen(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 43\n      }\n    })) : // For csv files\n    receivedMessage.message_type === 'csv' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/csv.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 45\n      }\n    })) : // For pdf files\n    receivedMessage.message_type === 'pdf' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/pdf.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 47\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 47\n      }\n    })) : // For txt files\n    receivedMessage.message_type === 'txt' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/txt.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 49\n      }\n    })) : // For doc or docx file\n    receivedMessage.message_type === 'doc' || receivedMessage.message_type === 'docx' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/doc.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 51\n      }\n    })) : // For ppt or pptx file\n    receivedMessage.message_type === 'ppt' || receivedMessage.message_type === 'pptx' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/ppt.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952,\n        columnNumber: 53\n      }\n    })) : // For xls or xlsx file\n    receivedMessage.message_type === 'xls' || receivedMessage.message_type === 'xlsx' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/xls.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 55\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 55\n      }\n    })) : // For video file\n    receivedMessage.message_type === 'mp4' || receivedMessage.message_type === '3gp' || receivedMessage.message_type === 'ogg' || receivedMessage.message_type === 'avi' || receivedMessage.message_type === 'mov' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/mp4.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 55\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 55\n      }\n    })) : null))))) : /*#__PURE__*/React.createElement(React.Fragment, null, receivedMessage.dayThing ? /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(BoxDateStyled, {\n      alignSelf: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 33\n      }\n    }, receivedMessage.dayThing))) : null, /*#__PURE__*/React.createElement(\"li\", {\n      key: receivedMessageIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      style: {\n        margin: 10,\n        marginRight: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      justifyContent: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      component: \"p\",\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 33\n      }\n    }, convertFrom24To12Format(getOnlyTime) + ' ', // Message edited icon\n    receivedMessage.is_edited === true ? /*#__PURE__*/React.createElement(Edit, {\n      style: {\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 74\n      }\n    }) : null, /*#__PURE__*/React.createElement(DoneAllStyled, {\n      className: `${receivedMessage['message_read_' + receivedMessage['receiver_id']] ? 'active' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1010,\n        columnNumber: 35\n      }\n    })), console.log('receivedMessage==', receivedMessage), /*#__PURE__*/React.createElement(ChatBoxRightStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 33\n      }\n    }, // For text message\n    receivedMessage.message_type === 'text' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 39\n      }\n    }, receivedMessage.message) : // For images\n    receivedMessage.message_type === 'jpg' || receivedMessage.message_type === 'jpeg' || receivedMessage.message_type === 'png' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        height: 100,\n        width: 100,\n        cursor: 'pointer'\n      },\n      src: receivedMessage.message,\n      alt: \"image\",\n      onClick: () => handleClickImageOpen(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1027,\n        columnNumber: 43\n      }\n    })) : // For csv files\n    receivedMessage.message_type === 'csv' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1036,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/csv.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1037,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 45\n      }\n    })) : // For pdf files\n    receivedMessage.message_type === 'pdf' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1046,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/pdf.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 47\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1052,\n        columnNumber: 47\n      }\n    })) : // For txt files\n    receivedMessage.message_type === 'txt' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/txt.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 49\n      }\n    })) : // For doc or docx file\n    receivedMessage.message_type === 'doc' || receivedMessage.message_type === 'docx' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1067,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/doc.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1068,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 51\n      }\n    })) : // For ppt or pptx file\n    receivedMessage.message_type === 'ppt' || receivedMessage.message_type === 'pptx' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1078,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/ppt.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1079,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1084,\n        columnNumber: 53\n      }\n    })) : // For xls or xlsx file\n    receivedMessage.message_type === 'xls' || receivedMessage.message_type === 'xlsx' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1089,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/xls.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1090,\n        columnNumber: 55\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 55\n      }\n    })) : // For video file\n    receivedMessage.message_type === 'mp4' || receivedMessage.message_type === '3gp' || receivedMessage.message_type === 'ogg' || receivedMessage.message_type === 'avi' || receivedMessage.message_type === 'mov' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1105,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/mp4.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1106,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 57\n      }\n    })) : /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1114,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/file.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1115,\n        columnNumber: 55\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1120,\n        columnNumber: 55\n      }\n    })))), /*#__PURE__*/React.createElement(AvatarChatRightStyled, {\n      alt: \"profile picture\",\n      src: receivedMessage.sender_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1126,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1128,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(MoreVert, {\n      onClick: event => handleMenuClick(event, receivedMessage.nodeId, receivedMessage.message, receivedMessage.message_type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 33\n      }\n    })))));\n  }) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(BoxDateStyled, {\n    alignSelf: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1147,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 25\n    }\n  }, formattedDate))) : receivedMessages && receivedMessages.length > 0 ? receivedMessages.map((receivedMessage, receivedMessageIndex) => {\n    function convertTZ(date, tzString) {\n      return new Date((typeof date === 'string' ? new Date(date) : date).toLocaleString('en-US', {\n        timeZone: tzString\n      }));\n    }\n\n    let msgCreatedAt = convertTZ(new Date(parseInt(receivedMessage.created_at)), 'Europe/London'); //let msgCreatedAt = new Date(parseInt(receivedMessage.created_at)).toUTCString();\n\n    let getOnlyTime = new Date(msgCreatedAt).toLocaleTimeString(); // let msgCreatedAt = new Date(parseInt(receivedMessage.created_at)).toUTCString();\n    // msgCreatedAt = msgCreatedAt.split(' ');\n\n    let groupMembers = [];\n    let msgReadByMembers = [];\n    let msgReadByMembersList = [];\n\n    if (initChatDetail.hasOwnProperty('chatType')) {\n      groupMembers = initChatDetail.chatParticipant.group_members;\n      groupMembers = groupMembers.split(',');\n\n      if (groupMembers.length > 0) {\n        for (let i = 0; i < groupMembers.length; i++) {\n          msgReadByMembers.push(receivedMessage['message_read_' + groupMembers[i]]);\n\n          if (receivedMessage['message_read_' + groupMembers[i]]) {\n            msgReadByMembersList.push(groupMembers[i]);\n          }\n        }\n      }\n    }\n\n    return receivedMessage.sender_id === user_id ? /*#__PURE__*/React.createElement(\"li\", {\n      key: receivedMessageIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      style: {\n        margin: 10,\n        marginRight: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      justifyContent: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1192,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      component: \"p\",\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1193,\n        columnNumber: 29\n      }\n    }, convertFrom24To12Format(getOnlyTime) + ' ', // Message edited icon\n    receivedMessage.is_edited === true ? /*#__PURE__*/React.createElement(Edit, {\n      style: {\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1198,\n        columnNumber: 70\n      }\n    }) : null, /*#__PURE__*/React.createElement(DoneAllStyled, {\n      onClick: () => handleMsgReadDetails(msgReadByMembersList),\n      className: `${msgReadByMembers.includes(false) ? '' : 'active'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1201,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(ChatBoxRightStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1206,\n        columnNumber: 29\n      }\n    }, // For text message\n    receivedMessage.message_type === 'text' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1210,\n        columnNumber: 35\n      }\n    }, receivedMessage.message) : // For images\n    receivedMessage.message_type === 'jpg' || receivedMessage.message_type === 'jpeg' || receivedMessage.message_type === 'png' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1215,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        height: 100,\n        width: 100\n      },\n      src: receivedMessage.message,\n      alt: \"image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1216,\n        columnNumber: 39\n      }\n    })) : // For csv files\n    receivedMessage.message_type === 'csv' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1224,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/csv.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1225,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1230,\n        columnNumber: 41\n      }\n    })) : // For pdf files\n    receivedMessage.message_type === 'pdf' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1234,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/pdf.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1235,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1240,\n        columnNumber: 43\n      }\n    })) : // For txt files\n    receivedMessage.message_type === 'txt' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/txt.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1245,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1250,\n        columnNumber: 45\n      }\n    })) : // For doc or docx file\n    receivedMessage.message_type === 'doc' || receivedMessage.message_type === 'docx' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1254,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/doc.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1255,\n        columnNumber: 47\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 47\n      }\n    })) : // For ppt or pptx file\n    receivedMessage.message_type === 'ppt' || receivedMessage.message_type === 'pptx' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1264,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/ppt.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1265,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1270,\n        columnNumber: 49\n      }\n    })) : // For xls or xlsx file\n    receivedMessage.message_type === 'xls' || receivedMessage.message_type === 'xlsx' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1274,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/xls.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1275,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1280,\n        columnNumber: 51\n      }\n    })) : null)), /*#__PURE__*/React.createElement(AvatarChatRightStyled, {\n      alt: \"profile picture\",\n      src: receivedMessage.sender_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1286,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1288,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(MoreVert, {\n      onClick: event => handleMenuClick(event, receivedMessage.nodeId, receivedMessage.message, receivedMessage.message_type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1289,\n        columnNumber: 29\n      }\n    })))) : /*#__PURE__*/React.createElement(\"li\", {\n      key: receivedMessageIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1303,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      style: {\n        margin: 10,\n        marginLeft: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1304,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AvatarChatStyled, {\n      alt: \"profile picture\",\n      src: receivedMessage.sender_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1305,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1306,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1307,\n        columnNumber: 29\n      }\n    }, receivedMessage.sender_name, \", \", convertFrom24To12Format(getOnlyTime)), /*#__PURE__*/React.createElement(ChatBoxStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 29\n      }\n    }, // For text message\n    receivedMessage.message_type === 'text' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1314,\n        columnNumber: 35\n      }\n    }, receivedMessage.message) : // For images\n    receivedMessage.message_type === 'jpg' || receivedMessage.message_type === 'jpeg' || receivedMessage.message_type === 'png' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1319,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        height: 100,\n        width: 100\n      },\n      src: receivedMessage.message,\n      alt: \"image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1320,\n        columnNumber: 39\n      }\n    })) : // For csv files\n    receivedMessage.message_type === 'csv' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1328,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/csv.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1329,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1334,\n        columnNumber: 41\n      }\n    })) : // For pdf files\n    receivedMessage.message_type === 'pdf' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1338,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/pdf.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1339,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1344,\n        columnNumber: 43\n      }\n    })) : // For txt files\n    receivedMessage.message_type === 'txt' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1348,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/txt.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1349,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1354,\n        columnNumber: 45\n      }\n    })) : // For doc or docx file\n    receivedMessage.message_type === 'doc' || receivedMessage.message_type === 'docx' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1358,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/doc.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1359,\n        columnNumber: 47\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1364,\n        columnNumber: 47\n      }\n    })) : // For ppt or pptx file\n    receivedMessage.message_type === 'ppt' || receivedMessage.message_type === 'pptx' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1368,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/ppt.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1369,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1374,\n        columnNumber: 49\n      }\n    })) : // For xls or xlsx file\n    receivedMessage.message_type === 'xls' || receivedMessage.message_type === 'xlsx' ? /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1378,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../../assets/images/file-extensions-icon/xls.png'),\n      style: {\n        height: 50,\n        width: 50\n      },\n      alt: \"txt-file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1379,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(GetAppIcon, {\n      onClick: () => handleDownloadResource(receivedMessage.message),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1384,\n        columnNumber: 51\n      }\n    })) : null))));\n  }) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1395,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(BoxDateStyled, {\n    alignSelf: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1396,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1397,\n      columnNumber: 23\n    }\n  }, formattedDate))))), /*#__PURE__*/React.createElement(GridFooterStyled, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1407,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"chat-inp-form\",\n    onSubmit: handleMessageFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1408,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: \"emoji-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1409,\n      columnNumber: 15\n    }\n  }, showEmoji && /*#__PURE__*/React.createElement(EmojiWindow, {\n    handleEmojiClick: handleEmojiClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1409,\n      columnNumber: 57\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1410,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"Emoji\",\n    onClick: () => toggleShowEmoji(!showEmoji),\n    className: \"mr-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1411,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(EmojiEmotions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1412,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(InputBase, {\n    className: \"inputChat\",\n    value: chatMessage,\n    onChange: e => handleChatMessage(e.target.value),\n    placeholder: \"Write Message\",\n    inputProps: {\n      'aria-label': 'naked'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1414,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1421,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    ref: fileBrowse,\n    style: {\n      display: 'none'\n    },\n    onChange: handleFileSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1422,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"Attchment\",\n    className: \"mr-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1423,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Attachment, {\n    onClick: showFileBrowse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1424,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    ref: imageBrowse,\n    style: {\n      display: 'none'\n    },\n    onChange: handleImageSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1426,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"Image\",\n    className: \"mr-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1427,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CropOriginal, {\n    onClick: showImageBrowse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1428,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: handleMessageSend,\n    endIcon: /*#__PURE__*/React.createElement(Send, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1435,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1430,\n      columnNumber: 19\n    }\n  }, \"Send\"), isEditMsg ? /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleCancelUpdateMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1440,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Close, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1441,\n      columnNumber: 23\n    }\n  })) : null)))))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.liveChatReducer.loading,\n    error: state.liveChatReducer.error,\n    success: state.liveChatReducer.success,\n    chatroom: state.liveChatReducer.chatroom\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatWindow);","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/LiveChat/ChatWindow.js"],"names":["Attachment","CropOriginal","EmojiEmotions","DoneAll","Send","MoreVert","Close","Edit","Avatar","Box","Button","Dialog","DialogTitle","Grid","IconButton","InputBase","List","ListItem","ListItemAvatar","ListItemText","Paper","TextField","Typography","Menu","DialogContent","MenuItem","PersonIcon","GetAppIcon","makeStyles","styled","CircularSpinner","React","useState","useEffect","useRef","useMemo","GroupDialog","connect","getUserAndGroupList","EmojiWindow","clsx","Axios","axios","FileBase64","firebase","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","position","rightPanel","breakpoints","up","display","AvatarShareStyled","height","width","marginRight","AvatarChatStyled","marginTop","AvatarChatRightStyled","marginLeft","TypoHeadStyled","fontSize","primary","main","textTransform","fontWeight","TypoHeadInnerStyled","SearchFieldStyled","PaperStyled","paddingRight","paddingLeft","GridHeaderStyled","borderBottom","GridFooterStyled","borderTop","paddingTop","paddingBottom","TypoNameStyled","TypoMobileStyled","TypoStatusStyled","contrastText","ChatBoxStyled","background","borderRadius","borderTopLeftRadius","ChatBoxRightStyled","borderTopRightRadius","TextFieldStyled","ButtonColor","props","DoneAllStyled","float","BoxDateStyled","margin","DialogTitleStyled","TypoPopHeadStyled","ChatWindow","fileBrowse","imageBrowse","classes","error","success","initChatDetail","loading","chatroom","showFileBrowse","current","click","showImageBrowse","handleImageSelect","event","stopPropagation","preventDefault","file","target","files","getBase64","cb","reader","FileReader","readAsDataURL","onload","result","onerror","console","log","fileInfo","name","type","size","Math","round","base64","tempResult","replace","tempData","is_chat","user_id","newFile","post","status","ext","data","substring","lastIndexOf","sendMessage","value","handleFileSelect","messageRef","database","ref","listenMessages","child","off","updateReceivedMessages","receivedMessages","on","message","val","messages","msgList","dayThingArr","nodeId","update","msgObj","push","sort","a","b","Date","created_at","map","m","_createdAt","parseInt","toUTCString","split","formatted","inputDate","todaysDate","setHours","includes","dayThing","setTimeout","objDiv","document","getElementById","scrollTop","scrollHeight","first_name","profile_image","sc_bessi_name","JSON","parse","localStorage","getItem","chatMessage","handleChatMessage","handleMessageSend","isEditMsg","chatType","chatNode","userId","chatParticipant","msgNodeId","is_edited","group_id","updateIsEditMsg","updateMsgAttributes","messageType","handleMessageFormSubmit","msg","sender_id","sender_name","sender_image","receiver_id","receiver_name","last_name","receiver_image","message_type","ServerValue","TIMESTAMP","groupMembers","group_members","length","msgReadByMembers","i","snapshot","show","time","isFromWeb","showMsgReadDetails","updateShowMsgReadDetails","msgReadDetails","updateMsgReadDetails","handleMsgReadDetails","msgReadByMembersList","convertFrom24To12Format","time24","sHours","minutes","match","slice","period","hours","showEmoji","toggleShowEmoji","handleEmojiClick","emoji","showGroupMember","handleGroupMember","handleDownloadResource","url","window","open","openImage","setOpenImage","selectedImage","setSelectedImage","handleClickImageOpen","handleCloseImageModal","anchorEl","setAnchorEl","updateMsgNodeId","msgAttributes","handleMenuClick","currentTarget","handleMenuClose","handleDeleteChatMsg","remove","handleEditChatMsg","handleCancelUpdateMsg","date","formattedDate","toLocaleDateString","day","month","year","that","hasOwnProperty","group_icon","group_name","mobile_no","group_member_list","member","memberIndex","Boolean","receivedMessage","receivedMessageIndex","convertTZ","tzString","toLocaleString","timeZone","msgCreatedAt","getOnlyTime","toLocaleTimeString","cursor","require","e","mapStateToProps","state","liveChatReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Attachment, CropOriginal, EmojiEmotions, DoneAll, Send, MoreVert, Close, Edit } from '@material-ui/icons';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  Grid,\n  IconButton,\n  InputBase,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Paper,\n  TextField,\n  Typography,\n  Menu,\n  DialogContent,\n  MenuItem,\n} from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport CircularSpinner from '../../component/CircularSpinner';\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport GroupDialog from './Modal';\nimport { connect } from 'react-redux';\nimport { getUserAndGroupList } from '../../store/actions/LiveChatActions';\nimport EmojiWindow from './EmojiWindow';\nimport clsx from 'clsx';\nimport Axios from '../../helper/axios';\nimport axios from 'axios';\nimport FileBase64 from 'react-file-base64';\n\n// For firebase chat purpose\nimport firebase from 'firebase';\n// import firebaseConfig from '../../firebase-chat-config';\n// firebase.initializeApp(firebaseConfig);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n  },\n  rightPanel: {\n    [theme.breakpoints.up('md')]: {\n      display: 'block !important',\n    },\n  },\n}));\n\nconst AvatarShareStyled = styled(Avatar)({\n  height: 50,\n  width: 50,\n  marginRight: 20,\n});\n\nconst AvatarChatStyled = styled(Avatar)({\n  height: 25,\n  width: 25,\n  marginRight: 10,\n  marginTop: 24,\n});\n\nconst AvatarChatRightStyled = styled(AvatarChatStyled)({\n  marginRight: 0,\n  marginLeft: 10,\n});\n\nconst TypoHeadStyled = styled(Typography)(({ theme }) => ({\n  fontSize: 24,\n  color: theme.palette.primary.main,\n  textTransform: 'uppercase',\n  fontWeight: 'bold',\n}));\n\nconst TypoHeadInnerStyled = styled(TypoHeadStyled)(({ theme }) => ({\n  color: theme.palette.text.primary,\n}));\n\nconst SearchFieldStyled = styled(TextField)(() => ({\n  padding: 20,\n}));\n\nconst PaperStyled = styled(Paper)(() => ({\n  paddingRight: 30,\n  paddingLeft: 30,\n  height: 100 + '%',\n}));\n\nconst GridHeaderStyled = styled(Grid)(() => ({\n  borderBottom: '1px solid rgba(64, 87, 106, 0.1)',\n}));\n\nconst GridFooterStyled = styled(Grid)(() => ({\n  borderTop: '1px solid rgba(64, 87, 106, 0.1)',\n  paddingTop: 10,\n  paddingBottom: 10,\n}));\nconst TypoNameStyled = styled(Typography)(({ theme }) => ({\n  color: theme.palette.text.primary,\n  fontSize: 14,\n  fontWeight: 'bold',\n}));\n\nconst TypoMobileStyled = styled(Typography)(({ theme }) => ({\n  color: theme.palette.text.primary,\n  fontSize: 18,\n  //   fontWeight: 'bold'\n}));\n\nconst TypoStatusStyled = styled(Typography)(({ theme }) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 14,\n}));\n\nconst ChatBoxStyled = styled(Box)({\n  background: '#F5F5F5',\n  padding: 15,\n  borderRadius: 20,\n  borderTopLeftRadius: 0,\n  display: 'inline-block',\n  marginTop: 5,\n});\n\nconst ChatBoxRightStyled = styled(ChatBoxStyled)({\n  background: '#D1EDFE',\n  borderRadius: 20,\n  borderTopRightRadius: 0,\n});\n\nconst TextFieldStyled = styled(TextField)(({ theme }) => ({\n  padding: 20,\n  paddingBottom: 0,\n}));\n\nconst ButtonColor = styled(Button)(({ theme }) => ({\n  background: theme.palette.props.main,\n  color: theme.palette.props.contrastText,\n}));\n\nconst DoneAllStyled = styled(DoneAll)(({ theme }) => ({\n  color: theme.palette.text.primary,\n  fontSize: 22,\n  float: 'right',\n  marginLeft: 10,\n  '&.active': {\n    color: theme.palette.primary.main,\n  },\n}));\n\nconst BoxDateStyled = styled(Box)(({ theme }) => ({\n  display: 'block',\n  margin: 'auto',\n  width: 130,\n  background: 'rgba(0, 0, 0, 0.1)',\n  textAlign: 'center',\n  borderRadius: 15,\n  padding: '5px 10px',\n  '& p': {\n    color: '#212121',\n    fontSize: 12,\n    fontWeight: '500',\n  },\n}));\n\nconst DialogTitleStyled = styled(DialogTitle)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 24px',\n});\nconst TypoPopHeadStyled = styled(Typography)(({ theme }) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600',\n}));\n\nfunction ChatWindow(props) {\n  const fileBrowse = useRef(null);\n  const imageBrowse = useRef(null);\n\n  const classes = useStyles();\n\n  // Get all the properties\n  const { error, success, initChatDetail, loading, chatroom } = props;\n\n  // To show file browse\n  const showFileBrowse = () => {\n    fileBrowse.current.click();\n  };\n  // To show file browse\n  const showImageBrowse = () => {\n    imageBrowse.current.click();\n  };\n\n  // To upload the selected image\n  const handleImageSelect = async (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    var file = event.target.files[0];\n\n    // let formData = new FormData();\n    // formData.append(\"file\", file);\n    // formData.append(\"is_chat\", 1);\n\n    // await axios({\n    //     method: 'post',\n    //     url: 'https://rymindr.com/RymindrApi/api/notifications',\n    //     data: formData,\n    //     headers: {'Content-Type': 'multipart/form-data' }\n    // })\n    // .then(function (response) {\n    //     sendMessage(response.data.data.files[0], response.data.data.extensions[0]);\n    // });\n\n    const getBase64 = (file, cb) => {\n      //, cb\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = function () {\n        cb(reader.result);\n      };\n      reader.onerror = function (error) {\n        console.log('Error: ', error);\n      };\n    };\n\n    getBase64(file, async (result) => {\n      const fileInfo = {\n        name: file.name,\n        type: file.type,\n        size: Math.round(file.size / 1000) + ' kB',\n        base64: result,\n        file: file,\n      };\n\n      let tempResult = result.replace('data:video/mp4;base64,', '');\n\n      let tempData = {\n        file: tempResult,\n        is_chat: 1,\n        user_id: user_id,\n      };\n\n      let newFile = await Axios().post('https://rymindr.com/RymindrApi/api/notifications', tempData);\n\n      if (newFile.status == 200) {\n        let ext = newFile.data.substring(newFile.data.lastIndexOf('.') + 1);\n        sendMessage(newFile.data, ext);\n      }\n    });\n\n    imageBrowse.current.value = '';\n  };\n\n  // To upload the selected file\n  const handleFileSelect = async (event) => {\n    // event.stopPropagation();\n    // event.preventDefault();\n    var file = event.target.files[0];\n\n    const getBase64 = (file, cb) => {\n      //, cb\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = function () {\n        cb(reader.result);\n      };\n      reader.onerror = function (error) {\n        console.log('Error: ', error);\n      };\n    };\n\n    getBase64(file, async (result) => {\n      const fileInfo = {\n        name: file.name,\n        type: file.type,\n        size: Math.round(file.size / 1000) + ' kB',\n        base64: result,\n        file: file,\n      };\n      let tempResult = result\n\n      let tempData = {\n        file: tempResult,\n        is_chat: 1,\n        user_id: user_id,\n      };\n\n      let newFile = await Axios().post('https://rymindr.com/RymindrApi/api/notifications', tempData);\n\n      if (newFile.status == 200) {\n        let ext = newFile.data.substring(newFile.data.lastIndexOf('.') + 1);\n        sendMessage(newFile.data, ext);\n      }\n      // sendMessage(newFile, ext);\n      // await axios({\n      //     method: 'post',\n      //     url: 'https://rymindr.com/RymindrApi/api/notifications',\n      //     data: tempData,\n      //     headers: {'Content-Type': 'multipart/form-data' }\n      // })\n      // .then(function (response) {\n      //     if(response.data.length > 0) {\n      //         sendMessage(response.data.data.files[0], response.data.data.extensions[0]);\n      //     }\n      // });\n    });\n\n    fileBrowse.current.value = '';\n  };\n\n  /* ---------- Chat related code starts ---------- */\n\n  var messageRef = firebase.database().ref();\n\n  useEffect(() => {\n    listenMessages();\n\n    // Clear the rendered chat messages when component is unmounted and mounted again\n    return () => {\n      if (chatroom !== null) {\n        messageRef.child(chatroom).off();\n        updateReceivedMessages([]);\n      }\n    };\n  }, [chatroom]);\n  const [receivedMessages, updateReceivedMessages] = useState([]);\n  console.log('receivedMessages--',receivedMessages)\n  const listenMessages = () => {\n    if (chatroom !== null) {\n      messageRef\n        .child(chatroom)\n        // .limitToLast(10)\n        .on('value', (message) => {\n          if (message.val() !== null) {\n            // let list = Object.values(message.val());\n            // updateReceivedMessages(list);\n\n            let messages = message.val();\n            let msgList = [];\n            let dayThingArr = [];\n            for (let nodeId in messages) {\n              // To update the read status of message\n              if (messages[nodeId]['message_read_' + user_id] === false) {\n                firebase\n                  .database()\n                  .ref(chatroom)\n                  .child(nodeId)\n                  .update({ ['message_read_' + user_id]: true });\n              }\n\n              // Adding nodeid in object\n              let msgObj = { ...messages[nodeId], ...{ nodeId: nodeId } };\n              msgList.push(msgObj);\n            }\n\n            msgList.sort(function (a, b) {\n              return new Date(a.created_at) - new Date(b.created_at);\n            });\n\n            msgList.map((m) => {\n              let _createdAt = new Date(parseInt(m.created_at)).toUTCString();\n              _createdAt = _createdAt.split(' ');\n              let formatted = _createdAt[0] + ' ' + _createdAt[1] + ' ' + _createdAt[2];\n\n              var inputDate = new Date(m.created_at);\n\n              var todaysDate = new Date();\n\n              if (inputDate.setHours(0, 0, 0, 0) == todaysDate.setHours(0, 0, 0, 0)) {\n                formatted = 'Today';\n              }\n\n              if (dayThingArr.includes(formatted)) {\n                m.dayThing = '';\n              } else {\n                dayThingArr.push(formatted);\n                m.dayThing = formatted;\n              }\n            });\n            console.log('msgList====', msgList);\n            updateReceivedMessages(msgList);\n            setTimeout(() => {\n              var objDiv = document.getElementById('chatBoxCont');\n              objDiv.scrollTop = objDiv.scrollHeight;\n            }, 0);\n          } else {\n            // Remove the existing messages\n            updateReceivedMessages([]);\n          }\n        });\n    }\n  };\n\n  const { user_id, first_name, profile_image, sc_bessi_name } = JSON.parse(localStorage.getItem('userData'));\n  const [chatMessage, handleChatMessage] = useState('');\n\n  const handleMessageSend = () => {\n    if (chatMessage !== '') {\n      if (isEditMsg === true) {\n        if (initChatDetail.chatType === 'individual') {\n          let chatNode = '';\n          let userId = user_id;\n          if (initChatDetail.chatParticipant.user_id > userId) {\n            chatNode = `chatroom_individual_${userId}_${initChatDetail.chatParticipant.user_id}/${msgNodeId}`;\n          } else {\n            chatNode = `chatroom_individual_${initChatDetail.chatParticipant.user_id}_${userId}/${msgNodeId}`;\n          }\n\n          // Remove the node from firebase\n          firebase.database().ref(chatNode).update({ message: chatMessage, is_edited: true });\n        } else {\n          let chatNode = `chatroom_group_${initChatDetail.chatParticipant.group_id}/${msgNodeId}`;\n\n          // Remove the node from firebase\n          firebase.database().ref(chatNode).update({ message: chatMessage, is_edited: true });\n        }\n\n        handleChatMessage('');\n        updateIsEditMsg(false);\n        updateMsgAttributes({ message: null, messageType: null });\n      } else {\n        sendMessage(chatMessage);\n      }\n    }\n  };\n\n  const handleMessageFormSubmit = (event) => {\n    event.preventDefault();\n\n    if (chatMessage !== '') {\n      if (isEditMsg === true) {\n        if (initChatDetail.chatType === 'individual') {\n          let chatNode = '';\n          let userId = user_id;\n          if (initChatDetail.chatParticipant.user_id > userId) {\n            chatNode = `chatroom_individual_${userId}_${initChatDetail.chatParticipant.user_id}/${msgNodeId}`;\n          } else {\n            chatNode = `chatroom_individual_${initChatDetail.chatParticipant.user_id}_${userId}/${msgNodeId}`;\n          }\n\n          // Remove the node from firebase\n          firebase.database().ref(chatNode).update({ message: chatMessage, is_edited: true });\n        } else {\n          let chatNode = `chatroom_group_${initChatDetail.chatParticipant.group_id}/${msgNodeId}`;\n\n          // Remove the node from firebase\n          firebase.database().ref(chatNode).update({ message: chatMessage, is_edited: true });\n        }\n\n        handleChatMessage('');\n        updateIsEditMsg(false);\n        updateMsgAttributes({ message: null, messageType: null });\n      } else {\n        sendMessage(chatMessage);\n      }\n    }\n  };\n\n  const sendMessage = async (message, messageType = 'text') => {\n    console.log('first_name======', first_name);\n\n    let msg = {};\n    if (initChatDetail.chatType === 'individual') {\n      msg = {\n        sender_id: user_id,\n        sender_name: first_name ? first_name : sc_bessi_name,\n        sender_image: profile_image,\n        receiver_id: initChatDetail.chatParticipant.user_id,\n        // receiver_name: initChatDetail.chatParticipant.first_name? initChatDetail.chatParticipant.first_name: initChatDetail.chatParticipant.sc_bessi_name,\n        receiver_name:\n          initChatDetail.chatParticipant.first_name && initChatDetail.chatParticipant.last_name\n            ? initChatDetail.chatParticipant.first_name && initChatDetail.chatParticipant.last_name\n            : initChatDetail.chatParticipant.sc_bessi_name,\n        receiver_image: initChatDetail.chatParticipant.profile_image,\n        message: message,\n        message_type: messageType,\n        ['message_read_' + initChatDetail.chatParticipant.user_id]: false,\n        created_at: firebase.database.ServerValue.TIMESTAMP,\n        is_edited: false,\n      };\n      // Send push notification to receiver.\n      let data = {\n        sender_id: user_id,\n        receiver_id: initChatDetail.chatParticipant.user_id,\n        message: messageType == 'text' ? message : 'Attachment',\n      };\n    } else {\n      // Get the group members id's and merge it with msg object\n      let groupMembers = initChatDetail.chatParticipant.group_members;\n      groupMembers = groupMembers.length > 0 ? groupMembers.split(',') : [];\n      let msgReadByMembers = {};\n      if (groupMembers.length > 0) {\n        for (let i = 0; i < groupMembers.length; i++) {\n          msgReadByMembers = { ...msgReadByMembers, ...{ ['message_read_' + groupMembers[i]]: false } };\n        }\n      }\n\n      msg = {\n        sender_id: user_id,\n        sender_name: first_name,\n        sender_image: profile_image,\n        message: message,\n        message_type: messageType,\n        created_at: firebase.database.ServerValue.TIMESTAMP,\n        is_edited: false,\n        ...msgReadByMembers,\n      };\n    }\n\n    let messageRef = firebase.database().ref();\n    messageRef.child(chatroom).push(msg);\n\n    firebase\n      .database()\n      .ref('/chatroom_individual_delete_' + initChatDetail.chatParticipant.user_id + '_' + user_id)\n      .on('value', (snapshot) => {\n        if (snapshot && snapshot.val() && snapshot.val().show == false) {\n          firebase\n            .database()\n            .ref('/chatroom_individual_delete_' + initChatDetail.chatParticipant.user_id + '_' + user_id)\n            .update({ show: true, time: snapshot.val().time });\n        }\n      });\n\n    firebase\n      .database()\n      .ref('/chatroom_individual_delete_' + user_id + '_' + initChatDetail.chatParticipant.user_id)\n      .update({ show: true, time: firebase.database.ServerValue.TIMESTAMP });\n\n    // Send push notification to receiver.\n    await Axios().post('notifications', {\n      sender_id: user_id,\n      receiver_id: initChatDetail.chatParticipant.user_id,\n      message: messageType == 'text' ? message : 'Attachment',\n      isFromWeb: 1,\n    });\n\n    // await Axios().post('notifications/trigger_push_notification', {\n    //     'sender_id': user_id, 'receiver_id': initChatDetail.chatParticipant.user_id, 'message': messageType == 'text' ? message : 'Attachment'\n    // })\n\n    handleChatMessage('');\n  };\n\n  const [showMsgReadDetails, updateShowMsgReadDetails] = useState(false);\n  const [msgReadDetails, updateMsgReadDetails] = useState([]);\n  const handleMsgReadDetails = (msgReadByMembersList) => {\n    updateMsgReadDetails(msgReadByMembersList);\n    updateShowMsgReadDetails(!showMsgReadDetails);\n\n    setTimeout(() => {\n      var objDiv = document.getElementById('chatBoxCont');\n      objDiv.scrollTop = objDiv.scrollHeight;\n    }, 6000);\n  };\n\n  /* ---------- Chat related code ends ---------- */\n\n  const convertFrom24To12Format = (time24) => {\n    //console.log('time24===',time24)\n\n    if (time24) {\n      const [sHours, minutes] = time24.match(/([0-9]{1,2}):([0-9]{2})/).slice(1);\n      const period = +sHours < 12 ? 'AM' : 'PM';\n      const hours = +sHours % 12 || 12;\n      return `${hours}:${minutes} ${period}`;\n    }\n  };\n\n  // To toogle emoji window\n  const [showEmoji, toggleShowEmoji] = useState(false);\n\n  const handleEmojiClick = (emoji) => {\n    let msg = chatMessage;\n    handleChatMessage(msg + emoji);\n  };\n\n  const [showGroupMember, handleGroupMember] = useState(false);\n\n  // To download resource\n  const handleDownloadResource = async (url) => {\n    console.log('message-center===', url);\n    window.open(url, '_blank');\n    //return false;\n    // const form = document.createElement('form');\n    // const btn = document.createElement('button');\n    // form.appendChild(btn);\n    // form.action = url;\n    // form.method = 'get';\n    // document.body.appendChild(form);\n    // btn.click();\n    // document.body.removeChild(form);\n    //   const image = await fetch(url)\n    // const imageBlog = await image.blob()\n    // const imageURL = URL.createObjectURL(imageBlog)\n    // console.log('message-imageURL===', imageURL);\n    // return false;\n    // const link = document.createElement('a')\n    // link.href = imageURL\n    // link.download = 'dfgdfgdfg.pdf'\n    // document.body.appendChild(link)\n    // link.click()\n    // document.body.removeChild(link)\n  };\n\n  const [openImage, setOpenImage] = React.useState(false);\n  const [selectedImage, setSelectedImage] = React.useState('');\n\n  const handleClickImageOpen = (file) => {\n    setOpenImage(true);\n    setSelectedImage(file);\n  };\n\n  const handleCloseImageModal = () => {\n    setOpenImage(false);\n  };\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [msgNodeId, updateMsgNodeId] = useState('');\n  const [msgAttributes, updateMsgAttributes] = useState({ message: null, messageType: null });\n  const handleMenuClick = (event, nodeId, message, messageType) => {\n    setAnchorEl(event.currentTarget);\n\n    updateMsgNodeId(nodeId);\n    updateMsgAttributes({ message: message, messageType: messageType });\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDeleteChatMsg = () => {\n    if (initChatDetail.chatType === 'individual') {\n      let chatNode = '';\n      let userId = user_id;\n      if (initChatDetail.chatParticipant.user_id > userId) {\n        chatNode = `chatroom_individual_${userId}_${initChatDetail.chatParticipant.user_id}/${msgNodeId}`;\n      } else {\n        chatNode = `chatroom_individual_${initChatDetail.chatParticipant.user_id}_${userId}/${msgNodeId}`;\n      }\n\n      // Remove the node from firebase\n      firebase.database().ref(chatNode).remove();\n    } else {\n      let chatNode = `chatroom_group_${initChatDetail.chatParticipant.group_id}/${msgNodeId}`;\n\n      // Remove the node from firebase\n      firebase.database().ref(chatNode).remove();\n    }\n\n    setAnchorEl(null);\n\n    // Reset the edit attribute for same message\n    handleChatMessage('');\n    updateIsEditMsg(false);\n    updateMsgAttributes({ message: null, messageType: null });\n  };\n\n  const [isEditMsg, updateIsEditMsg] = useState(false);\n  const handleEditChatMsg = () => {\n    handleChatMessage(msgAttributes.message);\n    updateIsEditMsg(true);\n    setAnchorEl(null);\n  };\n\n  const handleCancelUpdateMsg = () => {\n    handleChatMessage('');\n    updateIsEditMsg(false);\n  };\n\n  const date = new Date();\n  const formattedDate = date.toLocaleDateString('en-GB', {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric',\n  });\n\n  const that = this;\n\n  return (\n    <>\n      <Grid item xs={12} md={8} className={clsx(classes.rightPanel, 'rightSide-cont')}>\n\n\n\n        <Dialog\n          open={openImage}\n          onClose={handleCloseImageModal}\n          aria-labelledby=\"form-dialog-title\"\n          maxWidth=\"xl\"\n        >\n          <DialogTitleStyled id=\"form-dialog-title\">\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n              <Box display=\"flex\">\n                <TypoPopHeadStyled>Attachment</TypoPopHeadStyled>\n              </Box>\n              <IconButton color=\"default\" onClick={handleCloseImageModal}>\n                <Close />\n              </IconButton>\n            </Box>\n          </DialogTitleStyled>\n          <DialogContent>\n            <center>\n              <img src={`${selectedImage}`} \n              // style={{ maxWidth: '-webkit-fill-available' }} \n              />{' '}\n            </center>\n          </DialogContent>\n        </Dialog>\n        <PaperStyled>\n          <GridHeaderStyled container alignItems=\"center\" spacing={0}>\n            <Grid item xs={12}>\n              <Box display=\"flex\" style={{ margin: 10, marginLeft: 0 }}>\n                {initChatDetail.hasOwnProperty('chatType') ? (\n                  initChatDetail.chatType === 'individual' ? (\n                    <AvatarShareStyled alt=\"profile picture\" src={initChatDetail.chatParticipant.profile_image} />\n                  ) : (\n                    <AvatarShareStyled alt=\"group icon\" src={initChatDetail.chatParticipant.group_icon} />\n                  )\n                ) : (\n                  // <AvatarShareStyled alt=\"profile picture\" src={require('../../assets/images/profile.jpeg')} />\n                  null\n                )}\n                <Box>\n                  <TypoNameStyled onClick={() => handleGroupMember(!showGroupMember)}>\n                    {initChatDetail.hasOwnProperty('chatType')\n                      ? initChatDetail.chatType === 'individual'\n                        ? initChatDetail.chatParticipant.first_name + ' ' + initChatDetail.chatParticipant.last_name\n                        : initChatDetail.chatParticipant.group_name\n                      : null}\n                  </TypoNameStyled>\n                  <TypoMobileStyled onClick={() => handleGroupMember(!showGroupMember)}>\n                    {initChatDetail.hasOwnProperty('chatType')\n                      ? initChatDetail.chatType === 'individual'\n                        ? initChatDetail.chatParticipant.mobile_no\n                        : null\n                      : null}\n                  </TypoMobileStyled>\n                  {/* <TypoStatusStyled>Status</TypoStatusStyled> */}\n                  {initChatDetail.hasOwnProperty('chatType') ? (\n                    <Dialog\n                      onClose={() => handleGroupMember(!showGroupMember)}\n                      aria-labelledby=\"simple-dialog-title\"\n                      open={showGroupMember}\n                    >\n                      <DialogTitle id=\"simple-dialog-title\">\n                        {initChatDetail.chatType === 'individual'\n                          ? initChatDetail.chatParticipant.first_name + ' ' + initChatDetail.chatParticipant.last_name\n                          : initChatDetail.chatParticipant.group_name}\n                      </DialogTitle>\n                      <List>\n                        {initChatDetail.chatType === 'group' ? (\n                          initChatDetail.chatParticipant.group_member_list.map((member, memberIndex) => (\n                            <ListItem button key={memberIndex}>\n                              <ListItemAvatar>\n                                <Avatar className={member.profile_image}>\n                                  <PersonIcon />\n                                </Avatar>\n                              </ListItemAvatar>\n                              <ListItemText primary={member.first_name} />\n                            </ListItem>\n                          ))\n                        ) : (\n                          <ListItem button>\n                            <ListItemAvatar>\n                              <Avatar className={initChatDetail.chatParticipant.profile_image}>\n                                <PersonIcon />\n                              </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={initChatDetail.chatParticipant.first_name} />\n                          </ListItem>\n                        )}\n                      </List>\n                    </Dialog>\n                  ) : null}\n\n                  {/* Message read details */}\n                  {initChatDetail.hasOwnProperty('chatType') ? (\n                    <Dialog\n                      onClose={() => updateShowMsgReadDetails(!showMsgReadDetails)}\n                      aria-labelledby=\"simple-dialog-title\"\n                      open={showMsgReadDetails}\n                    >\n                      <DialogTitle id=\"simple-dialog-title\">Details</DialogTitle>\n                      <List>\n                        {initChatDetail.chatType === 'group' ? (\n                          initChatDetail.chatParticipant.group_member_list.map((member, memberIndex) => {\n                            return member.user_id !== user_id ? (\n                              <ListItem button key={memberIndex}>\n                                <ListItemAvatar>\n                                  <Avatar className={member.profile_image}>\n                                    <PersonIcon />\n                                  </Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={member.first_name} />\n                                <DoneAllStyled\n                                  className={`${msgReadDetails.includes(member.user_id) ? 'active' : ''}`}\n                                />\n                              </ListItem>\n                            ) : null;\n                          })\n                        ) : (\n                          <ListItem button>\n                            <ListItemAvatar>\n                              <Avatar className={initChatDetail.chatParticipant.profile_image}>\n                                <PersonIcon />\n                              </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary={initChatDetail.chatParticipant.first_name} />\n                          </ListItem>\n                        )}\n                      </List>\n                    </Dialog>\n                  ) : null}\n                </Box>\n              </Box>\n            </Grid>\n          </GridHeaderStyled>\n\n          <Grid item xs={12} className=\"chatBoxCont\" id=\"chatBoxCont\">\n            {loading ? (\n              <CircularSpinner />\n            ) : (\n              <ul className=\"chatList\">\n                {/* For chat message delete */}\n                <Menu\n                  id=\"simple-menu\"\n                  className=\"chat-act-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleMenuClose}\n                >\n                  {\n                    // Edit option will be for text message only\n                    msgAttributes.messageType === null || msgAttributes.messageType === 'text' ? (\n                      <MenuItem onClick={handleEditChatMsg}>Edit</MenuItem>\n                    ) : null\n                  }\n                  <MenuItem onClick={handleDeleteChatMsg}>Delete</MenuItem>\n                </Menu>\n\n                {initChatDetail.hasOwnProperty('chatType') && initChatDetail.chatType === 'individual' ? (\n                  receivedMessages && receivedMessages.length > 0 ? (\n                    receivedMessages.map((receivedMessage, receivedMessageIndex) => {\n                      function convertTZ(date, tzString) {\n                        return new Date(\n                          (typeof date === 'string' ? new Date(date) : date).toLocaleString('en-US', {\n                            timeZone: tzString,\n                          })\n                        );\n                      }\n\n                      let msgCreatedAt = convertTZ(new Date(parseInt(receivedMessage.created_at)), 'Europe/London');\n                      //let msgCreatedAt = new Date(parseInt(receivedMessage.created_at)).toUTCString();\n                      let getOnlyTime = new Date(msgCreatedAt).toLocaleTimeString();\n\n                      return receivedMessage.receiver_id == user_id ? (\n                        <>\n                          {receivedMessage.dayThing ? (\n                            <li>\n                              <BoxDateStyled alignSelf=\"center\">\n                                <Typography variant=\"caption\" component=\"p\">\n                                  {receivedMessage.dayThing}\n                                </Typography>\n                              </BoxDateStyled>\n                            </li>\n                          ) : null}\n                          <li key={receivedMessageIndex}>\n                            <Box display=\"flex\" style={{ margin: 10, marginLeft: 0 }}>\n                              <AvatarChatStyled alt=\"profile picture\" src={receivedMessage.sender_image} />\n                              <Box>\n                                <Typography variant=\"caption\" component=\"p\">\n                                  {receivedMessage.sender_name}, {convertFrom24To12Format(getOnlyTime)}\n                                </Typography>\n                                {console.log('receivedMessage--',receivedMessage)}\n\n                                <ChatBoxStyled>\n                                  {\n                                    // For text message\n                                    receivedMessage.message_type === 'text' ? (\n                                      <Typography>{receivedMessage.message}</Typography>\n                                    ) : // For images\n                                      receivedMessage.message_type === 'jpg' ||\n                                        receivedMessage.message_type === 'jpeg' ||\n                                        receivedMessage.message_type === 'png' ? (\n                                        <Typography>\n                                          <img\n                                            style={{ height: 100, width: 100 ,cursor: 'pointer' }}\n                                            src={receivedMessage.message}\n                                            alt=\"image\"\n                                            onClick={() => handleClickImageOpen(receivedMessage.message)}\n                                          />\n                                        </Typography>\n                                      ) : // For csv files\n                                        receivedMessage.message_type === 'csv' ? (\n                                          <Typography>\n                                            <img\n                                              src={require('../../assets/images/file-extensions-icon/csv.png')}\n                                              style={{ height: 50, width: 50 }}\n                                              alt=\"txt-file-icon\"\n                                            />\n                                            <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                          </Typography>\n                                        ) : // For pdf files\n                                          receivedMessage.message_type === 'pdf' ? (\n                                            <Typography>\n                                              <img\n                                                src={require('../../assets/images/file-extensions-icon/pdf.png')}\n                                                style={{ height: 50, width: 50 }}\n                                                alt=\"txt-file-icon\"\n                                              />\n                                              <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                            </Typography>\n                                          ) : // For txt files\n                                            receivedMessage.message_type === 'txt' ? (\n                                              <Typography>\n                                                <img\n                                                  src={require('../../assets/images/file-extensions-icon/txt.png')}\n                                                  style={{ height: 50, width: 50 }}\n                                                  alt=\"txt-file-icon\"\n                                                />\n                                                <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                              </Typography>\n                                            ) : // For doc or docx file\n                                              receivedMessage.message_type === 'doc' ||\n                                                receivedMessage.message_type === 'docx' ? (\n                                                <Typography>\n                                                  <img\n                                                    src={require('../../assets/images/file-extensions-icon/doc.png')}\n                                                    style={{ height: 50, width: 50 }}\n                                                    alt=\"txt-file-icon\"\n                                                  />\n                                                  <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                                </Typography>\n                                              ) : // For ppt or pptx file\n                                                receivedMessage.message_type === 'ppt' ||\n                                                  receivedMessage.message_type === 'pptx' ? (\n                                                  <Typography>\n                                                    <img\n                                                      src={require('../../assets/images/file-extensions-icon/ppt.png')}\n                                                      style={{ height: 50, width: 50 }}\n                                                      alt=\"txt-file-icon\"\n                                                    />\n                                                    <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                                  </Typography>\n                                                ) : // For xls or xlsx file\n                                                  receivedMessage.message_type === 'xls' ||\n                                                    receivedMessage.message_type === 'xlsx' ? (\n                                                    <Typography>\n                                                      <img\n                                                        src={require('../../assets/images/file-extensions-icon/xls.png')}\n                                                        style={{ height: 50, width: 50 }}\n                                                        alt=\"txt-file-icon\"\n                                                      />\n                                                      <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                                    </Typography>\n\n                                                ) : // For video file\n                                                  receivedMessage.message_type === 'mp4' ||\n                                                    receivedMessage.message_type === '3gp' ||\n                                                    receivedMessage.message_type === 'ogg' ||\n                                                    receivedMessage.message_type === 'avi' ||\n                                                    receivedMessage.message_type === 'mov' \n                                                     ? (\n                                                    <Typography>\n                                                      <img\n                                                        src={require('../../assets/images/file-extensions-icon/mp4.png')}\n                                                        style={{ height: 50, width: 50 }}\n                                                        alt=\"txt-file-icon\"\n                                                      />\n                                                      <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                                    </Typography>\n                                                  ) : null\n                                  }\n                                </ChatBoxStyled>\n                              </Box>\n                            </Box>\n                          </li>\n                        </>\n                      ) : (\n                        <>\n                          {receivedMessage.dayThing ? (\n                            <li>\n                              <BoxDateStyled alignSelf=\"center\">\n                                <Typography variant=\"caption\" component=\"p\">\n                                  {receivedMessage.dayThing}\n                                </Typography>\n                              </BoxDateStyled>\n                            </li>\n                          ) : null}\n                          <li key={receivedMessageIndex}>\n                            <Box display=\"flex\" justifyContent=\"flex-end\" style={{ margin: 10, marginRight: 0 }}>\n                              <Box justifyContent=\"flex-end\">\n                                <Typography variant=\"caption\" component=\"p\" align=\"right\">\n                                  {convertFrom24To12Format(getOnlyTime) + ' '}\n\n                                  {\n                                    // Message edited icon\n                                    receivedMessage.is_edited === true ? <Edit style={{ fontSize: 12 }} /> : null\n                                  }\n\n                                  <DoneAllStyled\n                                    className={`${receivedMessage['message_read_' + receivedMessage['receiver_id']] ? 'active' : ''\n                                      }`}\n                                  />\n                                </Typography>\n                                {/* {receivedMessage.message_type} */}\n                                {console.log('receivedMessage==',receivedMessage)}\n                                <ChatBoxRightStyled>\n                                  {\n                                    // For text message\n                                    receivedMessage.message_type === 'text' ? (\n                                      <Typography>{receivedMessage.message}</Typography>\n                                    ) : // For images\n                                      receivedMessage.message_type === 'jpg' ||\n                                        receivedMessage.message_type === 'jpeg' ||\n                                        receivedMessage.message_type === 'png' ? (\n                                        <Typography>\n                                          <img\n                                            style={{ height: 100, width: 100 , cursor: 'pointer'}}\n                                            src={receivedMessage.message}\n                                            alt=\"image\"\n                                            onClick={() => handleClickImageOpen(receivedMessage.message)}\n                                          />\n                                        </Typography>\n                                      ) : // For csv files\n                                        receivedMessage.message_type === 'csv' ? (\n                                          <Typography>\n                                            <img\n                                              src={require('../../assets/images/file-extensions-icon/csv.png')}\n                                              style={{ height: 50, width: 50 }}\n                                              alt=\"txt-file-icon\"\n                                            />\n                                            <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                          </Typography>\n                                        ) : // For pdf files\n                                          receivedMessage.message_type === 'pdf' ? (\n                                            <Typography>\n                                              <img\n                                                src={require('../../assets/images/file-extensions-icon/pdf.png')}\n                                                style={{ height: 50, width: 50 }}\n                                                alt=\"txt-file-icon\"\n                                              />\n                                              <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                            </Typography>\n                                          ) : // For txt files\n                                            receivedMessage.message_type === 'txt' ? (\n                                              <Typography>\n                                                <img\n                                                  src={require('../../assets/images/file-extensions-icon/txt.png')}\n                                                  style={{ height: 50, width: 50 }}\n                                                  alt=\"txt-file-icon\"\n                                                />\n                                                <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                              </Typography>\n                                            ) : // For doc or docx file\n                                              receivedMessage.message_type === 'doc' ||\n                                                receivedMessage.message_type === 'docx' ? (\n                                                <Typography>\n                                                  <img\n                                                    src={require('../../assets/images/file-extensions-icon/doc.png')}\n                                                    style={{ height: 50, width: 50 }}\n                                                    alt=\"txt-file-icon\"\n                                                  />\n                                                  <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                                </Typography>\n                                              ) : // For ppt or pptx file\n                                                receivedMessage.message_type === 'ppt' ||\n                                                  receivedMessage.message_type === 'pptx' ? (\n                                                  <Typography>\n                                                    <img\n                                                      src={require('../../assets/images/file-extensions-icon/ppt.png')}\n                                                      style={{ height: 50, width: 50 }}\n                                                      alt=\"txt-file-icon\"\n                                                    />\n                                                    <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                                  </Typography>\n                                                ) : // For xls or xlsx file\n                                                  receivedMessage.message_type === 'xls' ||\n                                                    receivedMessage.message_type === 'xlsx' ? (\n                                                    <Typography>\n                                                      <img\n                                                        src={require('../../assets/images/file-extensions-icon/xls.png')}\n                                                        style={{ height: 50, width: 50 }}\n                                                        alt=\"txt-file-icon\"\n                                                      />\n                                                      <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                                    </Typography>\n\n                                                    ) : // For video file\n                                                    receivedMessage.message_type === 'mp4' ||\n                                                      receivedMessage.message_type === '3gp' ||\n                                                      receivedMessage.message_type === 'ogg' ||\n                                                      receivedMessage.message_type === 'avi' ||\n                                                      receivedMessage.message_type === 'mov' \n                                                       ? (\n                                                      <Typography>\n                                                        <img\n                                                          src={require('../../assets/images/file-extensions-icon/mp4.png')}\n                                                          style={{ height: 50, width: 50 }}\n                                                          alt=\"txt-file-icon\"\n                                                        />\n                                                        <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                                      </Typography>\n                                                    ) : (\n                                                    <Typography>\n                                                      <img\n                                                        src={require('../../assets/images/file-extensions-icon/file.png')}\n                                                        style={{ height: 50, width: 50 }}\n                                                        alt=\"file-icon\"\n                                                      />\n                                                      <GetAppIcon style={{cursor:'pointer'}} onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                                    </Typography>\n                                                  )\n                                  }\n                                </ChatBoxRightStyled>\n                              </Box>\n                              <AvatarChatRightStyled alt=\"profile picture\" src={receivedMessage.sender_image} />\n\n                              <IconButton edge=\"end\">\n                                <MoreVert\n                                  onClick={(event) =>\n                                    handleMenuClick(\n                                      event,\n                                      receivedMessage.nodeId,\n                                      receivedMessage.message,\n                                      receivedMessage.message_type\n                                    )\n                                  }\n                                />\n                              </IconButton>\n                            </Box>\n                          </li>\n                        </>\n                      );\n                    })\n                  ) : (\n                    <li>\n                      <BoxDateStyled alignSelf=\"center\">\n                        <Typography variant=\"caption\" component=\"p\">\n                          {formattedDate}\n                        </Typography>\n                      </BoxDateStyled>\n                    </li>\n                  )\n                ) : receivedMessages && receivedMessages.length > 0 ? (\n                  receivedMessages.map((receivedMessage, receivedMessageIndex) => {\n                    function convertTZ(date, tzString) {\n                      return new Date(\n                        (typeof date === 'string' ? new Date(date) : date).toLocaleString('en-US', {\n                          timeZone: tzString,\n                        })\n                      );\n                    }\n\n                    let msgCreatedAt = convertTZ(new Date(parseInt(receivedMessage.created_at)), 'Europe/London');\n                    //let msgCreatedAt = new Date(parseInt(receivedMessage.created_at)).toUTCString();\n                    let getOnlyTime = new Date(msgCreatedAt).toLocaleTimeString();\n\n                    // let msgCreatedAt = new Date(parseInt(receivedMessage.created_at)).toUTCString();\n                    // msgCreatedAt = msgCreatedAt.split(' ');\n\n                    let groupMembers = [];\n                    let msgReadByMembers = [];\n                    let msgReadByMembersList = [];\n                    if (initChatDetail.hasOwnProperty('chatType')) {\n                      groupMembers = initChatDetail.chatParticipant.group_members;\n                      groupMembers = groupMembers.split(',');\n\n                      if (groupMembers.length > 0) {\n                        for (let i = 0; i < groupMembers.length; i++) {\n                          msgReadByMembers.push(receivedMessage['message_read_' + groupMembers[i]]);\n\n                          if (receivedMessage['message_read_' + groupMembers[i]]) {\n                            msgReadByMembersList.push(groupMembers[i]);\n                          }\n                        }\n                      }\n                    }\n\n                    return receivedMessage.sender_id === user_id ? (\n                      <li key={receivedMessageIndex}>\n                        <Box display=\"flex\" justifyContent=\"flex-end\" style={{ margin: 10, marginRight: 0 }}>\n                          <Box justifyContent=\"flex-end\">\n                            <Typography variant=\"caption\" component=\"p\" align=\"right\">\n                              {convertFrom24To12Format(getOnlyTime) + ' '}\n\n                              {\n                                // Message edited icon\n                                receivedMessage.is_edited === true ? <Edit style={{ fontSize: 12 }} /> : null\n                              }\n\n                              <DoneAllStyled\n                                onClick={() => handleMsgReadDetails(msgReadByMembersList)}\n                                className={`${msgReadByMembers.includes(false) ? '' : 'active'}`}\n                              />\n                            </Typography>\n                            <ChatBoxRightStyled>\n                              {\n                                // For text message\n                                receivedMessage.message_type === 'text' ? (\n                                  <Typography>{receivedMessage.message}</Typography>\n                                ) : // For images\n                                  receivedMessage.message_type === 'jpg' ||\n                                    receivedMessage.message_type === 'jpeg' ||\n                                    receivedMessage.message_type === 'png' ? (\n                                    <Typography>\n                                      <img\n                                        style={{ height: 100, width: 100 }}\n                                        src={receivedMessage.message}\n                                        alt=\"image\"\n                                      />\n                                    </Typography>\n                                  ) : // For csv files\n                                    receivedMessage.message_type === 'csv' ? (\n                                      <Typography>\n                                        <img\n                                          src={require('../../assets/images/file-extensions-icon/csv.png')}\n                                          style={{ height: 50, width: 50 }}\n                                          alt=\"txt-file-icon\"\n                                        />\n                                        <GetAppIcon onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                      </Typography>\n                                    ) : // For pdf files\n                                      receivedMessage.message_type === 'pdf' ? (\n                                        <Typography>\n                                          <img\n                                            src={require('../../assets/images/file-extensions-icon/pdf.png')}\n                                            style={{ height: 50, width: 50 }}\n                                            alt=\"txt-file-icon\"\n                                          />\n                                          <GetAppIcon onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                        </Typography>\n                                      ) : // For txt files\n                                        receivedMessage.message_type === 'txt' ? (\n                                          <Typography>\n                                            <img\n                                              src={require('../../assets/images/file-extensions-icon/txt.png')}\n                                              style={{ height: 50, width: 50 }}\n                                              alt=\"txt-file-icon\"\n                                            />\n                                            <GetAppIcon onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                          </Typography>\n                                        ) : // For doc or docx file\n                                          receivedMessage.message_type === 'doc' || receivedMessage.message_type === 'docx' ? (\n                                            <Typography>\n                                              <img\n                                                src={require('../../assets/images/file-extensions-icon/doc.png')}\n                                                style={{ height: 50, width: 50 }}\n                                                alt=\"txt-file-icon\"\n                                              />\n                                              <GetAppIcon onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                            </Typography>\n                                          ) : // For ppt or pptx file\n                                            receivedMessage.message_type === 'ppt' || receivedMessage.message_type === 'pptx' ? (\n                                              <Typography>\n                                                <img\n                                                  src={require('../../assets/images/file-extensions-icon/ppt.png')}\n                                                  style={{ height: 50, width: 50 }}\n                                                  alt=\"txt-file-icon\"\n                                                />\n                                                <GetAppIcon onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                              </Typography>\n                                            ) : // For xls or xlsx file\n                                              receivedMessage.message_type === 'xls' || receivedMessage.message_type === 'xlsx' ? (\n                                                <Typography>\n                                                  <img\n                                                    src={require('../../assets/images/file-extensions-icon/xls.png')}\n                                                    style={{ height: 50, width: 50 }}\n                                                    alt=\"txt-file-icon\"\n                                                  />\n                                                  <GetAppIcon onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                                </Typography>\n                                              ) : null\n                              }\n                            </ChatBoxRightStyled>\n                          </Box>\n                          <AvatarChatRightStyled alt=\"profile picture\" src={receivedMessage.sender_image} />\n\n                          <IconButton edge=\"end\" aria-label=\"delete\">\n                            <MoreVert\n                              onClick={(event) =>\n                                handleMenuClick(\n                                  event,\n                                  receivedMessage.nodeId,\n                                  receivedMessage.message,\n                                  receivedMessage.message_type\n                                )\n                              }\n                            />\n                          </IconButton>\n                        </Box>\n                      </li>\n                    ) : (\n                      <li key={receivedMessageIndex}>\n                        <Box display=\"flex\" style={{ margin: 10, marginLeft: 0 }}>\n                          <AvatarChatStyled alt=\"profile picture\" src={receivedMessage.sender_image} />\n                          <Box>\n                            <Typography variant=\"caption\" component=\"p\">\n                              {receivedMessage.sender_name}, {convertFrom24To12Format(getOnlyTime)}\n                            </Typography>\n                            <ChatBoxStyled>\n                              {\n                                // For text message\n                                receivedMessage.message_type === 'text' ? (\n                                  <Typography>{receivedMessage.message}</Typography>\n                                ) : // For images\n                                  receivedMessage.message_type === 'jpg' ||\n                                    receivedMessage.message_type === 'jpeg' ||\n                                    receivedMessage.message_type === 'png' ? (\n                                    <Typography>\n                                      <img\n                                        style={{ height: 100, width: 100 }}\n                                        src={receivedMessage.message}\n                                        alt=\"image\"\n                                      />\n                                    </Typography>\n                                  ) : // For csv files\n                                    receivedMessage.message_type === 'csv' ? (\n                                      <Typography>\n                                        <img\n                                          src={require('../../assets/images/file-extensions-icon/csv.png')}\n                                          style={{ height: 50, width: 50 }}\n                                          alt=\"txt-file-icon\"\n                                        />\n                                        <GetAppIcon onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                      </Typography>\n                                    ) : // For pdf files\n                                      receivedMessage.message_type === 'pdf' ? (\n                                        <Typography>\n                                          <img\n                                            src={require('../../assets/images/file-extensions-icon/pdf.png')}\n                                            style={{ height: 50, width: 50 }}\n                                            alt=\"txt-file-icon\"\n                                          />\n                                          <GetAppIcon onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                        </Typography>\n                                      ) : // For txt files\n                                        receivedMessage.message_type === 'txt' ? (\n                                          <Typography>\n                                            <img\n                                              src={require('../../assets/images/file-extensions-icon/txt.png')}\n                                              style={{ height: 50, width: 50 }}\n                                              alt=\"txt-file-icon\"\n                                            />\n                                            <GetAppIcon onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                          </Typography>\n                                        ) : // For doc or docx file\n                                          receivedMessage.message_type === 'doc' || receivedMessage.message_type === 'docx' ? (\n                                            <Typography>\n                                              <img\n                                                src={require('../../assets/images/file-extensions-icon/doc.png')}\n                                                style={{ height: 50, width: 50 }}\n                                                alt=\"txt-file-icon\"\n                                              />\n                                              <GetAppIcon onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                            </Typography>\n                                          ) : // For ppt or pptx file\n                                            receivedMessage.message_type === 'ppt' || receivedMessage.message_type === 'pptx' ? (\n                                              <Typography>\n                                                <img\n                                                  src={require('../../assets/images/file-extensions-icon/ppt.png')}\n                                                  style={{ height: 50, width: 50 }}\n                                                  alt=\"txt-file-icon\"\n                                                />\n                                                <GetAppIcon onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                              </Typography>\n                                            ) : // For xls or xlsx file\n                                              receivedMessage.message_type === 'xls' || receivedMessage.message_type === 'xlsx' ? (\n                                                <Typography>\n                                                  <img\n                                                    src={require('../../assets/images/file-extensions-icon/xls.png')}\n                                                    style={{ height: 50, width: 50 }}\n                                                    alt=\"txt-file-icon\"\n                                                  />\n                                                  <GetAppIcon onClick={() => handleDownloadResource(receivedMessage.message)} />\n                                                </Typography>\n                                              ) : null\n                              }\n                            </ChatBoxStyled>\n                          </Box>\n                        </Box>\n                      </li>\n                    );\n                  })\n                ) : (\n                  <li>\n                    <BoxDateStyled alignSelf=\"center\">\n                      <Typography variant=\"caption\" component=\"p\">\n                        {formattedDate}\n                      </Typography>\n                    </BoxDateStyled>\n                  </li>\n                )}\n              </ul>\n            )}\n          </Grid>\n\n          <GridFooterStyled item xs={12}>\n            <form className=\"chat-inp-form\" onSubmit={handleMessageFormSubmit}>\n              <Box className=\"emoji-list\">{showEmoji && <EmojiWindow handleEmojiClick={handleEmojiClick} />}</Box>\n              <Box display=\"flex\" justify=\"space-between\">\n                <IconButton edge=\"end\" aria-label=\"Emoji\" onClick={() => toggleShowEmoji(!showEmoji)} className=\"mr-10\">\n                  <EmojiEmotions />\n                </IconButton>\n                <InputBase\n                  className=\"inputChat\"\n                  value={chatMessage}\n                  onChange={(e) => handleChatMessage(e.target.value)}\n                  placeholder=\"Write Message\"\n                  inputProps={{ 'aria-label': 'naked' }}\n                />\n                <Box>\n                  <input type=\"file\" ref={fileBrowse} style={{ display: 'none' }} onChange={handleFileSelect} />\n                  <IconButton edge=\"end\" aria-label=\"Attchment\" className=\"mr-10\">\n                    <Attachment onClick={showFileBrowse} />\n                  </IconButton>\n                  <input type=\"file\" ref={imageBrowse} style={{ display: 'none' }} onChange={handleImageSelect} />\n                  <IconButton edge=\"end\" aria-label=\"Image\" className=\"mr-20\">\n                    <CropOriginal onClick={showImageBrowse} />\n                  </IconButton>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    onClick={handleMessageSend}\n                    endIcon={<Send />}\n                  >\n                    Send\n                  </Button>\n                  {isEditMsg ? (\n                    <Button type=\"button\" variant=\"contained\" color=\"primary\" onClick={handleCancelUpdateMsg}>\n                      <Close />\n                    </Button>\n                  ) : null}\n                </Box>\n              </Box>\n            </form>\n          </GridFooterStyled>\n        </PaperStyled>\n      </Grid>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.liveChatReducer.loading,\n    error: state.liveChatReducer.error,\n    success: state.liveChatReducer.success,\n    chatroom: state.liveChatReducer.chatroom,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatWindow);\n"]},"metadata":{},"sourceType":"module"}