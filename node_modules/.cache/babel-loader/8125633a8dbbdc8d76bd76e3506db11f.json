{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/DownloadExamAttempt/DownloadExamAttempt.js\";\nimport * as actions from '../../store/actions/index';\nimport { Attachment, Replay, Send, Headset, Videocam, Description } from '@material-ui/icons';\nimport { Box, Button, FormControl, Grid, IconButton, InputAdornment, InputLabel, ListItem, Paper, TextField, Typography } from '@material-ui/core';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { styled } from '@material-ui/core/styles';\nimport { withSnackbar } from 'notistack';\nimport { ReactFormBuilder, ElementStore, ReactFormGenerator } from 'react-form-builder2';\nimport * as variables from '../../../src/variables';\nimport axios from 'axios';\nimport { getFormBuilderList, getExamDetailsForContact } from '../../store/actions/formBuilder';\nconst GridStyled = styled(Grid)({\n  height: '100vh'\n});\nconst PaperStyled = styled(Paper)({\n  width: 2000,\n  textAlign: 'center',\n  padding: 40,\n  borderRadius: 10\n});\nconst TypoStyled = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 20,\n  marginBottom: 30,\n  fontWeight: 'bold'\n}));\nconst LinkStyled = styled(Link)(({\n  theme\n}) => ({\n  color: theme.palette.primary.main,\n  textDecoration: 'none'\n}));\nconst TypoHeadStyledError = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 24,\n  color: 'red',\n  fontWeight: 'bold',\n  textAlign: 'center'\n}));\nconst TypoHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 24,\n  color: theme.palette.primary.main,\n  fontWeight: 'bold',\n  textAlign: 'center'\n}));\nconst ButtonStyled = styled(Button)(({\n  theme\n}) => ({\n  background: '#FFA502'\n}));\nconst TypoContentStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 18,\n  color: theme.palette.text.primary,\n  fontWeight: 'bold'\n}));\nconst FormFields = {\n  email: '',\n  password: ''\n};\n\nconst DownloadExamAttempt = props => {\n  const {\n    user_id,\n    business_code,\n    first_name,\n    last_name,\n    default_category\n  } = JSON.parse(localStorage.getItem('userData'));\n  const {\n    enqueueSnackbar,\n    formsubmitteddata,\n    getExamDetailsForContact\n  } = props;\n  const [showForm, setShowForm] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState('');\n  const [getError, setError] = useState('');\n  const {\n    exam_id,\n    contact_id\n  } = useParams();\n  useEffect(() => {\n    getExamDetailsForContact({\n      exam_id: exam_id,\n      contact_id: contact_id\n    });\n  }, [getExamDetailsForContact]);\n  useEffect(() => {\n    if (formsubmitteddata) {\n      let getForm = JSON.parse(formsubmitteddata.builder_data).task_data;\n      let getFormSubmitted = null;\n\n      if (formsubmitteddata.form_data) {\n        getFormSubmitted = JSON.parse(formsubmitteddata.form_data);\n      }\n\n      console.log('getForm====', getForm);\n      console.log('getFormSubmitted====', getFormSubmitted);\n      console.log('formsubmitteddata====', formsubmitteddata);\n      setShowForm({\n        builder_data: getForm,\n        form_data: getFormSubmitted,\n        is_delete: formsubmitteddata.is_delete,\n        title: formsubmitteddata.title,\n        first_name: formsubmitteddata.first_name,\n        last_name: formsubmitteddata.last_name,\n        mobile_no: formsubmitteddata.mobile_no\n      });\n      setTimeout(function () {\n        window.print();\n      }, 1000);\n      setTimeout(function () {\n        window.close();\n      }, 1000);\n    }\n  }, [formsubmitteddata]);\n  return (\n    /*#__PURE__*/\n    // <GridStyled container justify=\"center\" alignItems=\"center\" className=\"loginBg\">\n    //   <PaperStyled>\n    React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-head-ttl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, showForm.title ? showForm.title : ''), /*#__PURE__*/React.createElement(TypoContentStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, showForm.first_name, \" \", showForm.last_name, \" : \", showForm.is_delete == '0' ? 'Submitted' : 'Declined'), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 149\n      }\n    }), showForm.mobile_no, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), showForm && showForm.builder_data && showForm.builder_data.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: \"form_preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ReactFormGenerator, {\n      answer_data: showForm.form_data //action_name=\"Save\"\n      ,\n      form_action: \"/\",\n      form_method: \"POST\",\n      variables: variables,\n      data: showForm.builder_data,\n      hide_actions: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }))) : null))) //   </PaperStyled>\n    // </GridStyled>\n\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.rymidr.loading,\n    error: state.rymidr.error,\n    success_message2: state.formBuilder.success_message2,\n    formsubmitteddata: state.formBuilder.formsubmitteddata\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getFormBuilderList: data => dispatch(getFormBuilderList(data)),\n    getExamDetailsForContact: data => dispatch(getExamDetailsForContact(data))\n  };\n};\n\nDownloadExamAttempt.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired,\n  getFormBuilderList: PropTypes.func.isRequired,\n  getExamDetailsForContact: PropTypes.func.isRequired,\n  success_message2: PropTypes.any.isRequired,\n  enqueueSnackbar: PropTypes.func.isRequired,\n  formsubmitteddata: PropTypes.array.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(DownloadExamAttempt));","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/DownloadExamAttempt/DownloadExamAttempt.js"],"names":["actions","Attachment","Replay","Send","Headset","Videocam","Description","Box","Button","FormControl","Grid","IconButton","InputAdornment","InputLabel","ListItem","Paper","TextField","Typography","Link","Redirect","useParams","React","useEffect","useState","PropTypes","connect","styled","withSnackbar","ReactFormBuilder","ElementStore","ReactFormGenerator","variables","axios","getFormBuilderList","getExamDetailsForContact","GridStyled","height","PaperStyled","width","textAlign","padding","borderRadius","TypoStyled","fontSize","marginTop","marginBottom","fontWeight","LinkStyled","theme","color","palette","primary","main","textDecoration","TypoHeadStyledError","TypoHeadStyled","ButtonStyled","background","TypoContentStyled","text","FormFields","email","password","DownloadExamAttempt","props","user_id","business_code","first_name","last_name","default_category","JSON","parse","localStorage","getItem","enqueueSnackbar","formsubmitteddata","showForm","setShowForm","isSubmitted","setIsSubmitted","getError","setError","exam_id","contact_id","getForm","builder_data","task_data","getFormSubmitted","form_data","console","log","is_delete","title","mobile_no","setTimeout","window","print","close","length","mapStateToProps","state","loading","rymidr","error","success_message2","formBuilder","mapDispatchToProps","dispatch","data","propTypes","bool","isRequired","string","func","any","array"],"mappings":"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","sourcesContent":["import * as actions from '../../store/actions/index';\n\nimport { Attachment, Replay, Send, Headset, Videocam, Description } from '@material-ui/icons';\nimport {\n  Box,\n  Button,\n  FormControl,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  ListItem,\n  Paper,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { styled } from '@material-ui/core/styles';\nimport { withSnackbar } from 'notistack';\n\nimport { ReactFormBuilder, ElementStore, ReactFormGenerator } from 'react-form-builder2';\nimport * as variables from '../../../src/variables';\nimport axios from 'axios';\nimport { getFormBuilderList, getExamDetailsForContact } from '../../store/actions/formBuilder';\nconst GridStyled = styled(Grid)({\n  height: '100vh',\n});\n\nconst PaperStyled = styled(Paper)({\n  width: 2000,\n  textAlign: 'center',\n  padding: 40,\n  borderRadius: 10,\n});\n\nconst TypoStyled = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 20,\n  marginBottom: 30,\n  fontWeight: 'bold',\n}));\n\nconst LinkStyled = styled(Link)(({ theme }) => ({\n  color: theme.palette.primary.main,\n  textDecoration: 'none',\n}));\n\nconst TypoHeadStyledError = styled(Typography)(({ theme }) => ({\n  fontSize: 24,\n  color: 'red',\n  fontWeight: 'bold',\n  textAlign: 'center',\n}));\n\nconst TypoHeadStyled = styled(Typography)(({ theme }) => ({\n  fontSize: 24,\n  color: theme.palette.primary.main,\n  fontWeight: 'bold',\n  textAlign: 'center',\n}));\n\nconst ButtonStyled = styled(Button)(({ theme }) => ({\n  background: '#FFA502',\n}));\n\nconst TypoContentStyled = styled(Typography)(({ theme }) => ({\n  fontSize: 18,\n  color: theme.palette.text.primary,\n  fontWeight: 'bold',\n}));\nconst FormFields = { email: '', password: '' };\nconst DownloadExamAttempt = (props) => {\n  const { user_id, business_code, first_name, last_name, default_category } = JSON.parse(\n    localStorage.getItem('userData')\n  );\n  const { enqueueSnackbar, formsubmitteddata, getExamDetailsForContact } = props;\n  const [showForm, setShowForm] = useState({});\n\n  const [isSubmitted, setIsSubmitted] = useState('');\n\n  const [getError, setError] = useState('');\n  const { exam_id, contact_id } = useParams();\n\n  useEffect(() => {\n    getExamDetailsForContact({ exam_id: exam_id, contact_id: contact_id });\n  }, [getExamDetailsForContact]);\n  useEffect(() => {\n    if (formsubmitteddata) {\n      let getForm = JSON.parse(formsubmitteddata.builder_data).task_data;\n      let getFormSubmitted = null;\n      if (formsubmitteddata.form_data) {\n        getFormSubmitted = JSON.parse(formsubmitteddata.form_data);\n      }\n\n      console.log('getForm====', getForm);\n      console.log('getFormSubmitted====', getFormSubmitted);\n      console.log('formsubmitteddata====', formsubmitteddata);\n      setShowForm({\n        builder_data: getForm,\n        form_data: getFormSubmitted,\n        is_delete: formsubmitteddata.is_delete,\n        title: formsubmitteddata.title,\n        first_name:formsubmitteddata.first_name,\n        last_name:formsubmitteddata.last_name,\n        mobile_no:formsubmitteddata.mobile_no\n      });\n\n      setTimeout(function () {\n        window.print();\n      }, 1000);\n      setTimeout(function(){\n        window.close();\n      },1000)\n    }\n  }, [formsubmitteddata]);\n  return (\n    // <GridStyled container justify=\"center\" alignItems=\"center\" className=\"loginBg\">\n    //   <PaperStyled>\n    <>\n      <ListItem alignItems=\"flex-start\">\n        <Grid item xs={12}>\n          <div className=\"main-head-ttl\">{showForm.title ? showForm.title : ''}</div>\n          <TypoContentStyled>{showForm.first_name} {showForm.last_name} : {showForm.is_delete == '0' ? 'Submitted' : 'Declined'}</TypoContentStyled><br/>\n          {showForm.mobile_no}\n          <hr />\n          {/* <img style={{ width: 130 }} src={require('../../assets/images/login_logo.png')} /> */}\n          {showForm && showForm.builder_data && showForm.builder_data.length > 0 ? (\n            <>\n              <Grid item xs={12} className=\"form_preview\">\n                <ReactFormGenerator\n                  answer_data={showForm.form_data}\n                  //action_name=\"Save\"\n                  form_action=\"/\"\n                  form_method=\"POST\"\n                  variables={variables}\n                  data={showForm.builder_data}\n                  hide_actions={true}\n                />\n              </Grid>\n              {/* <img style={{ width: 130 }} src={require('../../assets/images/footer_logo.png')} /> */}\n            </>\n          ) : null}\n        </Grid>\n      </ListItem>\n    </>\n    //   </PaperStyled>\n    // </GridStyled>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.rymidr.loading,\n    error: state.rymidr.error,\n    success_message2: state.formBuilder.success_message2,\n    formsubmitteddata: state.formBuilder.formsubmitteddata,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getFormBuilderList: (data) => dispatch(getFormBuilderList(data)),\n    getExamDetailsForContact: (data) => dispatch(getExamDetailsForContact(data)),\n  };\n};\n\nDownloadExamAttempt.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired,\n  getFormBuilderList: PropTypes.func.isRequired,\n  getExamDetailsForContact: PropTypes.func.isRequired,\n  success_message2: PropTypes.any.isRequired,\n  enqueueSnackbar: PropTypes.func.isRequired,\n  formsubmitteddata: PropTypes.array.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(DownloadExamAttempt));\n"]},"metadata":{},"sourceType":"module"}