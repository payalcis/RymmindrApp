{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/Bookings/Modal/BookingModelDelete.js\";\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Typography, TextField, InputAdornment, List, ListItem, ListItemAvatar, ListItemText, MenuItem, Grid, Avatar, Divider } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Search from '@material-ui/icons/Search';\nimport Check from '@material-ui/icons/Check';\nimport Add from '@material-ui/icons/Add';\nimport PropTypes from 'prop-types';\nimport { styled } from '@material-ui/core/styles';\nimport DoneIcon from '@material-ui/icons/Done';\nlet find_key;\nconst CloseButton = styled(IconButton)({\n  position: 'absolute',\n  right: 0,\n  top: 0\n});\nconst DialogTitleStyled = styled(DialogTitle)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 24px',\n  marginBottom: 20\n});\nconst ButtonDanger = styled(Button)(({\n  theme\n}) => ({\n  background: theme.palette.error.main,\n  color: theme.palette.warning.contrastText\n}));\nconst TypoPopHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600'\n}));\nconst SearchFieldStyled = styled(TextField)(({\n  theme\n}) => ({\n  paddingTop: 10,\n  paddingBottom: 10,\n  '& div': {\n    height: 50\n  }\n}));\nconst ListItemStyled = styled(ListItem)(({\n  theme\n}) => ({\n  borderRadius: 8\n}));\nconst AvatarShareStyled = styled(Avatar)({\n  height: 50,\n  width: 50,\n  marginRight: 10\n});\nconst TypoListSubtext = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 14,\n  color: theme.palette.secondary.contrastText\n}));\nconst ListStyled = styled(List)(({\n  theme\n}) => ({\n  maxHeight: 550,\n  overflow: 'auto'\n}));\nconst ButtonSuccess = styled(Button)(({\n  theme\n}) => ({\n  background: '#00d264',\n  color: theme.palette.success.contrastText\n}));\nconst FormFields = {\n  category: '',\n  message: ''\n};\nexport default function Deleteevent(props) {\n  const {\n    onClose,\n    value: valueProp,\n    deleteRymindr,\n    open,\n    getRymindrListData,\n    ...other\n  } = props;\n  const [value, setValue] = useState(valueProp);\n  const [count, setCount] = useState(0);\n  const [categoryVal, setCategoryVal] = React.useState();\n  const [category, setCategory] = React.useState([{\n    value: 'All',\n    label: 'All'\n  }, {\n    value: 'Event',\n    label: 'Event'\n  }, {\n    value: 'Appointment',\n    label: 'Appointment'\n  }]);\n  const [formValue, setFormValue] = useState(FormFields);\n  const [formValidation, setFormValidation] = useState(FormFields);\n  const [rymindrListData, updateRymindrListData] = useState(getRymindrListData);\n  const [textLength, setTextLength] = useState(100);\n  useEffect(() => {\n    updateRymindrListData(getRymindrListData);\n\n    if (rymindrListData) {\n      var result = Array.prototype.map.call(rymindrListData, s => s.value).toString();\n      var obj = {};\n      obj[\"value\"] = 'All';\n      obj[\"label\"] = 'All';\n      rymindrListData.push(obj);\n      setCategory(rymindrListData);\n    }\n  }, [getRymindrListData]);\n  const ButtonColor = styled(Button)(({\n    theme\n  }) => ({\n    background: theme.palette.props.main,\n    color: theme.palette.props.contrastText\n  }));\n  const ButtonWarn = styled(Button)(({\n    theme\n  }) => ({\n    background: theme.palette.warning.main,\n    color: theme.palette.warning.contrastText\n  }));\n\n  const handleCategoryChange = event => {\n    const formvalidation = { ...formValidation\n    };\n\n    if (event.target.value) {\n      formvalidation.message = '';\n      setFormValidation(formvalidation);\n    }\n\n    setCategoryVal(event.target.value);\n    setFormValue({ ...formValue,\n      category: event.target.value\n    });\n  };\n\n  const handleinput = e => {\n    const formdata = { ...formValue\n    };\n    const {\n      name,\n      value\n    } = e.target;\n    const formvalidation = { ...formValidation\n    };\n\n    if (name === 'message') {\n      formdata.message = value;\n      formvalidation.message = '';\n      setFormValidation(formvalidation);\n      setTextLength(100 - value.length);\n    } else {\n      formdata[name] = value;\n    }\n\n    setFormValue(formdata);\n  };\n\n  const handleCancel = () => {\n    setValue(false);\n    onClose(!open);\n  };\n\n  const validate = () => {\n    const formvalidation = { ...formValidation\n    };\n    let isError = false;\n\n    if (!formValue.category) {\n      isError = true;\n      formvalidation.message = 'Please Select a Date';\n      setFormValidation(formvalidation);\n    }\n\n    return isError;\n  };\n\n  const handleOnChange = event => {\n    const value = event.target.value;\n    alert('change');\n  };\n\n  const handleToSubmit = () => {\n    const formvalue = { ...formValue\n    };\n    if (validate()) return false;\n    formvalue.message = '';\n    setFormValue(formvalue);\n    deleteRymindr(formValue);\n    onClose(!open);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    fullWidth: true,\n    maxWidth: \"xs\",\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitleStyled, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TypoPopHeadStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, \"Delete Booking\"), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"default\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    select: true,\n    label: \"Select Booking Date\",\n    name: \"category\",\n    value: categoryVal,\n    fullWidth: true,\n    error: !!formValidation.message,\n    helperText: formValidation.message,\n    onChange: handleCategoryChange,\n    variant: \"outlined\",\n    style: {\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, category.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.label,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 19\n    }\n  }, option.label)))), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Message\",\n    name: \"message\",\n    fullWidth: true,\n    variant: \"outlined\",\n    value: formValue.message,\n    onChange: handleinput,\n    inputProps: {\n      maxLength: 100\n    },\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      fontSize: 14,\n      color: '#bbb',\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, textLength + '/100')))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonDanger, {\n    color: \"primary\",\n    variant: \"contained\",\n    className: \"mb-20 width180\",\n    onClick: handleToSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }, \"Delete\")));\n}\nDeleteevent.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  rymindrListData: PropTypes.array.isRequired,\n  deleteRymindr: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/Bookings/Modal/BookingModelDelete.js"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","Typography","TextField","InputAdornment","List","ListItem","ListItemAvatar","ListItemText","MenuItem","Grid","Avatar","Divider","React","useEffect","useState","CloseIcon","Search","Check","Add","PropTypes","styled","DoneIcon","find_key","CloseButton","position","right","top","DialogTitleStyled","borderBottom","padding","marginBottom","ButtonDanger","theme","background","palette","error","main","color","warning","contrastText","TypoPopHeadStyled","secondary","fontSize","fontWeight","SearchFieldStyled","paddingTop","paddingBottom","height","ListItemStyled","borderRadius","AvatarShareStyled","width","marginRight","TypoListSubtext","ListStyled","maxHeight","overflow","ButtonSuccess","success","FormFields","category","message","Deleteevent","props","onClose","value","valueProp","deleteRymindr","open","getRymindrListData","other","setValue","count","setCount","categoryVal","setCategoryVal","setCategory","label","formValue","setFormValue","formValidation","setFormValidation","rymindrListData","updateRymindrListData","textLength","setTextLength","result","Array","prototype","map","call","s","toString","obj","push","ButtonColor","ButtonWarn","handleCategoryChange","event","formvalidation","target","handleinput","e","formdata","name","length","handleCancel","validate","isError","handleOnChange","alert","handleToSubmit","formvalue","option","maxLength","textAlign","propTypes","func","isRequired","bool","string","array"],"mappings":"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","sourcesContent":["import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Typography, \n  TextField, InputAdornment, List, ListItem, ListItemAvatar, ListItemText, MenuItem,Grid,\n  Avatar, Divider } from '@material-ui/core'\n\nimport React, { useEffect, useState } from 'react'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Search from '@material-ui/icons/Search'\nimport Check from '@material-ui/icons/Check'\nimport Add from '@material-ui/icons/Add'\nimport PropTypes from 'prop-types'\nimport { styled } from '@material-ui/core/styles'\nimport DoneIcon from '@material-ui/icons/Done';\n\nlet find_key \nconst CloseButton = styled(IconButton)({\n  position: 'absolute',\n  right: 0,\n  top: 0\n})\n\nconst DialogTitleStyled = styled(DialogTitle)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 24px',\n  marginBottom: 20\n})\nconst ButtonDanger = styled(Button)(({ theme }) => ({\n  background: theme.palette.error.main,\n  color: theme.palette.warning.contrastText\n}))\n\nconst TypoPopHeadStyled = styled(Typography)(({ theme }) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600'\n}))\n\nconst SearchFieldStyled = styled(TextField)(({ theme }) => ({\n  paddingTop: 10,\n  paddingBottom: 10,\n  '& div': { height: 50 }\n}))\n\nconst ListItemStyled = styled(ListItem)(({ theme }) => ({\n  borderRadius: 8\n}))\n\nconst AvatarShareStyled = styled(Avatar)({\n  height: 50,\n  width: 50,\n  marginRight: 10\n})\n\nconst TypoListSubtext = styled(Typography)(({ theme }) => ({\n  fontSize: 14,\n  color: theme.palette.secondary.contrastText\n}))\n\nconst ListStyled = styled(List)(({ theme }) => ({\n  maxHeight: 550, overflow: 'auto'\n}))\n\nconst ButtonSuccess = styled(Button)(({ theme }) => ({\n  background: '#00d264',\n  color: theme.palette.success.contrastText\n}))\n\n\nconst FormFields = {\n  \n  category:'',\n  message:'',\n \n}\n\n\n\nexport default function Deleteevent (props) {  \n  const { onClose, value: valueProp,deleteRymindr, open,getRymindrListData, ...other} = props\n  const [value, setValue] = useState(valueProp)\n \n  const [count, setCount] = useState(0) \n\n\nconst [categoryVal, setCategoryVal]   = React.useState()\n\nconst [category, setCategory]   = React.useState( [\n    {\n      value: 'All',\n      label: 'All'\n    },\n    {\n      value: 'Event',\n      label: 'Event'\n    },\n    {\n      value: 'Appointment',\n      label: 'Appointment'\n    }\n  ])\nconst [formValue, setFormValue] = useState(FormFields)\nconst [formValidation, setFormValidation] = useState(FormFields)\n\nconst [rymindrListData, updateRymindrListData] = useState(getRymindrListData);\nconst [textLength, setTextLength] = useState(100);\n \n useEffect(() => {\n    updateRymindrListData(getRymindrListData);\n\n\n    if(rymindrListData){\n\nvar result = Array.prototype.map.call(rymindrListData, s => s.value).toString();\n\nvar obj = {};\n\nobj[\"value\"] = 'All';\nobj[\"label\"] = 'All';\nrymindrListData.push(obj);\n  setCategory(rymindrListData);\n\n}\n\n\n}, [getRymindrListData]);\n\n  \n\n\n\nconst ButtonColor = styled(Button)(({ theme }) => ({\n    background: theme.palette.props.main,\n    color: theme.palette.props.contrastText\n  }))\n\n  const ButtonWarn = styled(Button)(({ theme }) => ({\n    background: theme.palette.warning.main,\n    color: theme.palette.warning.contrastText\n  }))\n\n\nconst handleCategoryChange = (event) => {\n  const formvalidation = { ...formValidation }\n  if (event.target.value){\n    formvalidation.message = ''\n    setFormValidation(formvalidation)\n  }\n    setCategoryVal(event.target.value)\n    setFormValue({ ...formValue, category: event.target.value })\n  }\nconst handleinput = (e) => {\n    const formdata = { ...formValue}\n    const { name, value } = e.target;\n    const formvalidation = { ...formValidation }\n        if (name === 'message') {\n        formdata.message = value\n        formvalidation.message = ''\n        setFormValidation(formvalidation)\n        setTextLength(100 - value.length  )\n        }\n        else {\n          formdata[name] = value\n        }\n    setFormValue(formdata)\n  }\n\n  const handleCancel = () => {    \n    setValue(false)\n    onClose(!open)   \n  }\n\n\n const validate = () => {\n    const formvalidation = { ...formValidation }\n    let isError = false\n     if (!formValue.category) {\n      isError = true\n      formvalidation.message = 'Please Select a Date'\n      setFormValidation(formvalidation)\n    }\n    return isError\n  }\n\n\n  const handleOnChange = (event) => {\n    const value = event.target.value; \n    \n    alert('change')\n  } \n  const handleToSubmit = () => {\n    const formvalue = { ...formValue }\n    if (validate()) return false\n     formvalue.message = ''\n     setFormValue(formvalue)\n      deleteRymindr(formValue);\n    onClose(!open) \n  }\n  \n  return (\n    <Dialog\n      fullWidth\n      maxWidth='xs'\n      disableBackdropClick\n      disableEscapeKeyDown\n      aria-labelledby='confirmation-dialog-title'\n      open={open}\n      {...other}  \n    >\n      <DialogTitleStyled id='form-dialog-title'>\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\n          <TypoPopHeadStyled>Delete Booking</TypoPopHeadStyled>\n          <IconButton color='default' onClick={handleCancel}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitleStyled>\n      <DialogContent>\n        \n\n        <ListStyled> \n        \n <Grid item xs={12}>\n          <TextField\n                select\n                label='Select Booking Date'\n                name='category'\n                value={categoryVal}\n                fullWidth\n                error={!!formValidation.message}\n                helperText={formValidation.message}\n                onChange={handleCategoryChange}\n                variant='outlined'\n                style={{marginBottom: 20}}\n              >\n                {category.map((option) => (\n                  <MenuItem key={option.label} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              </Grid>\n<Divider variant='inset' component='li' />\n                 <Grid item xs={12}>\n                <TextField label='Message'  \n                name=\"message\" \n                fullWidth variant='outlined' \n                value={formValue.message} \n                onChange={handleinput}\n                inputProps={{maxLength :100}}\n                fullWidth\n                />\n                <Typography style={{\n                    fontSize:14,\n                    color:'#bbb',\n                    textAlign: 'right'\n                }}> \n                    {textLength + '/100'}\n                </Typography>\n            </Grid>\n\n        </ListStyled>\n      </DialogContent>\n      <DialogActions>\n        <ButtonDanger  color='primary'\n         variant='contained' className='mb-20 width180'\n          onClick={handleToSubmit}\n \n\n         >Delete</ButtonDanger>\n        \n      </DialogActions>\n    </Dialog>\n  )\n}\n\n\nDeleteevent.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  rymindrListData: PropTypes.array.isRequired,\n   deleteRymindr: PropTypes.func.isRequired,\n}\n"]},"metadata":{},"sourceType":"module"}