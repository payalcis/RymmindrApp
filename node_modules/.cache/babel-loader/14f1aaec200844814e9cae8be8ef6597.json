{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/Dashboard/UpcommingRymindr.js\";\nimport { Avatar, Box, Button, Card, CardContent, CardHeader, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport EventIcon from '@material-ui/icons/Event';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport parse from 'html-react-parser';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      maxWidth: 800\n    }\n  }\n}));\nconst CardPaperStyled = styled(Card)(({\n  theme\n}) => ({\n  height: '100%'\n}));\nconst TypoHeadingStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 18,\n  color: theme.palette.primary.main,\n  textTransform: 'uppercase',\n  fontWeight: 700\n}));\nconst AvatarStyled = styled(Avatar)({\n  height: 55,\n  width: 55,\n  marginRight: 10\n});\nconst TypoRymTimeStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 14,\n  color: 'rgba(64, 87, 106, 0.55)'\n}));\nconst EventIconStyled = styled(EventIcon)(({\n  theme\n}) => ({\n  fontSize: 18,\n  color: theme.palette.primary.main,\n  marginBottom: -4,\n  marginRight: 10\n}));\nconst ScheduleIconStyled = styled(ScheduleIcon)(({\n  theme\n}) => ({\n  fontSize: 18,\n  color: theme.palette.primary.main,\n  marginBottom: -4,\n  marginRight: 10,\n  marginLeft: 30\n}));\n\nconst UpcommingRymindr = props => {\n  const history = useHistory();\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(CardPaperStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: /*#__PURE__*/React.createElement(TypoHeadingStyled, {\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Upcoming rymindrs\"),\n    action: /*#__PURE__*/React.createElement(Button, {\n      onClick: () => history.push('/rymindrs'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"View all\"),\n    className: \"cardHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, props.data.length > 0 ? props.data.map((item, index) => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      onClick: () => history.push('/rymindrs'),\n      alignItems: \"flex-start\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AvatarStyled, {\n      alt: \"semy Sharp\",\n      src: item.category_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText // primary={item.note}\n    , {\n      primary: /*#__PURE__*/React.createElement(Typography, {\n        type: \"body2\",\n        style: {\n          display: 'block',\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 28\n        }\n      }, item.note.replace(/<(.|\\n)*?>/g, '').replace(/\\&nbsp;/g, '')),\n      secondary: /*#__PURE__*/React.createElement(Box, {\n        flexDirection: \"row\",\n        mt: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TypoRymTimeStyled, {\n        variant: \"caption\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(EventIconStyled, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }), moment(item.rymindr_date).format('dddd DD MMMM YYYY'), /*#__PURE__*/React.createElement(ScheduleIconStyled, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }), moment(item.rymindr_date + ' ' + item.rymindr_time).format('h:ss'))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"No upcoming Rymindrs.\"))));\n};\n\nUpcommingRymindr.propTypes = {\n  data: PropTypes.any.isRequired\n};\nexport default UpcommingRymindr;","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/Dashboard/UpcommingRymindr.js"],"names":["Avatar","Box","Button","Card","CardContent","CardHeader","List","ListItem","ListItemAvatar","ListItemText","Typography","makeStyles","styled","EventIcon","PropTypes","React","ScheduleIcon","moment","useHistory","parse","useStyles","theme","root","margin","spacing","maxWidth","CardPaperStyled","height","TypoHeadingStyled","fontSize","color","palette","primary","main","textTransform","fontWeight","AvatarStyled","width","marginRight","TypoRymTimeStyled","EventIconStyled","marginBottom","ScheduleIconStyled","marginLeft","UpcommingRymindr","props","history","classes","push","data","length","map","item","index","category_image","display","whiteSpace","overflow","textOverflow","note","replace","rymindr_date","format","rymindr_time","propTypes","any","isRequired"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\n\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport EventIcon from '@material-ui/icons/Event';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport parse from 'html-react-parser';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      maxWidth: 800\n    }\n  }\n}));\n\nconst CardPaperStyled = styled(Card)(({ theme }) => ({\n  height: '100%',\n}));\n\nconst TypoHeadingStyled = styled(Typography)(({ theme }) => ({\n  fontSize: 18,\n  color: theme.palette.primary.main,\n  textTransform: 'uppercase',\n  fontWeight: 700,\n}));\nconst AvatarStyled = styled(Avatar)({\n  height: 55,\n  width: 55,\n  marginRight: 10,\n});\n\nconst TypoRymTimeStyled = styled(Typography)(({ theme }) => ({\n  fontSize: 14,\n  color: 'rgba(64, 87, 106, 0.55)',\n}));\n\nconst EventIconStyled = styled(EventIcon)(({ theme }) => ({\n  fontSize: 18,\n  color: theme.palette.primary.main,\n  marginBottom: -4,\n  marginRight: 10,\n}));\n\nconst ScheduleIconStyled = styled(ScheduleIcon)(({ theme }) => ({\n  fontSize: 18,\n  color: theme.palette.primary.main,\n  marginBottom: -4,\n  marginRight: 10,\n  marginLeft: 30,\n}));\n\nconst UpcommingRymindr = (props) => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  return (\n    <CardPaperStyled>\n      <CardHeader\n        title={ <TypoHeadingStyled component=\"span\">Upcoming rymindrs</TypoHeadingStyled> }\n        action={<Button onClick={() => history.push('/rymindrs')}>View all</Button>}\n        className=\"cardHeader\"\n      />\n      <CardContent>\n        <List className={classes.root}>\n          {props.data.length > 0 ?\n          (props.data.map((item, index) => {\n            return (\n              <ListItem onClick={() => history.push('/rymindrs')} alignItems=\"flex-start\" key={index}>\n                <ListItemAvatar>\n                  <AvatarStyled alt=\"semy Sharp\" src={item.category_image} />\n                </ListItemAvatar>\n                <ListItemText                  \n                  // primary={item.note}\n                  primary={<Typography type=\"body2\" style={{ display: 'block', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', }}>\n                      {/* <div class=\"text-container\"> */}\n                        {/* {parse(item.note)} */}\n                        {item.note.replace(/<(.|\\n)*?>/g, '').replace(/\\&nbsp;/g, '')}\n                      {/* </div> */}\n                    </Typography>}\n                  secondary={\n                    <Box flexDirection=\"row\" mt={1}>\n                      <TypoRymTimeStyled variant=\"caption\">\n                        <EventIconStyled />\n                        {moment(item.rymindr_date).format('dddd DD MMMM YYYY')}\n\n                        <ScheduleIconStyled />\n                        {moment(item.rymindr_date + ' ' + item.rymindr_time).format('h:ss')}\n                      </TypoRymTimeStyled>\n                    </Box>\n                  }\n                  \n                />\n              </ListItem>\n            );\n          }))\n          :\n          <Typography variant=\"body1\">No upcoming Rymindrs.</Typography>\n            \n        }\n        </List>\n      </CardContent>\n    </CardPaperStyled>\n  );\n};\n\nUpcommingRymindr.propTypes = {\n  data: PropTypes.any.isRequired,\n};\n\nexport default UpcommingRymindr;\n"]},"metadata":{},"sourceType":"module"}