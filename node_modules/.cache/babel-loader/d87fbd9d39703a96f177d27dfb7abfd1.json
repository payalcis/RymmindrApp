{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/SubmittedExams/SubmittedExams.js\";\nimport { makeStyles, styled, withStyles } from '@material-ui/core/styles';\nimport { Box, Button, Divider, Paper, Grid, List, ListItem, ListItemText, ListItemAvatar, Avatar, Typography, InputAdornment, TextField, IconButton, Hidden, MenuItem, Badge, Menu, Dialog, DialogContent, DialogTitle, AppBar, Tabs, Tab, CardMedia } from '@material-ui/core';\nimport { Send, Drafts, Close, ArrowBack, Delete, Edit, ViewAgenda } from '@material-ui/icons';\nimport { PDFDownloadLink, PDFViewer } from '@react-pdf/renderer';\nimport { getSubmittedFormsList } from '../../store/actions/formBuilder';\nimport { Link, useHistory, useParams, useLocation } from 'react-router-dom';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ReactFormBuilder, ElementStore, ReactFormGenerator } from 'react-form-builder2'; //import 'react-form-builder2/dist/app.css';\n\nimport { connect, useDispatch } from 'react-redux';\nimport CircularSpinner from '../../component/CircularSpinner/index';\nimport { withSnackbar } from 'notistack';\nimport PropTypes from 'prop-types';\nimport ConfirmationDialogRaw from '../Bookings/EventBooking/Modal';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Tabmenu from '../Bookings/EventBooking/Modal/Memberlist';\nimport { MyDocument } from './MyDocument';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport * as variables from '../../../src/variables';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: 'simple-tabpanel-${index}',\n    \"aria-labelledby\": 'simple-tab-${index}'\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 27\n    }\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    height: 100 + '%'\n  },\n  paper2: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    height: 100 + '%'\n  },\n  rightPanel: {\n    [theme.breakpoints.up('md')]: {\n      display: 'block !important'\n    }\n  },\n  icon: {\n    width: 150,\n    marginBottom: 40\n  },\n  content: {\n    textAlign: 'center',\n    textAlign: '-webkit-center',\n    paddingTop: '15%',\n    height: '80vh'\n  }\n}));\nconst TypoHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 24,\n  color: theme.palette.primary.main,\n  textTransform: 'uppercase',\n  fontWeight: 'bold'\n}));\nconst DialogTitleStyled = styled(DialogTitle)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 24px',\n  marginBottom: 20\n});\nconst TypoPopHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600'\n}));\nconst TabsStyles = styled(Tabs)(({\n  theme\n}) => ({\n  borderBottom: '1px solid #ccc',\n  '& span': {\n    justifyContent: 'center'\n  }\n}));\nconst ButtonWarn = styled(Button)(({\n  theme\n}) => ({\n  background: theme.palette.warning.main,\n  color: theme.palette.warning.contrastText,\n  marginRight: 5\n}));\nconst ButtonStyled = styled(Button)(({\n  theme\n}) => ({\n  background: '#FFA502'\n}));\nconst GridStyled = styled(Grid)(({\n  theme\n}) => ({\n  // paddingLeft: '10rem',\n  // paddingRight: '10rem',\n  [theme.breakpoints.down('md')]: {\n    paddingLeft: '8rem',\n    paddingRight: '8rem'\n  },\n  [theme.breakpoints.down('sm')]: {\n    paddingLeft: '2rem'\n  }\n}));\nconst TypoListSubtext = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 14,\n  color: theme.palette.secondary.contrastText\n}));\nconst AvatarShareStyled = styled(Avatar)({\n  height: 50,\n  width: 50\n});\nconst BoxStyled = styled(Box)({\n  display: 'flex',\n  '&>span': {\n    marginRight: 10\n  }\n});\nconst ButtonPlain = styled(Button)(({\n  theme\n}) => ({\n  color: '#98a5af',\n  fontSize: 12,\n  textTransform: 'capitalize',\n  background: 'none',\n  boxShadow: 'none'\n}));\nconst BoxColorStyled = styled(Box)({\n  background: '#f0f6fb',\n  fontSize: 12,\n  padding: '10px 15px',\n  borderRadius: 15,\n  minWidth: 160,\n  justifyContent: 'space-between'\n});\nconst ListStyled = styled(List)(({\n  theme\n}) => ({\n  paddingLeft: 20\n}));\n\nfunction useForceUpdate() {\n  const [value, setValue] = useState(0); // integer state\n\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nconst SubmittedExams = props => {\n  const {\n    user_id,\n    business_code,\n    first_name,\n    last_name,\n    default_category\n  } = JSON.parse(localStorage.getItem('userData'));\n  const {\n    error,\n    groups,\n    businessusers,\n    //matched_contact,\n    loading,\n    success_message2,\n    enqueueSnackbar,\n    getSubmittedFormsList,\n    submittedformsdata\n  } = props;\n  const history = useHistory();\n  const classes = useStyles();\n  const forceUpdate = useForceUpdate();\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = useState(false);\n  const [open3, setOpen3] = React.useState(false);\n  const [toErr, settoErr] = useState('');\n  const [formErr, setFormErr] = useState('');\n  const [subErr, setSubErr] = useState('');\n  const [checkOnSelectAllGroup, setcheckOnSelectAllGroup] = useState(false);\n  const [phoneNumber, setPhoneNumber] = useState([]);\n  const [checked, setChecked] = useState([]);\n  const [memberchecked, setMemberchecked] = useState([]);\n  const [group_members, setGroup_members] = useState([]);\n  const [checkOnSelectAllMembers, setcheckOnSelectAllMembers] = useState(false);\n  const [groupname_membersname, setGroupname_membersname] = useState([]);\n  const [showForm, setShowForm] = useState({});\n  const [builderData, setBuilderData] = useState({});\n  const [subject, setSubject] = useState('');\n  const [selectedItem, setSelectedItem] = useState('');\n  const [examTitle, setExamTitle] = useState('');\n  const {\n    exam_id\n  } = useParams();\n  const [getFormData, setFormData] = useState(null);\n  const [isPDF, setIsPDF] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsPDF(true);\n    }, 1000);\n    getSubmittedFormsList({\n      user_id,\n      exam_id: exam_id\n    });\n  }, [getSubmittedFormsList]); // useEffect(() => {\n  //   setFormData(null);\n  //   let mounted = true;\n  //   setTimeout(function () {\n  //     if (mounted) {\n  //       if (submittedformsdata && submittedformsdata.length > 0) {\n  //         setFormData(submittedformsdata);\n  //         setExamTitle(submittedformsdata[0].title);\n  //         setSelectedItem(submittedformsdata[0].id);\n  //         // let getForm = JSON.parse(submittedformsdata[0].builder_data).task_data;\n  //         // let form_data = JSON.parse(submittedformsdata[0].form_data);\n  //         let getForm = null;\n  //         if (submittedformsdata[0].builder_data) {\n  //           getForm = JSON.parse(submittedformsdata[0].builder_data).task_data;\n  //         }\n  //         let form_data = null;\n  //         if (submittedformsdata[0].form_data) {\n  //           form_data = JSON.parse(submittedformsdata[0].form_data);\n  //         }\n  //         setShowForm({\n  //           data: getForm,\n  //           title: submittedformsdata[0].title,\n  //           form_data: form_data,\n  //           id: submittedformsdata[0].id,\n  //           user_id: submittedformsdata[0].user_id,\n  //           first_name: submittedformsdata[0].first_name,\n  //           last_name: submittedformsdata[0].last_name,\n  //           mobile_no: submittedformsdata[0].mobile_no,\n  //           is_delete: submittedformsdata[0].is_delete,\n  //         });\n  //       } else {\n  //         setExamTitle('');\n  //       }\n  //     }\n  //   }, 0);\n  //   return function cleanup() {\n  //     mounted = false;\n  //   };\n  // }, [submittedformsdata]);\n\n  useEffect(() => {\n    console.log('submittedformsdatasubmittedformsdatasubmittedformsdata=', submittedformsdata); //setFormData(null);\n\n    let mounted = true; // setTimeout(function () {\n    //   if (mounted) {\n\n    if (submittedformsdata && submittedformsdata.length > 0) {\n      setFormData(submittedformsdata);\n      setExamTitle(submittedformsdata[0].title);\n      setSelectedItem(submittedformsdata[0].id); // let getForm = JSON.parse(submittedformsdata[0].builder_data).task_data;\n      // let form_data = JSON.parse(submittedformsdata[0].form_data);\n\n      let getForm = null;\n\n      if (submittedformsdata[0].builder_data) {\n        getForm = JSON.parse(submittedformsdata[0].builder_data).task_data;\n      }\n\n      let form_data = null;\n\n      if (submittedformsdata[0].form_data) {\n        form_data = JSON.parse(submittedformsdata[0].form_data);\n      }\n\n      setShowForm({\n        data: getForm,\n        title: submittedformsdata[0].title,\n        form_data: form_data,\n        id: submittedformsdata[0].id,\n        user_id: submittedformsdata[0].user_id,\n        first_name: submittedformsdata[0].first_name,\n        last_name: submittedformsdata[0].last_name,\n        mobile_no: submittedformsdata[0].mobile_no,\n        is_delete: submittedformsdata[0].is_delete\n      });\n    } else {\n      setFormData([]);\n      setExamTitle('');\n      setSelectedItem('');\n    } //   }\n    // }, 0);\n    // return function cleanup() {\n    //   mounted = false;\n    // };\n\n  }, [submittedformsdata]);\n  useMemo(() => {\n    if (success_message2) {\n      success_message2 && enqueueSnackbar(success_message2, {\n        variant: 'success'\n      });\n      history.push('');\n      handleCloseModal();\n    }\n  }, [success_message2]);\n  useMemo(() => {\n    error && enqueueSnackbar(error, {\n      variant: 'error'\n    });\n  }, [error]);\n\n  const handleInputChange = id => {\n    setSelectedItem(id);\n    console.log('id====', id);\n    let result = getFormData.filter(a => a.id == id);\n    console.log('result=======', result);\n\n    if (result.length > 0) {\n      let getForm = null;\n\n      if (result[0].builder_data) {\n        getForm = JSON.parse(result[0].builder_data).task_data;\n      }\n\n      let form_data = null;\n\n      if (result[0].form_data) {\n        form_data = JSON.parse(result[0].form_data);\n      }\n\n      console.log('handleInputChange=======', form_data);\n      setShowForm({\n        data: getForm,\n        title: result[0].title,\n        form_data: form_data,\n        id: id,\n        user_id: result[0].user_id,\n        first_name: result[0].first_name,\n        last_name: result[0].last_name,\n        mobile_no: result[0].mobile_no,\n        is_delete: result[0].is_delete\n      });\n    }\n  };\n\n  const EventBookList = getFormData !== null && getFormData.length > 0 ? getFormData.map((item, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    selected: item.id == selectedItem,\n    onClick: event => handleInputChange(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"text-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 21\n      }\n    }, item.first_name, \" \", item.last_name, \" (\", item.mobile_no, \")\"), /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }\n    }, item.is_delete == 1 ? 'Declined' : 'Submitted')),\n    secondary: /*#__PURE__*/React.createElement(TypoListSubtext, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 28\n      }\n    }, `${moment(item.created_at).format('DD-MMMM-YYYY')}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  })))) : /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }\n  }, \"No Submitted Exams Found.\");\n\n  const handlesearch = e => {\n    const searchStr = e.target.value;\n\n    if (searchStr.length > 1) {\n      //const filteredList = submittedformsdata.filter((obj) => obj.title.toLowerCase().includes(searchStr.toLowerCase()));\n      const filteredList = submittedformsdata.filter(obj => obj.first_name.toLowerCase().includes(searchStr.toLowerCase()) || obj.last_name.toLowerCase().includes(searchStr.toLowerCase()) || obj.mobile_no.toLowerCase().includes(searchStr.toLowerCase()) || (obj.first_name + ' ' + obj.last_name).toLowerCase().includes(searchStr.toLowerCase()));\n      setFormData(filteredList);\n    } else {\n      setFormData(submittedformsdata);\n    }\n  };\n\n  let downloadfun = () => {\n    window.print();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    className: \"main-wrap-head\",\n    container: true,\n    style: {\n      marginBottom: 20\n    },\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    onClick: () => history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(TypoHeadStyled, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }\n  }, examTitle)))), /*#__PURE__*/React.createElement(Grid, {\n    className: \"main-wrap-body upcmgRym-cont-wrap\",\n    container: true,\n    alignItems: \"stretch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    className: \"pr-25 leftSide-cont\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: clsx(classes.paper, 'sideBar-scroll'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 11\n    }\n  }, getFormData !== null && getFormData.length > 0 ? /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    className: \"mr-10\",\n    onClick: () => {\n      window.open(`/#/download-exam-attempt-inone/${exam_id}`, '_blank');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 17\n    }\n  }, \"Download All in one PDF\")) : null, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group has-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"fa fa-search form-control-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    onKeyUp: handlesearch,\n    placeholder: \"Search Contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }\n  }, getFormData != null ? EventBookList : loading && /*#__PURE__*/React.createElement(CircularSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 69\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    className: clsx(classes.rightPanel, 'rightSide-cont'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 11\n    }\n  }, getFormData !== null && getFormData.length > 0 ? /*#__PURE__*/React.createElement(GridStyled, {\n    container: true,\n    id: \"left\",\n    style: {\n      padding: '0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BoxStyled, {\n    alignItems: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    alignItems: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    fontWeight: \"fontWeightBold\",\n    m: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 23\n    }\n  }, ` ${showForm.first_name} ${showForm.last_name} ( ${showForm.mobile_no} )`)))), /*#__PURE__*/React.createElement(Grid, {\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 19\n    }\n  }, getFormData !== null && getFormData.length > 0 ? showForm.is_delete == 0 ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    className: \"mr-10\",\n    onClick: () => {\n      window.open(`/#/download-exam-attempt/${exam_id}/${showForm.user_id}`, '_blank');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 29\n    }\n  }, \"Download PDF\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: \"mr-10\",\n    style: {\n      color: 'red'\n    },\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 29\n    }\n  }, \"DECLINED\") : null))) : null, /*#__PURE__*/React.createElement(ListStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 15\n    }\n  }, getFormData !== null && getFormData.length > 0 ? /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 19\n    }\n  }, showForm.is_delete == 0 ? showForm.data && showForm.data.length > 0 ? /*#__PURE__*/React.createElement(ReactFormGenerator, {\n    hide_actions: true,\n    form_action: \"/\",\n    form_method: \"POST\",\n    variables: variables,\n    data: showForm.data,\n    answer_data: showForm.form_data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 25\n    }\n  }) : null : submittedformsdata !== null && submittedformsdata.length > 0 ? /*#__PURE__*/React.createElement(Typography, {\n    alignItems: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    fontWeight: \"fontWeightBold\",\n    m: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 25\n    }\n  }, \"Declined to attempt\")) : null) : null))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.rymidr.loading,\n    error: state.rymidr.error,\n    groups: state.rymidr.groups,\n    success_message2: state.formBuilder.success_message2,\n    submittedformsdata: state.formBuilder.submittedformsdata\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getSubmittedFormsList: data => dispatch(getSubmittedFormsList(data))\n  };\n};\n\nSubmittedExams.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired,\n  groups: PropTypes.array.isRequired,\n  getSubmittedFormsList: PropTypes.func.isRequired,\n  success_message2: PropTypes.any.isRequired,\n  enqueueSnackbar: PropTypes.func.isRequired,\n  submittedformsdata: PropTypes.array.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(SubmittedExams));","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/SubmittedExams/SubmittedExams.js"],"names":["makeStyles","styled","withStyles","Box","Button","Divider","Paper","Grid","List","ListItem","ListItemText","ListItemAvatar","Avatar","Typography","InputAdornment","TextField","IconButton","Hidden","MenuItem","Badge","Menu","Dialog","DialogContent","DialogTitle","AppBar","Tabs","Tab","CardMedia","Send","Drafts","Close","ArrowBack","Delete","Edit","ViewAgenda","PDFDownloadLink","PDFViewer","getSubmittedFormsList","Link","useHistory","useParams","useLocation","React","useEffect","useMemo","useState","ReactFormBuilder","ElementStore","ReactFormGenerator","connect","useDispatch","CircularSpinner","withSnackbar","PropTypes","ConfirmationDialogRaw","Autocomplete","Tabmenu","MyDocument","clsx","moment","variables","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","position","height","paper2","rightPanel","breakpoints","up","display","icon","width","marginBottom","content","paddingTop","TypoHeadStyled","fontSize","primary","main","textTransform","fontWeight","DialogTitleStyled","borderBottom","TypoPopHeadStyled","contrastText","TabsStyles","justifyContent","ButtonWarn","background","warning","marginRight","ButtonStyled","GridStyled","down","paddingLeft","paddingRight","TypoListSubtext","AvatarShareStyled","BoxStyled","ButtonPlain","boxShadow","BoxColorStyled","borderRadius","minWidth","ListStyled","useForceUpdate","setValue","SubmittedExams","user_id","business_code","first_name","last_name","default_category","JSON","parse","localStorage","getItem","error","groups","businessusers","loading","success_message2","enqueueSnackbar","submittedformsdata","history","classes","forceUpdate","open","setOpen","open2","setOpen2","open3","setOpen3","toErr","settoErr","formErr","setFormErr","subErr","setSubErr","checkOnSelectAllGroup","setcheckOnSelectAllGroup","phoneNumber","setPhoneNumber","checked","setChecked","memberchecked","setMemberchecked","group_members","setGroup_members","checkOnSelectAllMembers","setcheckOnSelectAllMembers","groupname_membersname","setGroupname_membersname","showForm","setShowForm","builderData","setBuilderData","subject","setSubject","selectedItem","setSelectedItem","examTitle","setExamTitle","exam_id","getFormData","setFormData","isPDF","setIsPDF","handleClickOpen","handleCloseModal","setTimeout","console","log","mounted","length","title","id","getForm","builder_data","task_data","form_data","data","mobile_no","is_delete","variant","push","handleInputChange","result","filter","a","EventBookList","map","item","event","created_at","format","handlesearch","e","searchStr","target","filteredList","obj","toLowerCase","includes","downloadfun","window","print","goBack","mapStateToProps","state","rymidr","formBuilder","mapDispatchToProps","dispatch","bool","string","array","func"],"mappings":"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","sourcesContent":["import { makeStyles, styled, withStyles } from '@material-ui/core/styles';\n\nimport {\n  Box,\n  Button,\n  Divider,\n  Paper,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Avatar,\n  Typography,\n  InputAdornment,\n  TextField,\n  IconButton,\n  Hidden,\n  MenuItem,\n  Badge,\n  Menu,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  AppBar,\n  Tabs,\n  Tab,\n  CardMedia,\n} from '@material-ui/core';\n\nimport { Send, Drafts, Close, ArrowBack ,Delete, Edit, ViewAgenda } from '@material-ui/icons';\nimport { PDFDownloadLink, PDFViewer } from '@react-pdf/renderer';\n\nimport { getSubmittedFormsList } from '../../store/actions/formBuilder';\nimport { Link, useHistory, useParams, useLocation } from 'react-router-dom';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ReactFormBuilder, ElementStore, ReactFormGenerator } from 'react-form-builder2';\n//import 'react-form-builder2/dist/app.css';\nimport { connect, useDispatch } from 'react-redux';\nimport CircularSpinner from '../../component/CircularSpinner/index';\nimport { withSnackbar } from 'notistack';\nimport PropTypes from 'prop-types';\nimport ConfirmationDialogRaw from '../Bookings/EventBooking/Modal';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Tabmenu from '../Bookings/EventBooking/Modal/Memberlist';\nimport { MyDocument } from './MyDocument';\nimport clsx from 'clsx';\nimport moment from 'moment';\n\nimport * as variables from '../../../src/variables';\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={'simple-tabpanel-${index}'}\n      aria-labelledby={'simple-tab-${index}'}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    height: 100 + '%',\n  },\n\n  paper2: {\n    padding: theme.spacing(2),\n\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    height: 100 + '%',\n  },\n\n  rightPanel: {\n    [theme.breakpoints.up('md')]: {\n      display: 'block !important',\n    },\n  },\n  icon: {\n    width: 150,\n    marginBottom: 40,\n  },\n  content: {\n    textAlign: 'center',\n    textAlign: '-webkit-center',\n    paddingTop: '15%',\n    height: '80vh',\n  },\n}));\n\nconst TypoHeadStyled = styled(Typography)(({ theme }) => ({\n  fontSize: 24,\n  color: theme.palette.primary.main,\n  textTransform: 'uppercase',\n  fontWeight: 'bold',\n}));\n\nconst DialogTitleStyled = styled(DialogTitle)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 24px',\n  marginBottom: 20,\n});\n\nconst TypoPopHeadStyled = styled(Typography)(({ theme }) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600',\n}));\n\nconst TabsStyles = styled(Tabs)(({ theme }) => ({\n  borderBottom: '1px solid #ccc',\n  '& span': {\n    justifyContent: 'center',\n  },\n}));\n\nconst ButtonWarn = styled(Button)(({ theme }) => ({\n  background: theme.palette.warning.main,\n  color: theme.palette.warning.contrastText,\n  marginRight: 5,\n}));\n\nconst ButtonStyled = styled(Button)(({ theme }) => ({\n  background: '#FFA502',\n}));\n\nconst GridStyled = styled(Grid)(({ theme }) => ({\n  // paddingLeft: '10rem',\n  // paddingRight: '10rem',\n  [theme.breakpoints.down('md')]: {\n    paddingLeft: '8rem',\n    paddingRight: '8rem',\n  },\n\n  [theme.breakpoints.down('sm')]: {\n    paddingLeft: '2rem',\n  },\n}));\n\nconst TypoListSubtext = styled(Typography)(({ theme }) => ({\n  fontSize: 14,\n  color: theme.palette.secondary.contrastText,\n}));\n\nconst AvatarShareStyled = styled(Avatar)({\n  height: 50,\n  width: 50,\n});\n\nconst BoxStyled = styled(Box)({\n  display: 'flex',\n  '&>span': { marginRight: 10 },\n});\n\nconst ButtonPlain = styled(Button)(({ theme }) => ({\n  color: '#98a5af',\n  fontSize: 12,\n  textTransform: 'capitalize',\n  background: 'none',\n  boxShadow: 'none',\n}));\nconst BoxColorStyled = styled(Box)({\n  background: '#f0f6fb',\n  fontSize: 12,\n  padding: '10px 15px',\n  borderRadius: 15,\n  minWidth: 160,\n  justifyContent: 'space-between',\n});\nconst ListStyled = styled(List)(({ theme }) => ({\n  paddingLeft: 20,\n}));\nfunction useForceUpdate() {\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue((value) => value + 1); // update the state to force render\n}\nconst SubmittedExams = (props) => {\n  const { user_id, business_code, first_name, last_name, default_category } = JSON.parse(\n    localStorage.getItem('userData')\n  );\n  const {\n    error,\n    groups,\n    businessusers,\n    //matched_contact,\n    loading,\n    success_message2,\n    enqueueSnackbar,\n    getSubmittedFormsList,\n    submittedformsdata,\n  } = props;\n  const history = useHistory();\n  const classes = useStyles();\n  const forceUpdate = useForceUpdate();\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = useState(false);\n  const [open3, setOpen3] = React.useState(false);\n  const [toErr, settoErr] = useState('');\n  const [formErr, setFormErr] = useState('');\n  const [subErr, setSubErr] = useState('');\n  const [checkOnSelectAllGroup, setcheckOnSelectAllGroup] = useState(false);\n  const [phoneNumber, setPhoneNumber] = useState([]);\n  const [checked, setChecked] = useState([]);\n  const [memberchecked, setMemberchecked] = useState([]);\n  const [group_members, setGroup_members] = useState([]);\n  const [checkOnSelectAllMembers, setcheckOnSelectAllMembers] = useState(false);\n  const [groupname_membersname, setGroupname_membersname] = useState([]);\n\n  const [showForm, setShowForm] = useState({});\n  const [builderData, setBuilderData] = useState({});\n  const [subject, setSubject] = useState('');\n  const [selectedItem, setSelectedItem] = useState('');\n  const [examTitle, setExamTitle] = useState('');\n  const { exam_id } = useParams();\n  const [getFormData, setFormData] = useState(null);\n  const [isPDF, setIsPDF] = useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleCloseModal = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsPDF(true);\n    }, 1000);\n    getSubmittedFormsList({ user_id, exam_id: exam_id });\n  }, [getSubmittedFormsList]);\n\n  // useEffect(() => {\n  //   setFormData(null);\n  //   let mounted = true;\n  //   setTimeout(function () {\n  //     if (mounted) {\n  //       if (submittedformsdata && submittedformsdata.length > 0) {\n  //         setFormData(submittedformsdata);\n  //         setExamTitle(submittedformsdata[0].title);\n  //         setSelectedItem(submittedformsdata[0].id);\n  //         // let getForm = JSON.parse(submittedformsdata[0].builder_data).task_data;\n  //         // let form_data = JSON.parse(submittedformsdata[0].form_data);\n  //         let getForm = null;\n  //         if (submittedformsdata[0].builder_data) {\n  //           getForm = JSON.parse(submittedformsdata[0].builder_data).task_data;\n  //         }\n  //         let form_data = null;\n  //         if (submittedformsdata[0].form_data) {\n  //           form_data = JSON.parse(submittedformsdata[0].form_data);\n  //         }\n\n  //         setShowForm({\n  //           data: getForm,\n  //           title: submittedformsdata[0].title,\n  //           form_data: form_data,\n  //           id: submittedformsdata[0].id,\n  //           user_id: submittedformsdata[0].user_id,\n  //           first_name: submittedformsdata[0].first_name,\n  //           last_name: submittedformsdata[0].last_name,\n  //           mobile_no: submittedformsdata[0].mobile_no,\n  //           is_delete: submittedformsdata[0].is_delete,\n  //         });\n  //       } else {\n  //         setExamTitle('');\n  //       }\n  //     }\n  //   }, 0);\n  //   return function cleanup() {\n  //     mounted = false;\n  //   };\n  // }, [submittedformsdata]);\n\n  useEffect(() => {\n    console.log('submittedformsdatasubmittedformsdatasubmittedformsdata=', submittedformsdata);\n    //setFormData(null);\n    let mounted = true;\n    // setTimeout(function () {\n    //   if (mounted) {\n    if (submittedformsdata && submittedformsdata.length > 0) {\n      setFormData(submittedformsdata);\n      setExamTitle(submittedformsdata[0].title);\n      setSelectedItem(submittedformsdata[0].id);\n      // let getForm = JSON.parse(submittedformsdata[0].builder_data).task_data;\n      // let form_data = JSON.parse(submittedformsdata[0].form_data);\n      let getForm = null;\n      if (submittedformsdata[0].builder_data) {\n        getForm = JSON.parse(submittedformsdata[0].builder_data).task_data;\n      }\n      let form_data = null;\n      if (submittedformsdata[0].form_data) {\n        form_data = JSON.parse(submittedformsdata[0].form_data);\n      }\n\n      setShowForm({\n        data: getForm,\n        title: submittedformsdata[0].title,\n        form_data: form_data,\n        id: submittedformsdata[0].id,\n        user_id: submittedformsdata[0].user_id,\n        first_name: submittedformsdata[0].first_name,\n        last_name: submittedformsdata[0].last_name,\n        mobile_no: submittedformsdata[0].mobile_no,\n        is_delete: submittedformsdata[0].is_delete,\n      });\n    } else {\n      setFormData([]);\n      setExamTitle('');\n      setSelectedItem('');\n    }\n    //   }\n    // }, 0);\n    // return function cleanup() {\n    //   mounted = false;\n    // };\n  }, [submittedformsdata]);\n\n  useMemo(() => {\n    if (success_message2) {\n      success_message2 && enqueueSnackbar(success_message2, { variant: 'success' });\n      history.push('');\n      handleCloseModal();\n    }\n  }, [success_message2]);\n\n  useMemo(() => {\n    error && enqueueSnackbar(error, { variant: 'error' });\n  }, [error]);\n\n  const handleInputChange = (id) => {\n    setSelectedItem(id);\n\n    console.log('id====', id);\n    let result = getFormData.filter((a) => a.id == id);\n    console.log('result=======', result);\n    if (result.length > 0) {\n      let getForm = null;\n      if (result[0].builder_data) {\n        getForm = JSON.parse(result[0].builder_data).task_data;\n      }\n\n      let form_data = null;\n      if (result[0].form_data) {\n        form_data = JSON.parse(result[0].form_data);\n      }\n\n      console.log('handleInputChange=======', form_data);\n      setShowForm({\n        data: getForm,\n        title: result[0].title,\n        form_data: form_data,\n        id: id,\n        user_id: result[0].user_id,\n        first_name: result[0].first_name,\n        last_name: result[0].last_name,\n        mobile_no: result[0].mobile_no,\n        is_delete: result[0].is_delete,\n      });\n    }\n  };\n\n  const EventBookList =\n    getFormData !== null && getFormData.length > 0 ? (\n      getFormData.map((item, index) => (\n        <>\n          <Hidden smDown implementation=\"css\">\n            <ListItem button selected={item.id == selectedItem} onClick={(event) => handleInputChange(item.id)}>\n              <ListItemText\n                primary={\n                  <>\n                    <div class=\"text-container\">\n                      {item.first_name} {item.last_name} ({item.mobile_no})\n                    </div>\n                    <b>{item.is_delete == 1 ? 'Declined' : 'Submitted'}</b>\n                  </>\n                }\n                secondary={<TypoListSubtext>{`${moment(item.created_at).format('DD-MMMM-YYYY')}`}</TypoListSubtext>}\n              />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n          </Hidden>\n        </>\n      ))\n    ) : (\n      <List>No Submitted Exams Found.</List>\n    );\n\n  const handlesearch = (e) => {\n    const searchStr = e.target.value;\n    if (searchStr.length > 1) {\n      //const filteredList = submittedformsdata.filter((obj) => obj.title.toLowerCase().includes(searchStr.toLowerCase()));\n\n      const filteredList = submittedformsdata.filter(\n        (obj) =>\n          obj.first_name.toLowerCase().includes(searchStr.toLowerCase()) ||\n          obj.last_name.toLowerCase().includes(searchStr.toLowerCase()) ||\n          obj.mobile_no.toLowerCase().includes(searchStr.toLowerCase()) ||\n          (obj.first_name + ' ' + obj.last_name).toLowerCase().includes(searchStr.toLowerCase())\n      );\n\n      setFormData(filteredList);\n    } else {\n      setFormData(submittedformsdata);\n    }\n  };\n\n  let downloadfun = () => {\n    window.print();\n  };\n\n  return (\n    <>\n      <Grid className=\"main-wrap-head\" container style={{ marginBottom: 20 }} alignItems=\"center\">\n        <Grid item xs={5}>\n          <Box display=\"flex\" alignItems=\"center\">\n            <IconButton\n              color='inherit'\n              onClick={() => history.goBack()}\n            >\n              <ArrowBack />\n            </IconButton>\n            <TypoHeadStyled variant=\"h4\">{examTitle}</TypoHeadStyled>\n          </Box>\n        </Grid>\n      </Grid>\n\n      <Grid className=\"main-wrap-body upcmgRym-cont-wrap\" container alignItems=\"stretch\">\n        <Grid item xs={12} md={4} className=\"pr-25 leftSide-cont\">\n          <Paper className={clsx(classes.paper, 'sideBar-scroll')}>\n\n            {getFormData !== null && getFormData.length > 0 ? (\n              <Box display=\"flex\" justifyContent=\"center\">\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  className=\"mr-10\"\n                  onClick={() => {\n                    window.open(`/#/download-exam-attempt-inone/${exam_id}`, '_blank');\n                  }}\n                >\n                  Download All in one PDF\n                </Button>\n              </Box>\n            ) : null}\n            <hr />\n\n            <div class=\"form-group has-search\">\n              <span class=\"fa fa-search form-control-feedback\"></span>\n              <input type=\"text\" class=\"form-control\" onKeyUp={handlesearch} placeholder=\"Search Contacts\" />\n            </div>\n            {/* <List style={{ maxHeight: 650 }}>{EventBookList}</List> */}\n            {/* <List>{getFormData != undefined ? EventBookList : loading && <CircularSpinner />}</List> */}\n            <List>{getFormData != null ? EventBookList : loading && <CircularSpinner />}</List>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={8} className={clsx(classes.rightPanel, 'rightSide-cont')}>\n          <Paper className={classes.paper2}>\n            {getFormData !== null && getFormData.length > 0 ? (\n              <GridStyled container id=\"left\" style={{padding:'0px'}}>\n                <Grid xs={6}>\n                  <BoxStyled alignItems=\"left\">\n                    <Typography alignItems=\"left\">\n                      <Box fontWeight=\"fontWeightBold\" m={3}>\n                        {` ${showForm.first_name} ${showForm.last_name} ( ${showForm.mobile_no} )`}\n                      </Box>\n                    </Typography>\n                  </BoxStyled>\n                </Grid>\n                <Grid xs={6}>\n                  <Box display=\"flex\" justifyContent=\"flex-end\">\n\n                    {\n                      getFormData !== null && getFormData.length > 0 ?\n                        (\n                          showForm.is_delete == 0 ?\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              className=\"mr-10\"\n                              onClick={() => {\n                                window.open(`/#/download-exam-attempt/${exam_id}/${showForm.user_id}`, '_blank');\n                              }\n                              }>\n                              Download PDF\n                            </Button> :\n\n                            <Button\n                              variant=\"outlined\"\n                              className=\"mr-10\"\n                              style={{ color: 'red' }}\n                              disabled={true}>\n                              DECLINED\n                            </Button>\n                        )\n                        : null\n                    }\n\n                  </Box>\n                </Grid>\n              </GridStyled>\n            ) : null}\n            <ListStyled>\n              <ListItem alignItems=\"flex-start\">\n                {getFormData !== null && getFormData.length > 0 ? (\n                  <Grid item xs={12}>\n                    {showForm.is_delete == 0 ? (\n                      showForm.data && showForm.data.length > 0 ? (\n                        <ReactFormGenerator\n                          hide_actions={true}\n                          form_action=\"/\"\n                          form_method=\"POST\"\n                          variables={variables}\n                          data={showForm.data}\n                          answer_data={showForm.form_data}\n                        />\n                      ) : null\n                    ) : submittedformsdata !== null && submittedformsdata.length > 0 ? (\n                      <Typography alignItems=\"left\">\n                        <Box fontWeight=\"fontWeightBold\" m={3}>\n                          Declined to attempt\n                        </Box>\n                      </Typography>\n                    ) : null}\n                  </Grid>\n                ) : null}\n              </ListItem>\n            </ListStyled>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.rymidr.loading,\n    error: state.rymidr.error,\n    groups: state.rymidr.groups,\n\n    success_message2: state.formBuilder.success_message2,\n    submittedformsdata: state.formBuilder.submittedformsdata,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getSubmittedFormsList: (data) => dispatch(getSubmittedFormsList(data)),\n  };\n};\n\nSubmittedExams.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired,\n  groups: PropTypes.array.isRequired,\n  getSubmittedFormsList: PropTypes.func.isRequired,\n  success_message2: PropTypes.any.isRequired,\n  enqueueSnackbar: PropTypes.func.isRequired,\n  submittedformsdata: PropTypes.array.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(SubmittedExams));\n"]},"metadata":{},"sourceType":"module"}