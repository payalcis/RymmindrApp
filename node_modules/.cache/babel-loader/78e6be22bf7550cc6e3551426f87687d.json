{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/Calendar/Calendar.js\";\nimport React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport { Grid, Box, Typography } from '@material-ui/core';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction'; // needed for dayClick\n\nimport { withRouter } from 'react-router-dom';\nimport './main.scss';\nimport { getRymindrListCalendar } from '../../store/actions/messageCenterAction';\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport moment from 'moment'; //testing123\n\nconst CircularProgressstyled = styled(CircularProgress)({\n  position: 'absolute',\n  top: '45%',\n  left: '45%',\n  zIndex: 9999,\n  opacity: 1\n});\n\nclass DemoApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.calendarComponentRef = React.createRef();\n    this.state = {\n      rymindrList: [],\n      calendarWeekends: true,\n      calendarEvents: [// initial event data\n\n        /*{ title: 'Event Now', start: new Date() }*/\n      ],\n      isLoader: true\n    };\n\n    this.renderEventContent = eventInfo => {\n      let eventTime = moment(eventInfo.event.start).format('YYYY--MM-DD, HH:mm A');\n      console.log('datatta', moment(eventInfo.event.start).format('YYYY--MM-DD, HH:mm A'));\n      console.warn('eventInfo.event.start333', eventInfo.timeText); // if(eventInfo.timeText.slice(1, 3)==='p')\n      // {\n      //   eventTime=eventInfo.timeText.slice(0,-1)+'PM'\n      // }else  if(eventInfo.timeText.slice(-1)==='a'){\n      //   eventTime=eventInfo.timeText.slice(0,-1)+'AM'\n      // }else{\n      //    eventTime=eventInfo.timeText\n      // }\n      // return (\n      //   <>\n      //     <b>{eventTime}</b>\n      //     <i>{eventInfo.event.title}</i>\n      //   </>\n      // )\n    };\n\n    this.toggleWeekends = () => {\n      this.setState({\n        // update a property\n        calendarWeekends: !this.state.calendarWeekends\n      });\n    };\n\n    this.gotoPast = () => {\n      let calendarApi = this.calendarComponentRef.current.getApi();\n      calendarApi.gotoDate('2000-01-01'); // call a method on the Calendar object\n    };\n\n    this.handleDateClick = arg => {\n      console.warn('arg1111', arg);\n      const {\n        history\n      } = this.props; //alert('arg.date'+ arg.date);\n\n      const date = new Date(arg.date),\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n            day = (\"0\" + date.getDate()).slice(-2);\n      const selDate = [date.getFullYear(), mnth, day].join(\"-\"); // console.log('selDate======',selDate);\n      // alert('selDate'+selDate);\n      // return false;\n      //history.push('/create-rymindr', {dateSelected: arg.date});\n\n      history.push({\n        pathname: '/create-rymindr',\n        state: {\n          selectedDate: selDate\n        }\n      });\n      /* this.setState({  // add new event data\n         calendarEvents: this.state.calendarEvents.concat({ // creates a new array\n           title: 'New Event',\n           start: arg.date,\n           allDay: arg.allDay\n         })\n       })*/\n    };\n\n    this.handleEventClick = clickInfo => {\n      const {\n        history\n      } = this.props;\n      let param = clickInfo.event.extendedProps.param;\n      let paramType = clickInfo.event.extendedProps.paramType;\n\n      if (paramType === 'date') {\n        // Convert the date format\n        let dateTime = param.split('-');\n        let convertedDateTime = dateTime[2] + '-' + dateTime[0] + '-' + dateTime[1];\n        param = convertedDateTime;\n      } // convert it to base64\n\n\n      param = encodeURI(param);\n      history.push('/rymindrs/' + param + '/' + paramType);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user_id,\n      business_code,\n      first_name,\n      last_name\n    } = JSON.parse(localStorage.getItem('userData')); //const { rymindrList } = this.props;\n\n    this.props.getRymindrListCalendar({\n      user_id\n    }).then(res => {\n      const allRymindrList = this.props.rymindrList;\n      console.log('ryyy=====', allRymindrList);\n\n      if (allRymindrList.length > 0) {\n        const copycalendarEvent = [...this.state.calendarEvents];\n        allRymindrList.map((rymidrTitle, index) => {\n          console.warn('rymidrTitle123', rymidrTitle);\n          const maindateString = rymidrTitle.calendar_rymindr_date + ' 23:00:00'; //+' '+rymidrTitle.calendar_rymindr_time;\n\n          const maindateObject = new Date(maindateString);\n\n          if (rymidrTitle.rymindr_count > 2) {\n            console.warn('hello count if');\n            const rymindr_count = rymidrTitle.rymindr_count - 2;\n            rymidrTitle.rymindr_array.map((row, key) => {\n              const dateString = row.calendar_rymindr_date + ' ' + row.calendar_rymindr_time;\n              const dateObject = new Date(dateString);\n              const regex = '/<(.|\\n)*?>/g';\n              let tempNote = row.note.replace(/<(.|\\n)*?>/g, '').replace(/\\&nbsp;/g, '');\n              copycalendarEvent.push({\n                title: (row.note !== null ? tempNote.substring(0, 15) : null) + '...',\n                start: dateObject,\n                rowid: row.id,\n                param: tempNote,\n                paramType: 'note'\n              }); //dateObject.toString()\n            });\n            copycalendarEvent.push({\n              title: '+' + rymindr_count + ' Rymindrs',\n              start: maindateObject,\n              rowid: rymidrTitle.id,\n              param: rymidrTitle.calendar_rymindr_date,\n              paramType: 'date'\n            });\n          } else {\n            rymidrTitle.rymindr_array.map((row, key) => {\n              const regex = '/<(.|\\n)*?>/g';\n              let tempNote = row.note.replace(/<(.|\\n)*?>/g, '').replace(/\\&nbsp;/g, '');\n              const dateString = row.calendar_rymindr_date + ' ' + row.calendar_rymindr_time;\n              const dateObject = new Date(dateString);\n              copycalendarEvent.push({\n                title: (row.note !== null ? tempNote.substring(0, 15) : null) + '...',\n                start: dateObject,\n                rowid: row.id,\n                param: tempNote,\n                paramType: 'note'\n              }); //dateObject.toString()\n\n              console.warn('copycalendarEvent', copycalendarEvent); //copycalendarEvent.push({title: '+ '+rymidrTitle.rymindr_count+' Rymindrs', start:dateObjectForDate})\n            });\n          }\n        });\n        console.log('copyyy', copycalendarEvent);\n        setTimeout(() => {\n          this.setState({\n            calendarEvents: [...copycalendarEvent],\n            isLoader: false\n          });\n        }, 4000);\n      } //if RYMINDRS ARE THERE\n      else {\n        this.setState({\n          isLoader: false\n        });\n      }\n    });\n  }\n\n  render() {\n    //console.log('rymindrList', this.props.rymindrList);\n    //console.log('sate', this.state.rymindrList);\n    const {\n      history\n    } = this.props;\n    const TypoHeadStyled = styled(Typography)(({\n      theme\n    }) => ({\n      fontSize: 24,\n      color: theme.palette.primary.main,\n      textTransform: 'uppercase',\n      fontWeight: 'bold'\n    }));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"demo-app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, this.state.isLoader ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        right: 0,\n        left: 0,\n        zIndex: 9999\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgressstyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    })) : null, /*#__PURE__*/React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      header: {\n        left: 'today, prev,next',\n\n        /*today */\n        center: 'title',\n        right: '' //'dayGridMonth,timeGridWeek,timeGridDay,listWeek',\n\n      },\n      slotLabelFormat: \"HH:mm\",\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      ref: this.calendarComponentRef,\n      weekends: this.state.calendarWeekends,\n      events: this.state.calendarEvents,\n      eventTimeFormat: {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: true\n      },\n      eventRender: this.renderEventContent,\n      ignoreTimezone: false,\n      timezone: \"Asia/Kolkata\" //dateClick={(info) => console.log('inforinforinfor', info)}\n      ,\n      dateClick: this.handleDateClick,\n      eventClick: this.handleEventClick,\n      eventContent: () => console.warn('hello console'),\n      dayRender: function (date, month, element, view) {\n        const today = new Date(); //if(date.isBefore(today)){\n        //element.css(\"background\", \"red\");\n        //}\n        //  console.log('depak======================>', element)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n} //export default RightContent;\n\n\nconst mapStateToProps = state => {\n  return {\n    rymindrList: state.messageCenterReducer.rymindrList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getRymindrListCalendar: data => dispatch(getRymindrListCalendar(data))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DemoApp));","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/Calendar/Calendar.js"],"names":["React","styled","Grid","Box","Typography","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","withRouter","getRymindrListCalendar","connect","CircularProgress","moment","CircularProgressstyled","position","top","left","zIndex","opacity","DemoApp","Component","calendarComponentRef","createRef","state","rymindrList","calendarWeekends","calendarEvents","isLoader","renderEventContent","eventInfo","eventTime","event","start","format","console","log","warn","timeText","toggleWeekends","setState","gotoPast","calendarApi","current","getApi","gotoDate","handleDateClick","arg","history","props","date","Date","mnth","getMonth","slice","day","getDate","selDate","getFullYear","join","push","pathname","selectedDate","handleEventClick","clickInfo","param","extendedProps","paramType","dateTime","split","convertedDateTime","encodeURI","componentDidMount","user_id","business_code","first_name","last_name","JSON","parse","localStorage","getItem","then","res","allRymindrList","length","copycalendarEvent","map","rymidrTitle","index","maindateString","calendar_rymindr_date","maindateObject","rymindr_count","rymindr_array","row","key","dateString","calendar_rymindr_time","dateObject","regex","tempNote","note","replace","title","substring","rowid","id","setTimeout","render","TypoHeadStyled","theme","fontSize","color","palette","primary","main","textTransform","fontWeight","bottom","right","center","hour","minute","hour12","month","element","view","today","mapStateToProps","messageCenterReducer","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { styled } from '@material-ui/core/styles'\nimport { Grid, Box, Typography} from '@material-ui/core'\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction' // needed for dayClick\nimport { withRouter } from 'react-router-dom'\nimport './main.scss'\nimport { getRymindrListCalendar } from '../../store/actions/messageCenterAction'\nimport { connect } from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport moment from 'moment';\n\n//testing123\nconst CircularProgressstyled = styled(CircularProgress)({\n  position: 'absolute',\n  top: '45%',\n  left: '45%',\n  zIndex: 9999,\n  opacity: 1\n});\n \nclass DemoApp extends React.Component {\n  calendarComponentRef = React.createRef()\n  state = {\n    rymindrList:[],\n    calendarWeekends: true,\n    calendarEvents: [ // initial event data\n      /*{ title: 'Event Now', start: new Date() }*/\n    ],\n    isLoader: true\n  }\n\n  componentDidMount() {\n    const { user_id, business_code, first_name, last_name } = JSON.parse(localStorage.getItem('userData'))\n    //const { rymindrList } = this.props;\n    this.props.getRymindrListCalendar({user_id})\n    .then(res => {\n      const allRymindrList = this.props.rymindrList;\n    console.log('ryyy=====', allRymindrList) ;\n\n    if(allRymindrList.length > 0){\n      \n      const copycalendarEvent = [...this.state.calendarEvents];\n      allRymindrList.map((rymidrTitle, index) => {\n        console.warn('rymidrTitle123', rymidrTitle);\n        const maindateString = rymidrTitle.calendar_rymindr_date+' 23:00:00'; //+' '+rymidrTitle.calendar_rymindr_time;\n        const maindateObject = new Date(maindateString);\n        if(rymidrTitle.rymindr_count > 2 ){\n          console.warn('hello count if');\n          const rymindr_count = rymidrTitle.rymindr_count - 2;\n          rymidrTitle.rymindr_array.map((row, key) => {\n            const dateString = row.calendar_rymindr_date+' '+row.calendar_rymindr_time;\n            const dateObject = new Date(dateString);\n            const regex = '/<(.|\\n)*?>/g';\n            let tempNote = row.note.replace(/<(.|\\n)*?>/g, '').replace(/\\&nbsp;/g, '')\n            copycalendarEvent.push({title: (row.note !== null ? tempNote.substring(0,15) : null)+'...' , start: dateObject, rowid:row.id, param: tempNote, paramType: 'note'}) //dateObject.toString()\n          })\n            copycalendarEvent.push({title: '+'+rymindr_count+' Rymindrs', start:maindateObject, rowid:rymidrTitle.id, param: rymidrTitle.calendar_rymindr_date, paramType: 'date'})\n         }\n        else{\n          rymidrTitle.rymindr_array.map((row, key) => {\n            const regex = '/<(.|\\n)*?>/g';\n            let tempNote = row.note.replace(/<(.|\\n)*?>/g, '').replace(/\\&nbsp;/g, '')\n            const dateString = row.calendar_rymindr_date+' '+row.calendar_rymindr_time;\n            const dateObject = new Date(dateString);\n            copycalendarEvent.push({title: (row.note !== null ? tempNote.substring(0,15) : null)+'...' , start: dateObject, rowid: row.id, param: tempNote, paramType: 'note'}) //dateObject.toString()\n            console.warn('copycalendarEvent', copycalendarEvent);\n            //copycalendarEvent.push({title: '+ '+rymidrTitle.rymindr_count+' Rymindrs', start:dateObjectForDate})\n          })\n        }\n      })\n     console.log('copyyy',copycalendarEvent) ;\n     setTimeout(()=> {this.setState({calendarEvents: [...copycalendarEvent], isLoader: false})}, 4000);\n     \n    } //if RYMINDRS ARE THERE\n\n    else {\n      this.setState({isLoader: false})\n      }\n  })   \n  }\n\n  renderEventContent=(eventInfo)=> {\n  let eventTime=moment(eventInfo.event.start).format('YYYY--MM-DD, HH:mm A')\n  console.log('datatta',moment(eventInfo.event.start).format('YYYY--MM-DD, HH:mm A'))\n  console.warn('eventInfo.event.start333', eventInfo.timeText);\n  // if(eventInfo.timeText.slice(1, 3)==='p')\n  // {\n  //   eventTime=eventInfo.timeText.slice(0,-1)+'PM'\n  // }else  if(eventInfo.timeText.slice(-1)==='a'){\n  //   eventTime=eventInfo.timeText.slice(0,-1)+'AM'\n  // }else{\n  //    eventTime=eventInfo.timeText\n  // }\n  // return (\n  //   <>\n  //     <b>{eventTime}</b>\n  //     <i>{eventInfo.event.title}</i>\n  //   </>\n  // )\n}\n\n\n  render() {\n    //console.log('rymindrList', this.props.rymindrList);\n    //console.log('sate', this.state.rymindrList);\n    const { history } = this.props;\n    const TypoHeadStyled = styled(Typography)(({ theme }) => ({\n      fontSize: 24,\n      color: theme.palette.primary.main,\n      textTransform: 'uppercase',\n      fontWeight: 'bold'\n    }))\n   \n    return (\n      <>\n        {/* <Grid container style={{ marginBottom: 20 }} alignItems='center'>\n          <Grid item xs={12}>\n            <Box display='flex' alignItems='center'>\n              <TypoHeadStyled variant='h4'>Calendar</TypoHeadStyled>\n            </Box>\n          </Grid>\n        </Grid> */}\n        {/* demo-app-calendar */}\n      <div className='demo-app'>\n        <div >\n\n          {\n            this.state.isLoader ?\n            \n              <div style={{position: 'absolute', top: 0, bottom: 0, right: 0, left: 0, zIndex: 9999}}>\n                <CircularProgressstyled />\n              </div>\n              :\n              null\n          }\n          \n          <FullCalendar\n            defaultView=\"dayGridMonth\"\n            header={{\n              left: 'today, prev,next', /*today */\n              center: 'title',\n              right: '',   //'dayGridMonth,timeGridWeek,timeGridDay,listWeek',\n            }}\n            slotLabelFormat=\"HH:mm\"\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            ref={this.calendarComponentRef}\n            weekends={this.state.calendarWeekends}\n            events={this.state.calendarEvents}\n            eventTimeFormat={{\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n              hour12: true\n            }}\n            eventRender={this.renderEventContent}\n            ignoreTimezone={false}\n            timezone='Asia/Kolkata'\n            //dateClick={(info) => console.log('inforinforinfor', info)}\n            dateClick={this.handleDateClick}\n            eventClick={this.handleEventClick}\n             eventContent={() => console.warn('hello console')} \n            dayRender={\n              function (date, month, element, view) {\n                const today = new Date();\n                //if(date.isBefore(today)){\n                  //element.css(\"background\", \"red\");\n                //}\n\n              //  console.log('depak======================>', element)\n            }\n            }\n          />\n        </div>\n        </div>\n      </>\n    )\n  }\n\n\n\n  toggleWeekends = () => {\n    this.setState({ // update a property\n      calendarWeekends: !this.state.calendarWeekends\n    })\n  }\n\n  gotoPast = () => {\n    let calendarApi = this.calendarComponentRef.current.getApi()\n    calendarApi.gotoDate('2000-01-01') // call a method on the Calendar object\n  }\n\n  handleDateClick = (arg) => {\n    console.warn('arg1111', arg)\n    const { history } = this.props;\n    //alert('arg.date'+ arg.date);\n    const date = new Date(arg.date),\n    mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n    day = (\"0\" + date.getDate()).slice(-2);\n    const selDate =  [date.getFullYear(), mnth, day].join(\"-\");\n\n    // console.log('selDate======',selDate);\n    \n    // alert('selDate'+selDate);\n    // return false;\n    //history.push('/create-rymindr', {dateSelected: arg.date});\n\n    history.push({\n      pathname: '/create-rymindr',\n      state: { selectedDate: selDate}\n    })\n   /* this.setState({  // add new event data\n      calendarEvents: this.state.calendarEvents.concat({ // creates a new array\n        title: 'New Event',\n        start: arg.date,\n        allDay: arg.allDay\n      })\n    })*/\n  }\n\n  handleEventClick = (clickInfo) => {\n    const { history } = this.props;\n\n    let param = clickInfo.event.extendedProps.param;\n    let paramType = clickInfo.event.extendedProps.paramType;\n\n    if( paramType === 'date' )\n    {\n        // Convert the date format\n        let dateTime = param.split('-');\n        let convertedDateTime = dateTime[2] + '-' + dateTime[0] + '-' + dateTime[1];\n        param = convertedDateTime;\n    }\n\n    // convert it to base64\n    param = encodeURI(param);\n\n    history.push('/rymindrs/'+param+'/'+paramType);\n  }\n\n}\n\n//export default RightContent;\nconst mapStateToProps = (state) => {\n  return {\n    rymindrList : state.messageCenterReducer.rymindrList\n }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getRymindrListCalendar: (data) =>dispatch(getRymindrListCalendar(data))\n  }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(DemoApp));\n"]},"metadata":{},"sourceType":"module"}