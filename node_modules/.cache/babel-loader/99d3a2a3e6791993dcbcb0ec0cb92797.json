{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/ForgetPassword/ForgetPassword.js\";\nimport * as actions from '../../store/actions/index';\nimport { Box, Button, FormControl, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Paper, TextField, Typography } from '@material-ui/core';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport CircularSpinner from '../../component/CircularSpinner/index';\nimport PropTypes from 'prop-types';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { connect } from 'react-redux';\nimport { styled } from '@material-ui/core/styles';\nimport { withSnackbar } from 'notistack';\nimport { requestOtp } from '../../store/actions/auth';\nconst GridStyled = styled(Grid)({\n  height: '100vh'\n});\nconst PaperStyled = styled(Paper)({\n  width: 377,\n  textAlign: 'center',\n  padding: 30\n});\nconst TypoStyled = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 20,\n  marginBottom: 30,\n  fontWeight: 'bold'\n}));\nconst LinkStyled = styled(Link)(({\n  theme\n}) => ({\n  color: theme.palette.primary.main,\n  textDecoration: 'none'\n}));\nconst FormFields = {\n  email: '',\n  password: ''\n};\n\nconst ForgetPassword = props => {\n  const {\n    enqueueSnackbar,\n    error\n  } = props;\n  const history = useHistory();\n  useEffect(() => {\n    error && enqueueSnackbar(error, {\n      variant: 'error'\n    });\n  }, [error]);\n  useMemo(() => {\n    error && enqueueSnackbar(error, {\n      variant: 'error'\n    });\n  }, [error]);\n  const [values, setValues] = useState({\n    email: ''\n  });\n  const [formvalues, setFormvalues] = useState(FormFields);\n  const [formvalidation, setFormvalidation] = useState(FormFields);\n\n  const handleChange = e => {\n    const form = { ...formvalues\n    };\n    const formerr = { ...formvalidation\n    };\n    form[e.target.name] = e.target.value;\n    formerr[e.target.name] = '';\n    setFormvalues(form);\n    setFormvalidation(FormFields);\n  };\n\n  const handlevalidation = () => {\n    let error = false;\n    const formerr = { ...formvalidation\n    };\n    console.log(formvalues);\n\n    if (!formvalues.email) {\n      error = true;\n      formerr.email = 'Email is required!';\n      setFormvalidation(formerr);\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formvalues.email)) {\n      error = true;\n      formerr.email = 'Invalid email address';\n      setFormvalidation(formerr);\n    }\n\n    return error;\n  };\n\n  const loginSubmitHandler = e => {\n    e.preventDefault();\n    if (handlevalidation()) return false;\n    const data = {\n      email: formvalues.email\n    };\n    props.onAuth(data, history);\n  };\n\n  const userId = localStorage.getItem('token');\n  let authRedirect = null;\n\n  if (userId) {\n    authRedirect = /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 20\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(GridStyled, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: \"loginBg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, authRedirect, /*#__PURE__*/React.createElement(PaperStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TypoStyled, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"FORGET PASSWORD\"), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      marginBottom: 40,\n      display: \"inline-block\",\n      fontWeight: '500',\n      fontSize: '14px'\n    },\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"Please enter your registered email\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: loginSubmitHandler,\n    validate: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: !!formvalidation.email,\n    helperText: formvalidation.email,\n    id: \"email\",\n    label: \"Email\",\n    name: \"email\",\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleChange,\n    value: formvalues.email,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    my: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LinkStyled, {\n    style: {\n      fontSize: 14,\n      fontWeight: '500'\n    },\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Return to Login Again?\")), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, props.loading && /*#__PURE__*/React.createElement(CircularSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  }), \"REQUEST CODE\"))), /*#__PURE__*/React.createElement(Box, {\n    flexDirection: \"row\",\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      fontSize: 14,\n      fontWeight: '500'\n    },\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"Don\\u2019t have an account? \"), /*#__PURE__*/React.createElement(LinkStyled, {\n    style: {\n      fontSize: 14,\n      fontWeight: '500'\n    },\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Create Account\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, history) => dispatch(requestOtp(email, history))\n  };\n};\n\nForgetPassword.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  onAuth: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(ForgetPassword));","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/ForgetPassword/ForgetPassword.js"],"names":["actions","Box","Button","FormControl","Grid","IconButton","InputAdornment","InputLabel","OutlinedInput","Paper","TextField","Typography","Link","Redirect","useHistory","React","useEffect","useMemo","useState","CircularSpinner","PropTypes","Visibility","VisibilityOff","connect","styled","withSnackbar","requestOtp","GridStyled","height","PaperStyled","width","textAlign","padding","TypoStyled","fontSize","marginTop","marginBottom","fontWeight","LinkStyled","theme","color","palette","primary","main","textDecoration","FormFields","email","password","ForgetPassword","props","enqueueSnackbar","error","history","variant","values","setValues","formvalues","setFormvalues","formvalidation","setFormvalidation","handleChange","e","form","formerr","target","name","value","handlevalidation","console","log","test","loginSubmitHandler","preventDefault","data","onAuth","userId","localStorage","getItem","authRedirect","display","loading","mapStateToProps","state","auth","mapDispatchToProps","dispatch","propTypes","func","isRequired","bool","string"],"mappings":"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","sourcesContent":["import * as actions from '../../store/actions/index';\nimport {\n  Box,\n  Button,\n  FormControl,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Paper,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Link, Redirect ,useHistory} from 'react-router-dom';\nimport React, { useEffect,useMemo, useState } from 'react';\nimport CircularSpinner from '../../component/CircularSpinner/index';\nimport PropTypes from 'prop-types';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { connect } from 'react-redux';\nimport { styled } from '@material-ui/core/styles';\nimport { withSnackbar } from 'notistack';\nimport { requestOtp } from '../../store/actions/auth';\n\nconst GridStyled = styled(Grid)({\n  height: '100vh',\n});\n\nconst PaperStyled = styled(Paper)({\n  width: 377,\n  textAlign: 'center',\n  padding: 30,\n});\n \nconst TypoStyled = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 20,\n  marginBottom: 30,\n  fontWeight: 'bold', \n}));\n\nconst LinkStyled = styled(Link)(({ theme }) => ({\n  color: theme.palette.primary.main,\n  textDecoration: 'none',\n}));\n\nconst FormFields = { email: '', password: '' };\nconst ForgetPassword = (props) => {\n  const { enqueueSnackbar, error } = props;\n  const history = useHistory();\n\n  useEffect(() => {\n    error && enqueueSnackbar(error, { variant: 'error' });\n  }, [error]);\n  useMemo(() => {\n    error && enqueueSnackbar(error, { variant: 'error' });\n  }, [error]);\n  const [values, setValues] = useState({\n    email: '',\n    \n  });\n\n  const [formvalues, setFormvalues] = useState(FormFields);\n  const [formvalidation, setFormvalidation] = useState(FormFields);\n\n  const handleChange = (e) => {\n    const form = { ...formvalues };\n    const formerr = { ...formvalidation };\n    form[e.target.name] = e.target.value;\n    formerr[e.target.name] = '';\n    setFormvalues(form);\n    setFormvalidation(FormFields);\n  };\n\n  const handlevalidation = () => {\n    let error = false;\n    const formerr = { ...formvalidation };\n    console.log(formvalues)\n    if (!formvalues.email) {\n      error = true;\n      formerr.email = 'Email is required!';\n      setFormvalidation(formerr);\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formvalues.email)) {\n      error = true;\n      formerr.email = 'Invalid email address';\n      setFormvalidation(formerr);\n    }\n\n   \n    return error;\n  };\n\n  const loginSubmitHandler = (e) => {\n    e.preventDefault();\n    if (handlevalidation()) return false;\n    const data = {\n        email:formvalues.email,\n      }\n    props.onAuth(data, history);\n  };\n\n\n  const userId = localStorage.getItem('token');\n  let authRedirect = null;\n  if (userId) {\n    authRedirect = <Redirect to=\"/dashboard\" />;\n  }\n\n  \n\n  return (\n    <GridStyled container justify=\"center\" alignItems=\"center\" className=\"loginBg\">\n      {authRedirect}\n      <PaperStyled>\n        {/* <img style={{width: 130}} src={require('../../assets/images/login_logo.png')} /> */}\n        <TypoStyled variant=\"h6\">FORGET PASSWORD</TypoStyled>\n        \n        <Typography style={{marginBottom: 40, display: \"inline-block\", fontWeight: '500', fontSize: '14px'}} component=\"span\">Please enter your registered email</Typography>\n        \n        <form onSubmit={loginSubmitHandler} validate=\"true\">\n          <TextField\n            \n            error={!!formvalidation.email}\n            helperText={formvalidation.email}\n            id=\"email\"\n            label=\"Email\"\n            name=\"email\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={handleChange}\n            value={formvalues.email}\n            margin=\"normal\"\n          />\n          <Box my={4}>\n            <LinkStyled style={{fontSize: 14, fontWeight: '500'}} to=\"/login\">Return to Login Again?</LinkStyled>\n          </Box>\n\n          <Box>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\">\n              {props.loading && <CircularSpinner />}\n              REQUEST CODE\n            </Button>\n          </Box>\n        </form>\n        <Box flexDirection=\"row\" mt={4}>\n          <Typography style={{fontSize: 14, fontWeight: '500'}} component=\"span\">Don’t have an account? </Typography>\n          <LinkStyled style={{fontSize: 14, fontWeight: '500'}} to=\"/register\">Create Account</LinkStyled>\n        </Box>\n      </PaperStyled>\n    </GridStyled>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (email, history) => dispatch(requestOtp(email, history)),\n  };\n};\n\nForgetPassword.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  onAuth: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(ForgetPassword));\n"]},"metadata":{},"sourceType":"module"}