{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/component/Sidebar/Sidebar.js\";\nimport { Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { Link, withRouter } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { useLocation } from 'react-router-dom';\nimport firebase from 'firebase';\nconst ListStyled = styled(List)(({\n  theme\n}) => ({\n  padding: '20px',\n  '& a': {\n    borderRadius: 8,\n    paddingTop: '8px !important',\n    paddingBottom: '8px !important',\n    '& div': {\n      minWidth: 48\n    },\n    '& span': {\n      textTransform: 'uppercase',\n      fontSize: 13\n    },\n    '& .comingTxt span': {\n      fontSize: 9,\n      textTransform: 'none',\n      color: 'rgba(64, 87, 106, 0.15)',\n      textAlign: 'right',\n      position: 'absolute',\n      right: 5,\n      top: 16\n    },\n    '&.active': {\n      background: theme.palette.primary.light\n    }\n  },\n  '& :hover': {\n    background: theme.palette.primary.light\n  }\n}));\nconst DATA = [{\n  icon: require('../../assets/images/dashboard.svg'),\n  name: 'DASHBOARD',\n  route: '/'\n}, {\n  icon: require('../../assets/images/contacts.svg'),\n  name: 'Contacts',\n  route: '/contacts'\n}, {\n  icon: require('../../assets/images/rymindr_hand_2.png'),\n  name: 'Rymindrs',\n  route: '/rymindrs'\n}, {\n  icon: require('../../assets/images/live_chat.svg'),\n  name: 'Live chat',\n  route: '/live-chat'\n}, {\n  icon: require('../../assets/images/feed.svg'),\n  name: 'Message Center',\n  route: '/message-center'\n}, {\n  icon: require('../../assets/images/calendar.svg'),\n  name: 'Calendar',\n  route: '/calendar'\n}, {\n  icon: require('../../assets/images/holidays.svg'),\n  name: 'Term dates / holidays',\n  route: '/term-dates-holidays'\n}, {\n  icon: require('../../assets/images/bookings.svg'),\n  name: 'BOOKINGS',\n  route: '/bookings'\n}, {\n  icon: require('../../assets/images/credits.svg'),\n  name: 'Form Builders',\n  route: '/form-builders'\n}, {\n  icon: require('../../assets/images/payment.svg'),\n  name: 'Payments',\n  route: '/payments',\n  coming: true\n}, {\n  icon: require('../../assets/images/credits.svg'),\n  name: 'Rymindr credits',\n  route: '/credits',\n  coming: true\n}, // {\n//   icon: require('../../assets/images/resources.svg'),\n//   name: 'Resources',\n//   route: '/resources',\n//   coming: true\n// },\n{\n  icon: require('../../assets/images/shop.svg'),\n  name: 'Rymindr shop',\n  route: '/shop',\n  coming: true\n}, {\n  icon: require('../../assets/images/rewards.svg'),\n  name: 'Rymindr Rewards',\n  route: '/rewards',\n  coming: true\n}, {\n  icon: require('../../assets/images/fund.svg'),\n  name: 'Create fund raisers',\n  route: '/fundraisers',\n  coming: true\n}, {\n  icon: require('../../assets/images/feed.svg'),\n  name: 'LIVE FEED',\n  route: '/live-feed'\n}, {\n  icon: require('../../assets/images/news.svg'),\n  name: 'RYMINDR NEWS',\n  route: '/rymindr-news'\n}, {\n  icon: require('../../assets/images/account.svg'),\n  name: 'Account settings',\n  route: '/account-settings/business-account'\n}, {\n  icon: require('../../assets/images/integration.svg'),\n  name: 'Integrations',\n  route: '/integrations',\n  coming: true\n}, {\n  icon: require('../../assets/images/history.svg'),\n  name: 'History',\n  route: '/history-rymindrs'\n}];\n\nconst Sidebar = () => {\n  const route1 = useLocation();\n  const {\n    user_id,\n    business_code\n  } = JSON.parse(localStorage.getItem('userData'));\n  var messageRef = firebase.database().ref(); //   useEffect(() => {\n  //     listenMessages();\n  //     // Clear the rendered chat messages when component is unmounted and mounted again\n  //     return () =>\n  //     {\n  //       messageRef.off();\n  //     }\n  // }, []);\n\n  const [msgNotifications, updateMsgNotifications] = useState([]);\n  const [unreadMsgNotifications, updateUnreadMsgNotifications] = useState([]);\n  const [isChangeManu, setIsChangeManu] = useState(1); // const listenMessages = () => {\n  //     messageRef.on('value', function() {\n  //         let unreadMessages = [];\n  //         messageRef.orderByChild(\"created_at\").on(\"child_added\", snapshot => {\n  //             let msgNodes = snapshot.val();\n  //             let message = Object.values(msgNodes);\n  //             if(message.length > 0) {\n  //               for(let i=0; i<message.length; i++)\n  //               {\n  //                   // Only unread messages will be shown here\n  //                   if( message[i]['message_read_'+user_id] === false )\n  //                   {\n  //                       unreadMessages.push(message[i]);\n  //                   }\n  //               }\n  //               if(unreadMessages.length > 0 ) {\n  //                 updateMsgNotifications(unreadMessages);\n  //               }\n  //             }\n  //         });\n  //     });\n  // }\n\n  setTimeout(() => {\n    updateUnreadMsgNotifications(msgNotifications);\n  }, 1000);\n  var messageRef = firebase.database().ref();\n  useEffect(() => {\n    listenMessages();\n    return () => {\n      messageRef.off();\n    };\n  }, [isChangeManu]);\n\n  const listenMessages = () => {\n    messageRef.on('value', function () {\n      let unreadMessages = [];\n      messageRef.orderByChild(\"created_at\").on(\"child_added\", snapshot => {\n        let msgNodes = snapshot.val();\n        let message = Object.values(msgNodes);\n\n        if (message.length > 0) {\n          for (let i = 0; i < message.length; i++) {\n            // Only unread messages will be shown here\n            if (message[i]['message_read_' + user_id] === false) {\n              unreadMessages.push(message[i]);\n            }\n          } //if(unreadMessages.length > 0 ) {\n\n\n          updateMsgNotifications(unreadMessages); //}\n        }\n      });\n    });\n  };\n\n  const testfunct = () => {\n    var x = Math.floor(Math.random() * 10 + 1);\n    setIsChangeManu(x);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Scrollbars, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ListStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, DATA.map(({\n    icon,\n    name,\n    route,\n    coming\n  }, key) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    component: Link,\n    to: route,\n    key: name,\n    className: route1.pathname === route ? 'active' : null,\n    onClick: testfunct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, ' ', /*#__PURE__*/React.createElement(\"img\", {\n    src: icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }\n  })), name == 'Live chat' ? msgNotifications.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, name), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      backgroundColor: '#FF8A00',\n      padding: 8,\n      paddingTop: 2,\n      paddingBottom: 2,\n      borderRadius: 30,\n      fontSize: 11,\n      color: 'white',\n      marginLeft: 10,\n      textTransform: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  }, msgNotifications.length + ' New')) : /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 23\n    }\n  }, name) : /*#__PURE__*/React.createElement(ListItemText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 21\n    }\n  }, name), coming ? /*#__PURE__*/React.createElement(ListItemText, {\n    className: \"comingTxt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 27\n    }\n  }, \"Coming soon\") : null), key === 5 ? /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    className: \"mt-20 mb-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 28\n    }\n  }) : null, key === 8 ? /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    className: \"mt-20 mb-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 28\n    }\n  }) : null, key === 12 ? /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    className: \"mt-20 mb-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 29\n    }\n  }) : null, key === 15 ? /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    className: \"mt-20 mb-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 29\n    }\n  }) : null)))));\n};\n\nexport default withRouter(Sidebar);","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/component/Sidebar/Sidebar.js"],"names":["Divider","List","ListItem","ListItemIcon","ListItemText","Link","withRouter","React","useEffect","useState","styled","Scrollbars","useLocation","firebase","ListStyled","theme","padding","borderRadius","paddingTop","paddingBottom","minWidth","textTransform","fontSize","color","textAlign","position","right","top","background","palette","primary","light","DATA","icon","require","name","route","coming","Sidebar","route1","user_id","business_code","JSON","parse","localStorage","getItem","messageRef","database","ref","msgNotifications","updateMsgNotifications","unreadMsgNotifications","updateUnreadMsgNotifications","isChangeManu","setIsChangeManu","setTimeout","listenMessages","off","on","unreadMessages","orderByChild","snapshot","msgNodes","val","message","Object","values","length","i","push","testfunct","x","Math","floor","random","map","key","pathname","backgroundColor","marginLeft"],"mappings":"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","sourcesContent":["import { Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\nimport { Link, withRouter } from 'react-router-dom'\nimport React, { useEffect, useState } from 'react';\nimport { styled } from '@material-ui/core/styles'\nimport { Scrollbars } from 'react-custom-scrollbars'\nimport {useLocation} from 'react-router-dom';\nimport firebase from 'firebase';\n\nconst ListStyled = styled(List)(({ theme }) => ({\n  padding: '20px',\n  '& a': {\n    borderRadius: 8,\n    paddingTop: '8px !important',\n    paddingBottom: '8px !important',\n    '& div': {\n      minWidth: 48\n    },\n    '& span': {\n      textTransform: 'uppercase',\n      fontSize: 13\n    },\n    '& .comingTxt span': {\n      fontSize: 9,\n      textTransform: 'none',\n      color: 'rgba(64, 87, 106, 0.15)',\n      textAlign: 'right',\n      position: 'absolute',\n      right: 5,\n      top: 16\n    },\n    '&.active': {\n      background: theme.palette.primary.light\n    },\n\n  },\n  '& :hover': {\n    background: theme.palette.primary.light\n  }\n}))\nconst DATA = [\n  {\n    icon: require('../../assets/images/dashboard.svg'),\n    name: 'DASHBOARD',\n    route: '/'\n  },\n  {\n    icon: require('../../assets/images/contacts.svg'),\n    name: 'Contacts',\n    route: '/contacts'\n  },\n  {\n    icon: require('../../assets/images/rymindr_hand_2.png'),\n    name: 'Rymindrs',\n    route: '/rymindrs'\n  },\n  {\n    icon: require('../../assets/images/live_chat.svg'),\n    name: 'Live chat',\n    route: '/live-chat'\n  },\n  {\n    icon: require('../../assets/images/feed.svg'),\n    name: 'Message Center',\n    route: '/message-center'\n  },\n  \n  {\n    icon: require('../../assets/images/calendar.svg'),\n    name: 'Calendar',\n    route: '/calendar'\n  },\n  {\n    icon: require('../../assets/images/holidays.svg'),\n    name: 'Term dates / holidays',\n    route: '/term-dates-holidays'\n  },\n  {\n    icon: require('../../assets/images/bookings.svg'),\n    name: 'BOOKINGS',\n    route: '/bookings'\n  },\n  {\n    icon: require('../../assets/images/credits.svg'),\n    name: 'Form Builders',\n    route: '/form-builders',\n  },\n  {\n    icon: require('../../assets/images/payment.svg'),\n    name: 'Payments',\n    route: '/payments',\n    coming: true\n  },\n  {\n    icon: require('../../assets/images/credits.svg'),\n    name: 'Rymindr credits',\n    route: '/credits',\n    coming: true\n  },\n  // {\n  //   icon: require('../../assets/images/resources.svg'),\n  //   name: 'Resources',\n  //   route: '/resources',\n  //   coming: true\n  // },\n  {\n    icon: require('../../assets/images/shop.svg'),\n    name: 'Rymindr shop',\n    route: '/shop',\n    coming: true\n  },\n  {\n    icon: require('../../assets/images/rewards.svg'),\n    name: 'Rymindr Rewards',\n    route: '/rewards',\n    coming: true\n  },\n  {\n    icon: require('../../assets/images/fund.svg'),\n    name: 'Create fund raisers',\n    route: '/fundraisers',\n    coming: true\n  },\n  {\n    icon: require('../../assets/images/feed.svg'),\n    name: 'LIVE FEED',\n    route: '/live-feed'\n  },\n  {\n    icon: require('../../assets/images/news.svg'),\n    name: 'RYMINDR NEWS',\n    route: '/rymindr-news'\n  },\n  {\n    icon: require('../../assets/images/account.svg'),\n    name: 'Account settings',\n    route: '/account-settings/business-account'\n  },\n  {\n    icon: require('../../assets/images/integration.svg'),\n    name: 'Integrations',\n    route: '/integrations',\n    coming: true\n  },\n  {\n    icon: require('../../assets/images/history.svg'),\n    name: 'History',\n    route: '/history-rymindrs'\n  }\n]\n\nconst Sidebar = () => {\n  const route1 = useLocation();\n  const { user_id, business_code } = JSON.parse(localStorage.getItem('userData'));\n  var messageRef = firebase.database().ref();\n\n//   useEffect(() => {\n//     listenMessages();\n\n//     // Clear the rendered chat messages when component is unmounted and mounted again\n//     return () =>\n//     {\n//       messageRef.off();\n//     }\n// }, []);\n\nconst [msgNotifications, updateMsgNotifications] = useState([]);\nconst [unreadMsgNotifications, updateUnreadMsgNotifications] = useState([]);\nconst [isChangeManu, setIsChangeManu] = useState(1);\n\n// const listenMessages = () => {\n//     messageRef.on('value', function() {\n//         let unreadMessages = [];\n\n//         messageRef.orderByChild(\"created_at\").on(\"child_added\", snapshot => {\n\n//             let msgNodes = snapshot.val();\n//             let message = Object.values(msgNodes);\n\n//             if(message.length > 0) {\n//               for(let i=0; i<message.length; i++)\n//               {\n//                   // Only unread messages will be shown here\n//                   if( message[i]['message_read_'+user_id] === false )\n//                   {\n//                       unreadMessages.push(message[i]);\n//                   }\n//               }\n//               if(unreadMessages.length > 0 ) {\n//                 updateMsgNotifications(unreadMessages);\n//               }\n//             }\n//         });\n//     });\n// }\n\nsetTimeout(\n  () => {updateUnreadMsgNotifications(msgNotifications) },\n  1000\n);\n\nvar messageRef = firebase.database().ref()\n  useEffect(() => {\n    listenMessages()\n    return () =>\n    {\n      messageRef.off()\n    }\n  }, [isChangeManu])\n\n      const listenMessages = () => {\n        messageRef.on('value', function() {\n            let unreadMessages = [];\n            messageRef.orderByChild(\"created_at\").on(\"child_added\", snapshot => {\n\n                let msgNodes = snapshot.val();\n                let message = Object.values(msgNodes);\n\n                if(message.length > 0) {\n                  for(let i=0; i<message.length; i++)\n                  {\n                      // Only unread messages will be shown here\n                      if( message[i]['message_read_'+user_id] === false )\n                      {\n                          unreadMessages.push(message[i]);\n                      }\n                  }\n                  //if(unreadMessages.length > 0 ) {\n                    updateMsgNotifications(unreadMessages);\n                  //}\n                }\n            });\n        });\n    }\n\n  const testfunct = () => {\n    var x = Math.floor((Math.random() * 10) + 1);\n    setIsChangeManu(x);\n  }\n\n  return (\n    <>\n      <Scrollbars>\n        <Divider />\n        <ListStyled>\n          {DATA.map(({ icon, name, route, coming }, key) => (\n            <>\n              <ListItem\n                button\n                component={Link}\n                to={route}\n                key={name}\n                className={route1.pathname === route ? 'active' : null}\n                onClick={testfunct}\n              >\n                <ListItemIcon>\n                  {' '}\n                  <img src={icon} />\n                </ListItemIcon>\n\n                {/* =={msgNotifications.length} */}\n                {\n                  name == 'Live chat' ?\n                  msgNotifications.length > 0 ?\n                      <>\n                        <ListItemText>{name}</ListItemText>\n                        <span style={{backgroundColor: '#FF8A00', padding: 8, paddingTop: 2, paddingBottom: 2, borderRadius: 30, fontSize: 11, color: 'white', marginLeft: 10, textTransform: 'none'}}>{msgNotifications.length + ' New'}</span>\n                      </>\n                    : <ListItemText>{name}</ListItemText>\n                  :\n                    <ListItemText>{name}</ListItemText>\n                }\n                {/*<ListItemText>{name}</ListItemText>*/}\n                {coming ? <ListItemText className='comingTxt'>Coming soon</ListItemText> : null}\n              </ListItem>\n\n              {key === 5 ? <Divider variant='inset' component='li' className='mt-20 mb-20' /> : null}\n              {key === 8 ? <Divider variant='inset' component='li' className='mt-20 mb-20' /> : null}\n              {key === 12 ? <Divider variant='inset' component='li' className='mt-20 mb-20' /> : null}\n              {key === 15 ? <Divider variant='inset' component='li' className='mt-20 mb-20' /> : null}\n            </>\n          ))}\n        </ListStyled>\n      </Scrollbars>\n    </>\n  )\n}\n\nexport default withRouter(Sidebar)\n"]},"metadata":{},"sourceType":"module"}