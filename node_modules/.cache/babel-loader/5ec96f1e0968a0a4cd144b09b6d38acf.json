{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport Axios from '../../helper/axios';\nimport firebase from 'firebase';\nimport { SuccessMessage } from './contactActions';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START2\n  };\n};\nexport const authSuccess = (token, user) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    user\n  };\n};\nexport const isLoading = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const Success = response => {\n  return response;\n};\nexport const Fail = error => {\n  return {\n    type: actionTypes.AUTHERROR,\n    error: error\n  };\n};\nexport const Fail2 = error => {\n  return {\n    type: actionTypes.AUTHERROR,\n    error2: error\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const email_verify = (data, history) => {\n  return dispatch => {\n    dispatch(isLoading());\n    Axios().post('auth/verify_email', data).then(response => {\n      // console.log(response)\n      if (response.data.status === \"1\") {\n        dispatch(Success({\n          type: actionTypes.EMAIL_VERIFY,\n          payload: response.data\n        }));\n        history.push('/login');\n      } else {\n        // console.log(response.data.message)\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const deactivate_account = data => {\n  let resp = {\n    status: false\n  };\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const response = await Axios().post('auth/deactivate_account', data);\n\n      if (response.data.status === '1') {\n        await localStorage.clear();\n        dispatch(SuccessMessage(response.data.message));\n        resp.status = true;\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n\n    return resp;\n  };\n};\nexport const auth = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    let device_token = localStorage.getItem('device_token');\n    var sessionToken = sessionStorage.getItem('token_de');\n    console.warn('sessionToken123', sessionToken);\n    const authData = {\n      email: email,\n      password: password,\n      device_token: sessionToken,\n      platform: 'Desktop'\n    };\n    Axios().post('auth/login', authData).then(response => {\n      console.warn('response123', response);\n\n      if (response.data.status === '1') {\n        // Firebase login\n        firebase.auth().signInWithEmailAndPassword(authData.email, authData.password);\n        const {\n          user_id,\n          business_code,\n          country_name,\n          device_token,\n          notification_status,\n          notification_chat_status,\n          notification_post_status,\n          notification_msg_center_status,\n          profile_image,\n          first_name,\n          last_name,\n          sc_bessi_name,\n          address,\n          post_code,\n          email,\n          mobile_no,\n          account_type,\n          first_login,\n          default_category\n        } = response.data.data;\n        const userData = {\n          user_id,\n          business_code,\n          country_name,\n          device_token,\n          notification_status,\n          notification_chat_status,\n          notification_post_status,\n          notification_msg_center_status,\n          profile_image,\n          first_name,\n          last_name,\n          sc_bessi_name,\n          address,\n          post_code,\n          email,\n          mobile_no,\n          account_type,\n          first_login,\n          default_category\n        };\n        localStorage.setItem('token', response.data.data.token);\n        localStorage.setItem('userData', JSON.stringify(userData));\n        dispatch(authSuccess(response.data.idToken, response.data.data));\n      } else {\n        dispatch(authFail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(authFail(err.message));\n    });\n  };\n};\nexport const register = (data, history) => {\n  return dispatch => {\n    dispatch(isLoading());\n    console.log(\"sigggg\");\n    Axios().post('auth/websignup', data).then(response => {\n      if (response.data.status === '1') {\n        // Firebase register\n        firebase.auth().createUserWithEmailAndPassword(data.email, data.password);\n        dispatch(Success({\n          type: actionTypes.SIGNUP,\n          payload: response.data.data\n        })); // history.push('/authenticate/'+data.email+'/'+1234);\n\n        console.log(\"register\");\n        history.push('/mail-sent/' + data.email + \"/1\"); // history.push('/login');\n      } else {\n        // console.log(response.data.message)\n        dispatch(Fail2(response.data.message)); //dispatch(Fail2(null));\n      }\n    }).catch(err => {\n      dispatch(Fail2(err.message)); //dispatch(Fail2(null));\n    });\n  };\n};\nexport const requestOtp = (data, history) => {\n  return dispatch => {\n    dispatch(isLoading());\n    Axios().post('users/requestOneTimePassword', data).then(response => {\n      // console.log(response)\n      if (response.data.status === \"1\") {\n        dispatch(Success({\n          type: actionTypes.EMAIL_VERIFY,\n          payload: response.data\n        })); // debugger\n        // history.push('/login');\n\n        console.log(\"testettttttt\");\n        history.push('/mail-sent/' + data.email + \"/0\"); // history.push('/reset-password/'+data.email);\n      } else {\n        // console.log(response.data.message)\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const reset_password = (data, history) => {\n  return dispatch => {\n    dispatch(isLoading());\n    Axios().post('users/reset_password', data).then(response => {\n      // console.log(response)\n      if (response.data.status === \"1\") {\n        dispatch(Success({\n          type: actionTypes.EMAIL_VERIFY,\n          payload: response.data\n        }));\n        history.push('/login');\n      } else {\n        // console.log(response.data.message)\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/store/actions/auth.js"],"names":["actionTypes","Axios","firebase","SuccessMessage","authStart","type","AUTH_START2","authSuccess","token","user","AUTH_SUCCESS","idToken","isLoading","AUTH_START","Success","response","Fail","error","AUTHERROR","Fail2","error2","authFail","AUTH_FAIL","email_verify","data","history","dispatch","post","then","status","EMAIL_VERIFY","payload","push","message","catch","err","deactivate_account","resp","localStorage","clear","auth","email","password","device_token","getItem","sessionToken","sessionStorage","console","warn","authData","platform","signInWithEmailAndPassword","user_id","business_code","country_name","notification_status","notification_chat_status","notification_post_status","notification_msg_center_status","profile_image","first_name","last_name","sc_bessi_name","address","post_code","mobile_no","account_type","first_login","default_category","userData","setItem","JSON","stringify","register","log","createUserWithEmailAndPassword","SIGNUP","requestOtp","reset_password"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport Axios from '../../helper/axios';\nimport firebase from 'firebase';\nimport { SuccessMessage } from './contactActions';\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START2,\n  };\n};\n\nexport const authSuccess = (token, user) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    user,\n  };\n};\n\nexport const isLoading = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const Success = (response) => {\n  return response;\n};\n\nexport const Fail = (error) => {\n  return {\n    type: actionTypes.AUTHERROR,\n    error: error,\n  };\n};\n\nexport const Fail2 = (error) => {\n  return {\n    type: actionTypes.AUTHERROR,\n    error2: error,\n  };\n};  \n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error,\n  };\n};\nexport const email_verify = (data, history) => {\n  return (dispatch) => {\n    dispatch(isLoading());\n    Axios().post('auth/verify_email', data)\n      .then((response) => {\n        // console.log(response)\n\n        if (response.data.status === \"1\") {\n          dispatch(\n            Success({\n              type: actionTypes.EMAIL_VERIFY,\n              payload: response.data,\n            })\n          );\n\n          history.push('/login');\n\n        } else {\n          // console.log(response.data.message)\n          dispatch(Fail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        dispatch(Fail(err.message));\n      });\n  };\n};\n\nexport const deactivate_account = (data) => {\n\n  let resp = {\n    status: false\n  };\n\n  return async (dispatch) => {\n\n    try {\n      dispatch(isLoading());\n      const response = await Axios().post('auth/deactivate_account', data);\n      if (response.data.status === '1') {\n        await localStorage.clear();\n        dispatch(SuccessMessage(response.data.message));\n        resp.status = true;\n\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n\n  return resp;\n\n  };\n};\n\n\nexport const auth = (email, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n\n    let device_token = localStorage.getItem('device_token');\n\n    var sessionToken = sessionStorage.getItem('token_de');\n\n    console.warn('sessionToken123', sessionToken)\n\n    const authData = {\n      email: email,\n      password: password,\n      device_token: sessionToken,\n      platform: 'Desktop',\n    };\n\n    \n\n\n    Axios().post('auth/login', authData)\n      .then((response) => {\n        console.warn('response123', response);\n        if (response.data.status === '1') {\n            // Firebase login\n            firebase.auth().signInWithEmailAndPassword(authData.email, authData.password);\n\n          const {\n            user_id,\n            business_code,\n            country_name,\n            device_token,\n            notification_status,\n            notification_chat_status,\n            notification_post_status,\n            notification_msg_center_status,\n            profile_image,\n            first_name,\n            last_name,\n            sc_bessi_name,\n            address,\n            post_code,\n            email,\n            mobile_no,\n            account_type,\n            first_login,\n            default_category\n          } = response.data.data;\n\n          const userData = {\n            user_id,\n            business_code,\n            country_name,\n            device_token,\n            notification_status,\n            notification_chat_status,\n            notification_post_status,\n            notification_msg_center_status,\n            profile_image,\n            first_name,\n            last_name,\n            sc_bessi_name,\n            address,\n            post_code,\n            email,\n            mobile_no,\n            account_type,\n            first_login,\n            default_category\n          };\n\n          localStorage.setItem('token', response.data.data.token);\n          localStorage.setItem('userData', JSON.stringify(userData));\n          dispatch(authSuccess(response.data.idToken, response.data.data));\n        } else {\n          dispatch(authFail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        dispatch(authFail(err.message));\n      });\n  };\n};\n\nexport const register = (data, history) => {\n  return (dispatch) => {\n    dispatch(isLoading());\n    console.log(\"sigggg\");\n    Axios().post('auth/websignup', data)\n      .then((response) => {\n        if (response.data.status === '1') {\n            // Firebase register\n            firebase.auth().createUserWithEmailAndPassword(data.email, data.password);\n\n          dispatch(\n            Success({\n              type: actionTypes.SIGNUP,\n              payload: response.data.data,\n            })\n          );\n          // history.push('/authenticate/'+data.email+'/'+1234);\n          console.log(\"register\");\n          history.push('/mail-sent/'+data.email+\"/1\")\n          // history.push('/login');\n        } else {\n          // console.log(response.data.message)\n          dispatch(Fail2(response.data.message));\n          //dispatch(Fail2(null));\n        }\n      })\n      .catch((err) => {\n        dispatch(Fail2(err.message));\n        //dispatch(Fail2(null));\n      });\n\n  };\n};\nexport const requestOtp = (data, history) => {\n  return (dispatch) => {\n\n    dispatch(isLoading());\n\n\n    Axios().post('users/requestOneTimePassword', data)\n      .then((response) => {\n        // console.log(response)\n\n        if (response.data.status === \"1\") {\n          dispatch(\n            Success({\n              type: actionTypes.EMAIL_VERIFY,\n              payload: response.data,\n            })\n          );\n          // debugger\n          // history.push('/login');\n          console.log(\"testettttttt\")\n          history.push('/mail-sent/'+data.email+\"/0\")\n          // history.push('/reset-password/'+data.email);\n        } else {\n          // console.log(response.data.message)\n          dispatch(Fail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        dispatch(Fail(err.message));\n      });\n  };\n};\n\nexport const reset_password = (data, history) => {\n  return (dispatch) => {\n\n    dispatch(isLoading());\n    Axios().post('users/reset_password', data)\n      .then((response) => {\n        // console.log(response)\n\n        if (response.data.status === \"1\") {\n          dispatch(\n            Success({\n              type: actionTypes.EMAIL_VERIFY,\n              payload: response.data,\n            })\n          );\n\n          history.push('/login');\n\n        } else {\n          // console.log(response.data.message)\n          dispatch(Fail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        dispatch(Fail(err.message));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}