{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/component/FullscreenSpinner/index.js\";\nimport React from 'react';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Slide from '@material-ui/core/Slide';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\nconst CircularProgressstyled = styled(CircularProgress)({\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  marginTop: -12,\n  marginLeft: -12\n});\nconst Transition = React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  }));\n});\nexport default function FullScreenDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: true,\n    open: props.open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressstyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/component/FullscreenSpinner/index.js"],"names":["React","makeStyles","styled","Button","Dialog","CircularProgress","Slide","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","CircularProgressstyled","top","left","marginTop","Transition","forwardRef","props","ref","FullScreenDialog","classes","open","setOpen","useState","handleClickOpen","handleClose"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,0BAAnC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GAD+B;AAIvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADP;AAELC,IAAAA,IAAI,EAAE;AAFD;AAJgC,CAAZ,CAAD,CAA5B;AAUA,MAAMC,sBAAsB,GAAGb,MAAM,CAACG,gBAAD,CAAN,CAAyB;AACtDK,EAAAA,QAAQ,EAAE,UAD4C;AAEtDM,EAAAA,GAAG,EAAE,KAFiD;AAGtDC,EAAAA,IAAI,EAAE,KAHgD;AAItDC,EAAAA,SAAS,EAAE,CAAC,EAJ0C;AAKtDN,EAAAA,UAAU,EAAE,CAAC;AALyC,CAAzB,CAA/B;AAQA,MAAMO,UAAU,GAAGnB,KAAK,CAACoB,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAClD,sBAAO,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,GAAG,EAAEA;AAA3B,KAAoCD,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFkB,CAAnB;AAIA,eAAe,SAASE,gBAAT,CAA0BF,KAA1B,EAAiC;AAC9C,QAAMG,OAAO,GAAGjB,SAAS,EAAzB;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkB1B,KAAK,CAAC2B,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5BF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,UAAU,MAAlB;AAAmB,IAAA,IAAI,EAAEL,KAAK,CAACI,IAA/B;AAAqC,IAAA,OAAO,EAAEI,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD","sourcesContent":["import React from 'react';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Slide from '@material-ui/core/Slide';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst CircularProgressstyled = styled(CircularProgress)({\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  marginTop: -12,\n  marginLeft: -12,\n});\n\nconst Transition = React.forwardRef((props, ref) => {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog fullScreen open={props.open} onClose={handleClose}>\n        <CircularProgressstyled />\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}