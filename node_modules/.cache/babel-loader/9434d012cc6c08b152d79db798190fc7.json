{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/MessageCenter/DirectMessage/Modal/Rymindrindex.js\";\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Typography, TextField, InputAdornment, List, ListItem, ListItemAvatar, ListItemText, Avatar, Divider } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Search from '@material-ui/icons/Search';\nimport Check from '@material-ui/icons/Check';\nimport Add from '@material-ui/icons/Add';\nimport PropTypes from 'prop-types';\nimport { styled } from '@material-ui/core/styles';\nimport DoneIcon from '@material-ui/icons/Done';\nimport parse from 'html-react-parser';\nlet find_key;\nconst CloseButton = styled(IconButton)({\n  position: 'absolute',\n  right: 0,\n  top: 0\n});\nconst DialogTitleStyled = styled(DialogTitle)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 24px',\n  marginBottom: 20\n});\nconst TypoPopHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600'\n}));\nconst SearchFieldStyled = styled(TextField)(({\n  theme\n}) => ({\n  paddingTop: 10,\n  paddingBottom: 10,\n  '& div': {\n    height: 50\n  }\n}));\nconst ListItemStyled = styled(ListItem)(({\n  theme\n}) => ({\n  borderRadius: 8\n}));\nconst AvatarShareStyled = styled(Avatar)({\n  height: 50,\n  width: 50,\n  marginRight: 10\n});\nconst TypoListSubtext = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 14,\n  color: theme.palette.secondary.contrastText\n}));\nconst ListStyled = styled(List)(({\n  theme\n}) => ({\n  maxHeight: 550,\n  overflow: 'auto'\n}));\nconst ButtonSuccess = styled(Button)(({\n  theme\n}) => ({\n  background: '#00d264',\n  color: theme.palette.success.contrastText\n}));\nexport default function DialogRaw(props) {\n  const {\n    onClose,\n    value: valueProp,\n    getSelectedRymindr,\n    open,\n    onRymindrUpdate,\n    onRymindrUpdateLink,\n    getRymindrListData,\n    ...other\n  } = props;\n  const [value, setValue] = useState(valueProp); //console.log('getSelectedRymindr',getSelectedRymindr);  \n\n  const [added, setAdded] = useState(getSelectedRymindr);\n  const [count, setCount] = useState(0);\n  const [rymindrListData, updateRymindrListData] = useState(getRymindrListData);\n  useEffect(() => {\n    setAdded(getSelectedRymindr);\n    updateRymindrListData(getRymindrListData);\n  }, [getSelectedRymindr, getRymindrListData]);\n\n  const handleCancel = () => {\n    onClose(!open);\n  };\n\n  const handleSubmit = () => {\n    setValue(false);\n    onClose(!open);\n    onRymindrUpdate(added.length);\n    onRymindrUpdateLink(added);\n    setCount(added.length); // Refresh the list\n\n    updateRymindrListData(getRymindrListData); // Set the added items\n\n    setAdded(added);\n  };\n\n  const handleOnChange = event => {\n    const value = event.target.value; // Get the existing reminders\n\n    let rymindrs = [...rymindrListData];\n\n    if (value != '') {\n      // Filter them\n      let filteredRymindrs = rymindrs.filter(o => o.note.toLowerCase().includes(value.toLowerCase())); // Update the state\n\n      updateRymindrListData(filteredRymindrs);\n    } else {\n      // Refresh the list\n      updateRymindrListData(getRymindrListData); // Set the added items\n\n      let addedItems = [...added];\n      var selectedItems = [];\n\n      for (let i = 0; i < getRymindrListData.length; i++) {\n        for (let j = 0; j < addedItems.length; j++) {\n          if (addedItems[j].id === getRymindrListData[i].id) {\n            selectedItems.push({\n              key: i,\n              id: getRymindrListData[i].id\n            });\n          }\n        }\n      }\n\n      setAdded(selectedItems);\n    }\n  };\n\n  const getAdded = (item_id, item_index) => {\n    // alert(item_id+'-------'+item_index);  \n    const copy_added = [...added];\n    copy_added.push({\n      key: item_index,\n      id: item_id\n    });\n    setAdded(copy_added);\n  };\n\n  const getdeleted = (item_id, item_index) => {\n    const copy_added = [...added];\n    let find_index = copy_added.findIndex(o => o.key === item_index);\n    let removed = copy_added.splice(find_index, 1);\n    setAdded(copy_added); //console.log('copy_added_delete',added)\n  }; //console.log('aseee', added);  \n\n\n  const DATA = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  /*const Rymindrlist = getRymindrListData.map((item, index) => (<>\n     \n    <ListItemStyled>\n      <ListItemAvatar>\n        <AvatarShareStyled alt='semy Sharp' src={require('../../../../assets/images/education.png')} />\n      </ListItemAvatar>\n      <ListItemText\n        primary={item.note}\n        secondary={\n        <TypoListSubtext>{item.rymindr_date} | {item.rymindr_time}</TypoListSubtext>\n        }\n      />       \n      \n     <ButtonSuccess variant='contained' startIcon={<Add />} onClick={()=>getAdded(item.id, index)}>Add</ButtonSuccess>\n    </ListItemStyled>\n    <Divider variant='inset' component='li' />\n  </>\n  ))*/\n\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    fullWidth: true,\n    maxWidth: \"md\",\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitleStyled, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TypoPopHeadStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, \"Link Rymindr\"), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"default\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchFieldStyled, {\n    id: \"input-with-icon-textfield\",\n    variant: \"outlined\",\n    fullWidth: true,\n    size: \"small\",\n    onKeyUp: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ListStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, rymindrListData.map((item, index) => {\n    find_key = added !== '' ? added.find(o => o.key === index) : '';\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemStyled, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AvatarShareStyled, {\n      alt: \"semy Sharp\",\n      src: require('../../../../assets/images/education.png'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: parse(item.note),\n      secondary: /*#__PURE__*/React.createElement(TypoListSubtext, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }\n      }, item.rymindr_date, \" | \", item.rymindr_time),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }), find_key ? /*#__PURE__*/React.createElement(ButtonSuccess, {\n      variant: \"contained\",\n      startIcon: /*#__PURE__*/React.createElement(DoneIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 63\n        }\n      }),\n      onClick: () => getdeleted(item.id, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, \"Added\") : /*#__PURE__*/React.createElement(ButtonSuccess, {\n      variant: \"contained\",\n      startIcon: /*#__PURE__*/React.createElement(Add, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 63\n        }\n      }),\n      onClick: () => getAdded(item.id, index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, \"Add\")), /*#__PURE__*/React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, \"Done\")));\n}\nDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  rymindrListData: PropTypes.array.isRequired\n};","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/MessageCenter/DirectMessage/Modal/Rymindrindex.js"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","Typography","TextField","InputAdornment","List","ListItem","ListItemAvatar","ListItemText","Avatar","Divider","React","useEffect","useState","CloseIcon","Search","Check","Add","PropTypes","styled","DoneIcon","parse","find_key","CloseButton","position","right","top","DialogTitleStyled","borderBottom","padding","marginBottom","TypoPopHeadStyled","theme","color","palette","secondary","contrastText","fontSize","fontWeight","SearchFieldStyled","paddingTop","paddingBottom","height","ListItemStyled","borderRadius","AvatarShareStyled","width","marginRight","TypoListSubtext","ListStyled","maxHeight","overflow","ButtonSuccess","background","success","DialogRaw","props","onClose","value","valueProp","getSelectedRymindr","open","onRymindrUpdate","onRymindrUpdateLink","getRymindrListData","other","setValue","added","setAdded","count","setCount","rymindrListData","updateRymindrListData","handleCancel","handleSubmit","length","handleOnChange","event","target","rymindrs","filteredRymindrs","filter","o","note","toLowerCase","includes","addedItems","selectedItems","i","j","id","push","key","getAdded","item_id","item_index","copy_added","getdeleted","find_index","findIndex","removed","splice","DATA","map","item","index","find","require","rymindr_date","rymindr_time","propTypes","func","isRequired","bool","string","array"],"mappings":"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","sourcesContent":["import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Typography, TextField, InputAdornment, List, ListItem, ListItemAvatar, ListItemText, Avatar, Divider } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Search from '@material-ui/icons/Search'\nimport Check from '@material-ui/icons/Check'\nimport Add from '@material-ui/icons/Add'\nimport PropTypes from 'prop-types'\nimport { styled } from '@material-ui/core/styles'\nimport DoneIcon from '@material-ui/icons/Done';\nimport parse from 'html-react-parser';\n\nlet find_key \nconst CloseButton = styled(IconButton)({\n  position: 'absolute',\n  right: 0,\n  top: 0\n})\n\nconst DialogTitleStyled = styled(DialogTitle)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 24px',\n  marginBottom: 20\n})\n\nconst TypoPopHeadStyled = styled(Typography)(({ theme }) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600'\n}))\n\nconst SearchFieldStyled = styled(TextField)(({ theme }) => ({\n  paddingTop: 10,\n  paddingBottom: 10,\n  '& div': { height: 50 }\n}))\n\nconst ListItemStyled = styled(ListItem)(({ theme }) => ({\n  borderRadius: 8\n}))\n\nconst AvatarShareStyled = styled(Avatar)({\n  height: 50,\n  width: 50,\n  marginRight: 10\n})\n\nconst TypoListSubtext = styled(Typography)(({ theme }) => ({\n  fontSize: 14,\n  color: theme.palette.secondary.contrastText\n}))\n\nconst ListStyled = styled(List)(({ theme }) => ({\n  maxHeight: 550, overflow: 'auto'\n}))\n\nconst ButtonSuccess = styled(Button)(({ theme }) => ({\n  background: '#00d264',\n  color: theme.palette.success.contrastText\n}))\n\nexport default function DialogRaw (props) {  \n  const { onClose, value: valueProp, getSelectedRymindr, open,onRymindrUpdate, onRymindrUpdateLink,getRymindrListData, ...other} = props\n  const [value, setValue] = useState(valueProp)\n  //console.log('getSelectedRymindr',getSelectedRymindr);  \n  const [added, setAdded] = useState(getSelectedRymindr)\n  const [count, setCount] = useState(0)  \n    \n  const [rymindrListData, updateRymindrListData] = useState(getRymindrListData);\n \n useEffect(() => {\n    setAdded(getSelectedRymindr);\n    updateRymindrListData(getRymindrListData);\n}, [getSelectedRymindr, getRymindrListData]);\n\n\n  const handleCancel = () => {    \n    onClose(!open)   \n    \n  }\n  const handleSubmit = () => {    \n    setValue(false)\n    onClose(!open)   \n    onRymindrUpdate(added.length)\n    onRymindrUpdateLink(added)   \n    setCount(added.length)\n    \n    // Refresh the list\n    updateRymindrListData(getRymindrListData);\n    // Set the added items\n    setAdded(added);\n  }\n\n  const handleOnChange = (event) => {\n    const value = event.target.value; \n    \n    // Get the existing reminders\n    let rymindrs = [...rymindrListData];\n\n    if( value != '' )\n    {\n        // Filter them\n        let filteredRymindrs = rymindrs.filter(o => o.note.toLowerCase().includes(value.toLowerCase()));\n        // Update the state\n        updateRymindrListData(filteredRymindrs);\n    }\n    else\n    {\n        // Refresh the list\n        updateRymindrListData(getRymindrListData);\n        // Set the added items\n        \n        let addedItems = [...added];\n        var selectedItems = [];\n        for(let i=0; i<getRymindrListData.length; i++)\n        {\n            for (let j=0; j<addedItems.length; j++)\n            {\n                if( addedItems[j].id === getRymindrListData[i].id )\n                {\n                    selectedItems.push({key: i, id: getRymindrListData[i].id});\n                }\n            }\n        }\n\n        setAdded(selectedItems);\n    }\n  }\n\n  const getAdded = (item_id, item_index) => {\n   // alert(item_id+'-------'+item_index);  \n    const copy_added = [...added];\n    copy_added.push({key:item_index, id:item_id});  \n    setAdded(copy_added);\n  }\n\n\n  const getdeleted = (item_id, item_index) => {   \n     const copy_added = [...added];\n     let find_index =  copy_added.findIndex(o => o.key === item_index)    \n     let removed = copy_added.splice(find_index, 1)   \n     setAdded(copy_added);\n     //console.log('copy_added_delete',added)\n   }\n  //console.log('aseee', added);  \n\n  const DATA = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  \n  /*const Rymindrlist = getRymindrListData.map((item, index) => (<>\n     \n    <ListItemStyled>\n      <ListItemAvatar>\n        <AvatarShareStyled alt='semy Sharp' src={require('../../../../assets/images/education.png')} />\n      </ListItemAvatar>\n      <ListItemText\n        primary={item.note}\n        secondary={\n        <TypoListSubtext>{item.rymindr_date} | {item.rymindr_time}</TypoListSubtext>\n        }\n      />       \n      \n     <ButtonSuccess variant='contained' startIcon={<Add />} onClick={()=>getAdded(item.id, index)}>Add</ButtonSuccess>\n    </ListItemStyled>\n    <Divider variant='inset' component='li' />\n  </>\n  ))*/\n    \n  \n  \n  return (\n    \n    <Dialog\n      fullWidth\n      maxWidth='md'\n      disableBackdropClick\n      disableEscapeKeyDown\n      aria-labelledby='confirmation-dialog-title'\n      open={open}\n      {...other}  \n    >\n      <DialogTitleStyled id='form-dialog-title'>\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\n          <TypoPopHeadStyled>Link Rymindr</TypoPopHeadStyled>\n          <IconButton color='default' onClick={handleCancel}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitleStyled>\n      <DialogContent>\n        <SearchFieldStyled\n          id='input-with-icon-textfield'\n          variant='outlined'\n          fullWidth\n          size='small'\n          onKeyUp={handleOnChange}\n        />\n\n        <ListStyled>{\n          rymindrListData.map((item, index) => {\n            find_key =  (added !== '') ? added.find(o => o.key === index) : ''           \n            return(\n              <React.Fragment><ListItemStyled>\n              <ListItemAvatar>\n                <AvatarShareStyled alt='semy Sharp' src={require('../../../../assets/images/education.png')} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={parse(item.note)}\n                secondary={\n                <TypoListSubtext>{item.rymindr_date} | {item.rymindr_time}</TypoListSubtext>\n                }\n              />       \n              { (find_key) ?\n                <ButtonSuccess variant='contained' startIcon={<DoneIcon />} onClick={()=>getdeleted(item.id, index)}>Added</ButtonSuccess>\n                : \n                <ButtonSuccess variant='contained' startIcon={<Add />} onClick={()=>getAdded(item.id, index)}>Add</ButtonSuccess>   \n              }               \n            </ListItemStyled>\n            <Divider variant='inset' component='li' />\n            </React.Fragment> \n            )\n          })\n        }\n        </ListStyled>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleSubmit} color='primary'>\n          Done\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\n\nDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  rymindrListData: PropTypes.array.isRequired,\n}\n"]},"metadata":{},"sourceType":"module"}