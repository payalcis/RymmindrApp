{"ast":null,"code":"class Store {\n  constructor(t) {\n    const n = this;\n    n.actions = {}, n.mutations = {}, n.state = {}, n.status = \"resting\", n.callbacks = [], t.hasOwnProperty(\"actions\") && (n.actions = t.actions), t.hasOwnProperty(\"mutations\") && (n.mutations = t.mutations), n.state = new Proxy(t.initialState || {}, {\n      set(t, o, s) {\n        return t[o] = s, n.processCallbacks(n.state), n.status = \"resting\", !0;\n      }\n\n    });\n  }\n\n  dispatch(t, n) {\n    const o = this;\n    return \"function\" != typeof o.actions[t] ? (console.error(`Action \"${t}\" doesn't exist.`), !1) : (o.status = \"action\", o.actions[t](o, n));\n  }\n\n  commit(t, n) {\n    const o = this;\n    if (\"function\" != typeof o.mutations[t]) return console.error(`Mutation \"${t}\" doesn't exist`), !1;\n    o.status = \"mutation\";\n    let s = o.mutations[t](o.state, n);\n    return o.state = s, !0;\n  }\n\n  processCallbacks(t) {\n    const n = this;\n    return !!n.callbacks.length && (n.callbacks.forEach(n => n(t)), !0);\n  }\n\n  subscribe(t) {\n    const n = this;\n    return \"function\" != typeof t ? (console.error(\"You can only subscribe to Store changes with a valid function\"), !1) : (n.callbacks.push(t), !0);\n  }\n\n}\n\nexport default Store;","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/node_modules/beedle/dist/beedle.js"],"names":["Store","constructor","t","n","actions","mutations","state","status","callbacks","hasOwnProperty","Proxy","initialState","set","o","s","processCallbacks","dispatch","console","error","commit","length","forEach","subscribe","push"],"mappings":"AAAA,MAAMA,KAAN,CAAW;AAACC,EAAAA,WAAW,CAACC,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,IAAR;AAAaA,IAAAA,CAAC,CAACC,OAAF,GAAU,EAAV,EAAaD,CAAC,CAACE,SAAF,GAAY,EAAzB,EAA4BF,CAAC,CAACG,KAAF,GAAQ,EAApC,EAAuCH,CAAC,CAACI,MAAF,GAAS,SAAhD,EAA0DJ,CAAC,CAACK,SAAF,GAAY,EAAtE,EAAyEN,CAAC,CAACO,cAAF,CAAiB,SAAjB,MAA8BN,CAAC,CAACC,OAAF,GAAUF,CAAC,CAACE,OAA1C,CAAzE,EAA4HF,CAAC,CAACO,cAAF,CAAiB,WAAjB,MAAgCN,CAAC,CAACE,SAAF,GAAYH,CAAC,CAACG,SAA9C,CAA5H,EAAqLF,CAAC,CAACG,KAAF,GAAQ,IAAII,KAAJ,CAAUR,CAAC,CAACS,YAAF,IAAgB,EAA1B,EAA6B;AAACC,MAAAA,GAAG,CAACV,CAAD,EAAGW,CAAH,EAAKC,CAAL,EAAO;AAAC,eAAOZ,CAAC,CAACW,CAAD,CAAD,GAAKC,CAAL,EAAOX,CAAC,CAACY,gBAAF,CAAmBZ,CAAC,CAACG,KAArB,CAAP,EAAmCH,CAAC,CAACI,MAAF,GAAS,SAA5C,EAAsD,CAAC,CAA9D;AAAgE;;AAA5E,KAA7B,CAA7L;AAAyS;;AAAAS,EAAAA,QAAQ,CAACd,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMU,CAAC,GAAC,IAAR;AAAa,WAAM,cAAY,OAAOA,CAAC,CAACT,OAAF,CAAUF,CAAV,CAAnB,IAAiCe,OAAO,CAACC,KAAR,CAAe,WAAUhB,CAAE,kBAA3B,GAA8C,CAAC,CAAhF,KAAoFW,CAAC,CAACN,MAAF,GAAS,QAAT,EAAkBM,CAAC,CAACT,OAAF,CAAUF,CAAV,EAAaW,CAAb,EAAeV,CAAf,CAAtG,CAAN;AAA+H;;AAAAgB,EAAAA,MAAM,CAACjB,CAAD,EAAGC,CAAH,EAAK;AAAC,UAAMU,CAAC,GAAC,IAAR;AAAa,QAAG,cAAY,OAAOA,CAAC,CAACR,SAAF,CAAYH,CAAZ,CAAtB,EAAqC,OAAOe,OAAO,CAACC,KAAR,CAAe,aAAYhB,CAAE,iBAA7B,GAA+C,CAAC,CAAvD;AAAyDW,IAAAA,CAAC,CAACN,MAAF,GAAS,UAAT;AAAoB,QAAIO,CAAC,GAACD,CAAC,CAACR,SAAF,CAAYH,CAAZ,EAAeW,CAAC,CAACP,KAAjB,EAAuBH,CAAvB,CAAN;AAAgC,WAAOU,CAAC,CAACP,KAAF,GAAQQ,CAAR,EAAU,CAAC,CAAlB;AAAoB;;AAAAC,EAAAA,gBAAgB,CAACb,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,IAAR;AAAa,WAAM,CAAC,CAACA,CAAC,CAACK,SAAF,CAAYY,MAAd,KAAuBjB,CAAC,CAACK,SAAF,CAAYa,OAAZ,CAAoBlB,CAAC,IAAEA,CAAC,CAACD,CAAD,CAAxB,GAA6B,CAAC,CAArD,CAAN;AAA8D;;AAAAoB,EAAAA,SAAS,CAACpB,CAAD,EAAG;AAAC,UAAMC,CAAC,GAAC,IAAR;AAAa,WAAM,cAAY,OAAOD,CAAnB,IAAsBe,OAAO,CAACC,KAAR,CAAc,+DAAd,GAA+E,CAAC,CAAtG,KAA0Gf,CAAC,CAACK,SAAF,CAAYe,IAAZ,CAAiBrB,CAAjB,GAAoB,CAAC,CAA/H,CAAN;AAAwI;;AAAh6B;;AAAi6B,eAAeF,KAAf","sourcesContent":["class Store{constructor(t){const n=this;n.actions={},n.mutations={},n.state={},n.status=\"resting\",n.callbacks=[],t.hasOwnProperty(\"actions\")&&(n.actions=t.actions),t.hasOwnProperty(\"mutations\")&&(n.mutations=t.mutations),n.state=new Proxy(t.initialState||{},{set(t,o,s){return t[o]=s,n.processCallbacks(n.state),n.status=\"resting\",!0}})}dispatch(t,n){const o=this;return\"function\"!=typeof o.actions[t]?(console.error(`Action \"${t}\" doesn't exist.`),!1):(o.status=\"action\",o.actions[t](o,n))}commit(t,n){const o=this;if(\"function\"!=typeof o.mutations[t])return console.error(`Mutation \"${t}\" doesn't exist`),!1;o.status=\"mutation\";let s=o.mutations[t](o.state,n);return o.state=s,!0}processCallbacks(t){const n=this;return!!n.callbacks.length&&(n.callbacks.forEach(n=>n(t)),!0)}subscribe(t){const n=this;return\"function\"!=typeof t?(console.error(\"You can only subscribe to Store changes with a valid function\"),!1):(n.callbacks.push(t),!0)}}export default Store;\n"]},"metadata":{},"sourceType":"module"}