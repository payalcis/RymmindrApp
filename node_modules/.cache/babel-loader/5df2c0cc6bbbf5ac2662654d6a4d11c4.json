{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/index.js\";\nimport './index.css';\nimport { applyMiddleware, createStore } from 'redux';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker, { unregister } from './registerServiceWorker';\nimport rootReducer from './store/reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension/';\nimport thunk from 'redux-thunk'; //const store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nconst app = /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}));\nReactDOM.render(app, document.getElementById('root'));\nregisterServiceWorker(); //askForPermissioToReceiveNotifications();\n// initializeFirebase();\n//askForPermissioToReceiveNotifications();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//registerServiceWorker.unregister();\n\nunregister();","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/index.js"],"names":["applyMiddleware","createStore","App","HashRouter","Router","Provider","React","ReactDOM","registerServiceWorker","unregister","rootReducer","composeWithDevTools","thunk","initialState","middleware","store","app","render","document","getElementById"],"mappings":";AAAA,OAAO,aAAP;AACA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,UAAU,IAAIC,MAAvB,QAAqC,kBAArC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,qBAAP,IAAgCC,UAAhC,QAAkD,yBAAlD;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAAQC,mBAAR,QAAkC,2BAAlC;AAEA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,UAAU,GAAG,CAACF,KAAD,CAAnB;AAEA,MAAMG,KAAK,GAAGd,WAAW,CACvBS,WADuB,EAEvBG,YAFuB,EAGvBF,mBAAmB,CAACX,eAAe,CAAC,GAAGc,UAAJ,CAAhB,CAHI,CAAzB;AAOA,MAAME,GAAG,gBACP,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF;AAMAR,QAAQ,CAACU,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB;AACAX,qBAAqB,G,CACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,UAAU","sourcesContent":["import './index.css';\nimport { applyMiddleware, createStore } from 'redux';\n\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker, { unregister } from './registerServiceWorker'\nimport rootReducer from './store/reducers';\nimport {composeWithDevTools} from 'redux-devtools-extension/';\n\nimport thunk from 'redux-thunk';\n\n//const store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nregisterServiceWorker();\n//askForPermissioToReceiveNotifications();\n// initializeFirebase();\n//askForPermissioToReceiveNotifications();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//registerServiceWorker.unregister();\nunregister();\n"]},"metadata":{},"sourceType":"module"}