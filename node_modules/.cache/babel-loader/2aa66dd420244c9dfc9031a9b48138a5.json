{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/LiveChat/Modal/index.js\";\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Typography, TextField, InputAdornment, Grid, List, ListItem, ListItemAvatar, ListItemText, Avatar, Divider, ListItemSecondaryAction, Checkbox, Chip } from '@material-ui/core';\nimport React, { useEffect, useState, useRef } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LocalSee from '@material-ui/icons/LocalSee';\nimport Search from '@material-ui/icons/Search';\nimport Check from '@material-ui/icons/Check';\nimport Add from '@material-ui/icons/Add';\nimport Alert from '@material-ui/lab/Alert';\nimport PropTypes from 'prop-types';\nimport { styled } from '@material-ui/core/styles';\nimport CircularSpinner from '../../../component/CircularSpinner';\nimport { connect } from 'react-redux';\nimport { createGroup } from '../../../store/actions/LiveChatActions';\nconst CloseButton = styled(IconButton)({\n  position: 'absolute',\n  right: 0,\n  top: 0\n});\nconst DialogTitleStyled = styled(DialogTitle)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 24px',\n  marginBottom: 20\n});\nconst TypoPopHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600'\n}));\nconst SearchFieldStyled = styled(TextField)(({\n  theme\n}) => ({\n  paddingTop: 10,\n  paddingBottom: 10,\n  maxWidth: 70 + '%',\n  margin: '0 15%',\n  '& div': {\n    height: 50\n  }\n}));\nconst ListItemStyled = styled(ListItem)(({\n  theme\n}) => ({\n  borderRadius: 8\n}));\nconst AvatarShareStyled = styled(Avatar)({\n  height: 50,\n  width: 50,\n  marginRight: 10\n});\nconst TypoListSubtext = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 14,\n  color: theme.palette.secondary.contrastText\n}));\nconst ListStyled = styled(List)(({\n  theme\n}) => ({\n  maxHeight: 550,\n  overflow: 'auto',\n  backgroundColor: '#f4f9fa',\n  margin: '0 -24px',\n  padding: '0 10px',\n  marginTop: 30,\n  paddingTop: 20\n}));\nconst ButtonSuccess = styled(Button)(({\n  theme\n}) => ({\n  background: '#00d264',\n  color: theme.palette.success.contrastText\n}));\nconst AvatarImageStyle = styled(Avatar)(({\n  theme\n}) => ({\n  height: 140,\n  width: 140,\n  backgroundColor: '#e5e5e5'\n}));\nconst IconButtonStyles = styled(IconButton)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.primary.main,\n  color: '#fff',\n  position: 'absolute',\n  right: 20,\n  zIndex: 9,\n  marginTop: 6\n}));\n\nfunction ConfirmationDialogRaw(props) {\n  const fileBrowse = useRef(null);\n  const {\n    onClose,\n    value: valueProp,\n    open,\n    loading,\n    ...other\n  } = props;\n  const [value, setValue] = useState(valueProp);\n\n  const handleCancel = () => {\n    setValue(false);\n    onClose(!open);\n  };\n\n  const [checked, setChecked] = useState([]);\n  const [checkedUsers, setCheckedUsers] = useState([]);\n\n  const handleToggle = (value, user) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    let users = [...checkedUsers];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n      users.push(user);\n    } else {\n      newChecked.splice(currentIndex, 1);\n      users.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked); // To uncheck Select All Contact checkbox\n\n    if (users.length === 0) {\n      updateIsAllContactSelected(false);\n    }\n\n    setCheckedUsers(users);\n  };\n\n  const handleDelete = checkedIndex => {\n    const users = [...checkedUsers]; // To remove from check boxes\n\n    let contactIndex = contactList.findIndex(user => user.user_id === users[checkedIndex].user_id);\n    const newChecked = [...checked];\n    const newCheckedIndex = newChecked.indexOf(contactIndex);\n    newChecked.splice(newCheckedIndex, 1);\n    setChecked(newChecked); // To remove from checked users\n\n    users.splice(checkedIndex, 1); // To uncheck Select All Contact checkbox\n\n    if (users.length === 0) {\n      updateIsAllContactSelected(false);\n    }\n\n    setCheckedUsers(users);\n  };\n\n  const {\n    contacts\n  } = props;\n  const [contactList, updateContactList] = useState(contacts);\n  useEffect(() => {\n    updateContactList(contacts);\n  }, [contacts]);\n\n  const handleOnChange = event => {\n    let searchStr = event.target.value;\n    let list = [...contacts];\n\n    if (searchStr == '') {\n      updateContactList(list);\n    } else {\n      let users = list.filter(user => user.contact_type === 'individual');\n      const filteredList = users.filter(obj => obj.first_name.toLowerCase().includes(searchStr.toLowerCase()) || obj.last_name.toLowerCase().includes(searchStr.toLowerCase()));\n      updateContactList(filteredList);\n    }\n  };\n\n  const [isAllContactSelected, updateIsAllContactSelected] = useState(false);\n\n  const handleSelectAllContact = event => {\n    if (event.target.checked) {\n      let contactsCount = contactList.length;\n      let selecetdCheckboxes = Array.apply(null, Array(contactsCount)).map(function (x, i) {\n        return i;\n      });\n      updateIsAllContactSelected(true);\n      setChecked(selecetdCheckboxes);\n      setCheckedUsers(contactList);\n    } else {\n      updateIsAllContactSelected(false);\n      setChecked([]);\n      setCheckedUsers([]);\n    }\n  }; // To show file browse\n\n\n  const showFileBrowse = () => {\n    fileBrowse.current.click();\n  };\n\n  const [groupName, updateGroupName] = useState('');\n  const [groupIcon, updateGroupIcon] = useState(null);\n\n  const handleFileSelect = async event => {\n    event.stopPropagation();\n    event.preventDefault();\n    let file = event.target.files[0];\n    updateGroupIcon(file);\n    fileBrowse.current.value = '';\n  };\n\n  const {\n    user_id\n  } = JSON.parse(localStorage.getItem('userData'));\n  const [validation, showValidationMsg] = useState(false);\n\n  const handleSaveGroupDetails = () => {\n    showValidationMsg(false);\n    let users = [];\n\n    if (checkedUsers.length > 0) {\n      for (let i = 0; i < checkedUsers.length; i++) {\n        users.push(checkedUsers[i].user_id);\n      }\n    }\n\n    if (groupName === '' || users.length === 0) {\n      showValidationMsg(true);\n      return false;\n    }\n\n    const dataToSend = {\n      userId: user_id,\n      groupIcon: groupIcon,\n      groupName: groupName,\n      users: users\n    };\n    props.handleSaveGroupDetails(dataToSend);\n  }; // To refresh the form\n\n\n  useEffect(() => {\n    setChecked([]);\n    setCheckedUsers([]);\n    updateGroupIcon(null);\n    updateIsAllContactSelected(false);\n    return () => {\n      setChecked([]);\n      setCheckedUsers([]);\n      updateGroupIcon(null);\n      updateIsAllContactSelected(false);\n    };\n  }, [open]);\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    fullWidth: true,\n    maxWidth: \"md\",\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitleStyled, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TypoPopHeadStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, \"Create New Group\"), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"default\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    justifycontent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    ref: fileBrowse,\n    style: {\n      display: \"none\"\n    },\n    onChange: handleFileSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AvatarImageStyle, {\n    onClick: showFileBrowse,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, \" \", /*#__PURE__*/React.createElement(LocalSee, {\n    style: {\n      fontSize: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 57\n    }\n  }), \" \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Group Name\",\n    placeholder: \"Enter your group name\",\n    variant: \"outlined\",\n    fullWidth: true,\n    className: \"mb-20\",\n    onChange: e => updateGroupName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }\n  }), checkedUsers && checkedUsers.length > 0 ? checkedUsers.map((checkedUser, checkedUsersIndex) => /*#__PURE__*/React.createElement(Chip, {\n    key: checkedUsersIndex,\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"Natacha\",\n      src: \"/static/images/avatar/1.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }\n    }),\n    label: checkedUser.first_name,\n    onDelete: () => handleDelete(checkedUsersIndex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }\n  })) : null, validation === true ? /*#__PURE__*/React.createElement(Alert, {\n    variant: \"outlined\",\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }, \"Please provide group name and select at least one contact!\") : null)), /*#__PURE__*/React.createElement(IconButtonStyles, {\n    \"aria-label\": \"delete\",\n    onClick: handleSaveGroupDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Check, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(ListStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchFieldStyled, {\n    id: \"input-with-icon-textfield\",\n    variant: \"outlined\",\n    fullWidth: true,\n    size: \"small\",\n    onKeyUp: handleOnChange,\n    autoComplete: \"off\",\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 19\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemStyled, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 25\n    }\n  }, \"Select All Contacts\"), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    edge: \"end\",\n    style: {\n      marginRight: 0,\n      color: '#17baff'\n    },\n    onClick: handleSelectAllContact,\n    checked: isAllContactSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }))), loading && /*#__PURE__*/React.createElement(CircularSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 25\n    }\n  }), contactList && contactList.length > 0 ? contactList.map((contact, contactIndex) => contact.contact_type === 'individual' ? /*#__PURE__*/React.createElement(React.Fragment, {\n    key: contactIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItemStyled, {\n    key: value,\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(AvatarShareStyled, {\n    alt: \"semy Sharp\",\n    src: contact.profile_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: contact.first_name + ' ' + contact.last_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    edge: \"end\",\n    onChange: handleToggle(contactIndex, contact),\n    checked: checked.indexOf(contactIndex) !== -1,\n    style: {\n      marginRight: 0,\n      color: '#17baff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 29\n    }\n  })) : null) : null)));\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.liveChatReducer.loading,\n    contacts: state.liveChatReducer.contacts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createGroup: data => dispatch(createGroup(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmationDialogRaw);","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/LiveChat/Modal/index.js"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","Typography","TextField","InputAdornment","Grid","List","ListItem","ListItemAvatar","ListItemText","Avatar","Divider","ListItemSecondaryAction","Checkbox","Chip","React","useEffect","useState","useRef","CloseIcon","LocalSee","Search","Check","Add","Alert","PropTypes","styled","CircularSpinner","connect","createGroup","CloseButton","position","right","top","DialogTitleStyled","borderBottom","padding","marginBottom","TypoPopHeadStyled","theme","color","palette","secondary","contrastText","fontSize","fontWeight","SearchFieldStyled","paddingTop","paddingBottom","maxWidth","margin","height","ListItemStyled","borderRadius","AvatarShareStyled","width","marginRight","TypoListSubtext","ListStyled","maxHeight","overflow","backgroundColor","marginTop","ButtonSuccess","background","success","AvatarImageStyle","IconButtonStyles","primary","main","zIndex","ConfirmationDialogRaw","props","fileBrowse","onClose","value","valueProp","open","loading","other","setValue","handleCancel","checked","setChecked","checkedUsers","setCheckedUsers","handleToggle","user","currentIndex","indexOf","newChecked","users","push","splice","length","updateIsAllContactSelected","handleDelete","checkedIndex","contactIndex","contactList","findIndex","user_id","newCheckedIndex","contacts","updateContactList","handleOnChange","event","searchStr","target","list","filter","contact_type","filteredList","obj","first_name","toLowerCase","includes","last_name","isAllContactSelected","handleSelectAllContact","contactsCount","selecetdCheckboxes","Array","apply","map","x","i","showFileBrowse","current","click","groupName","updateGroupName","groupIcon","updateGroupIcon","handleFileSelect","stopPropagation","preventDefault","file","files","JSON","parse","localStorage","getItem","validation","showValidationMsg","handleSaveGroupDetails","dataToSend","userId","display","e","checkedUser","checkedUsersIndex","startAdornment","contact","profile_image","propTypes","func","isRequired","bool","string","mapStateToProps","state","liveChatReducer","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Typography, TextField, InputAdornment, Grid, List, ListItem, ListItemAvatar, ListItemText, Avatar, Divider, ListItemSecondaryAction, Checkbox, Chip } from '@material-ui/core'\nimport React, { useEffect, useState, useRef } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LocalSee from '@material-ui/icons/LocalSee';\nimport Search from '@material-ui/icons/Search';\nimport Check from '@material-ui/icons/Check';\nimport Add from '@material-ui/icons/Add';\nimport Alert from '@material-ui/lab/Alert';\n\nimport PropTypes from 'prop-types';\nimport { styled } from '@material-ui/core/styles';\nimport CircularSpinner from '../../../component/CircularSpinner';\n\nimport { connect } from 'react-redux';\nimport { createGroup } from '../../../store/actions/LiveChatActions';\n\nconst CloseButton = styled(IconButton)({\n  position: 'absolute',\n  right: 0,\n  top: 0\n})\n\nconst DialogTitleStyled = styled(DialogTitle)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 24px',\n  marginBottom: 20\n})\n\nconst TypoPopHeadStyled = styled(Typography)(({ theme }) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600'\n}))\n\nconst SearchFieldStyled = styled(TextField)(({ theme }) => ({\n  paddingTop: 10,\n  paddingBottom: 10,\n  maxWidth: 70 + '%',\n  margin: '0 15%',\n  '& div': { height: 50 }\n}))\n\nconst ListItemStyled = styled(ListItem)(({ theme }) => ({\n  borderRadius: 8\n}))\n\nconst AvatarShareStyled = styled(Avatar)({\n  height: 50,\n  width: 50,\n  marginRight: 10\n})\n\nconst TypoListSubtext = styled(Typography)(({ theme }) => ({\n  fontSize: 14,\n  color: theme.palette.secondary.contrastText\n}))\n\nconst ListStyled = styled(List)(({ theme }) => ({\n  maxHeight: 550,\n  overflow: 'auto',\n  backgroundColor: '#f4f9fa',\n  margin: '0 -24px',\n  padding: '0 10px',\n  marginTop: 30,\n  paddingTop: 20\n}))\n\nconst ButtonSuccess = styled(Button)(({ theme }) => ({\n  background: '#00d264',\n  color: theme.palette.success.contrastText\n}))\n\nconst AvatarImageStyle = styled(Avatar)(({ theme }) => ({\n  height: 140, width: 140, backgroundColor: '#e5e5e5'\n}))\n\nconst IconButtonStyles = styled(IconButton)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  color: '#fff',\n  position: 'absolute',\n  right: 20,\n  zIndex: 9,\n  marginTop: 6\n}))\n\nfunction ConfirmationDialogRaw (props) {\n    const fileBrowse = useRef(null);\n\n  const { onClose, value: valueProp, open, loading, ...other } = props;\n  const [value, setValue] = useState(valueProp);\n\n  const handleCancel = () => {\n    setValue(false);\n    onClose(!open);\n  }\n\n  const [checked, setChecked] = useState([]);\n  const [checkedUsers, setCheckedUsers] = useState([]);\n\n  const handleToggle = (value, user) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    let users = [...checkedUsers];\n\n    if (currentIndex === -1) {\n        newChecked.push(value);\n        users.push(user);\n    } else {\n        newChecked.splice(currentIndex, 1);\n        users.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n\n    // To uncheck Select All Contact checkbox\n    if( users.length === 0 )\n    {\n        updateIsAllContactSelected(false);\n    }\n\n    setCheckedUsers(users);\n  }\n\n  const handleDelete = (checkedIndex) => {\n    const users = [...checkedUsers];\n\n    // To remove from check boxes\n    let contactIndex = contactList.findIndex(user => user.user_id === users[checkedIndex].user_id);\n    const newChecked = [...checked];\n    const newCheckedIndex = newChecked.indexOf(contactIndex);\n    newChecked.splice(newCheckedIndex, 1);\n    setChecked(newChecked);\n\n    // To remove from checked users\n    users.splice(checkedIndex, 1);\n\n    // To uncheck Select All Contact checkbox\n    if( users.length === 0 )\n    {\n        updateIsAllContactSelected(false);\n    }\n\n    setCheckedUsers(users);\n  }\n\n  const {contacts} = props;\n\n  const [contactList, updateContactList] = useState(contacts);\n  useEffect(() => {\n    updateContactList(contacts);\n  }, [contacts]);\n\n  const handleOnChange = (event) => {\n    let searchStr = event.target.value;\n\n    let list = [...contacts];\n\n    if( searchStr == '' )\n    {        \n        updateContactList(list);\n    }\n    else\n    {\n        let users = list.filter((user) => (user.contact_type === 'individual'));\n\n        const filteredList = users.filter(obj => (obj.first_name.toLowerCase().includes(searchStr.toLowerCase())) || (obj.last_name.toLowerCase().includes(searchStr.toLowerCase())));\n\n        updateContactList(filteredList);\n    }\n  }\n\n  const [isAllContactSelected, updateIsAllContactSelected] = useState(false);\n  const handleSelectAllContact = (event) => {\n    if( event.target.checked )\n    {\n        let contactsCount = contactList.length;\n        let selecetdCheckboxes = Array.apply(null, Array(contactsCount)).map(function (x, i) { return i; });\n        \n        updateIsAllContactSelected(true);\n        setChecked(selecetdCheckboxes);\n        setCheckedUsers(contactList);\n    }\n    else\n    {\n        updateIsAllContactSelected(false);\n        setChecked([]);\n        setCheckedUsers([]);\n    }\n  }\n\n  // To show file browse\n  const showFileBrowse = () => {\n    fileBrowse.current.click();\n  }\n\n  const [groupName, updateGroupName] = useState('');\n  const [groupIcon, updateGroupIcon] = useState(null);\n  const handleFileSelect = async (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n    let file = event.target.files[0];\n    \n    updateGroupIcon(file);\n\n    fileBrowse.current.value = '';\n  }\n\n  const { user_id } = JSON.parse(localStorage.getItem('userData'));\n  const [validation, showValidationMsg] = useState(false);\n  const handleSaveGroupDetails = () => {\n    \n    showValidationMsg(false);\n\n    let users = [];\n    if( checkedUsers.length > 0 )\n    {\n        for(let i=0; i<checkedUsers.length; i++)\n        {\n            users.push(checkedUsers[i].user_id);\n        }\n    }\n\n    if( groupName === '' || users.length === 0 )\n    {\n        showValidationMsg(true);\n        return false;\n    }\n\n    const dataToSend = {\n        userId: user_id,\n        groupIcon: groupIcon,\n        groupName: groupName,\n        users: users\n    }\n\n    props.handleSaveGroupDetails(dataToSend);\n  }\n\n  // To refresh the form\n  useEffect(() => {\n    setChecked([]);\n    setCheckedUsers([]);\n    updateGroupIcon(null);\n    updateIsAllContactSelected(false);\n    \n    return () => {\n        setChecked([]);\n        setCheckedUsers([]);\n        updateGroupIcon(null);\n        updateIsAllContactSelected(false);\n    }\n  }, [open]);\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth='md'\n      disableBackdropClick\n      disableEscapeKeyDown\n      aria-labelledby='confirmation-dialog-title'\n      open={open}\n      {...other}\n    >\n      <DialogTitleStyled id='form-dialog-title'>\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\n          <TypoPopHeadStyled>Create New Group</TypoPopHeadStyled>\n          <IconButton color='default' onClick={handleCancel}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitleStyled>\n      <DialogContent>\n        <Grid container spacing={3} alignItems='center'>\n          <Grid item xs={3} justifycontent='center'>\n            <input type=\"file\" ref={fileBrowse} style={{display: \"none\"}} onChange={handleFileSelect} />\n            <AvatarImageStyle onClick={showFileBrowse}> <LocalSee style={{ fontSize: 50 }} /> </AvatarImageStyle>\n          </Grid>\n          <Grid item xs={9}>\n            <TextField id='outlined-basic' label='Group Name' placeholder='Enter your group name' variant='outlined' fullWidth className='mb-20' onChange={(e) => updateGroupName(e.target.value)} />\n            {\n                ( checkedUsers && checkedUsers.length > 0 )\n                ?\n                checkedUsers.map((checkedUser, checkedUsersIndex) => \n                    <Chip key={checkedUsersIndex}\n                    avatar={<Avatar alt='Natacha' src='/static/images/avatar/1.jpg' />}\n                    label={checkedUser.first_name}\n                    onDelete={() => handleDelete(checkedUsersIndex)}\n                    />\n                )\n                :\n                null\n            }\n            \n            {\n                ( validation === true )\n                ?\n                <Alert variant=\"outlined\" severity=\"error\">Please provide group name and select at least one contact!</Alert>\n                :null\n            }\n          </Grid>\n        </Grid>\n\n        <IconButtonStyles aria-label='delete' onClick={handleSaveGroupDetails}>\n          <Check />\n        </IconButtonStyles>\n\n        <ListStyled>\n          <SearchFieldStyled\n            id='input-with-icon-textfield'\n            variant='outlined'\n            fullWidth\n            size='small'\n            onKeyUp={handleOnChange}\n            autoComplete=\"off\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position='start'>\n                  <Search />\n                </InputAdornment>\n              )\n            }}\n          />\n        \n            {/* To check all checkboxes */}\n            <div>\n                <React.Fragment>\n                    <ListItemStyled button>\n                        <ListItemAvatar>\n                            Select All Contacts\n                        </ListItemAvatar>\n                        <ListItemSecondaryAction>\n                            <Checkbox edge='end' style={{ marginRight: 0, color: '#17baff' }} onClick={handleSelectAllContact} checked={isAllContactSelected} />\n                        </ListItemSecondaryAction>\n                    </ListItemStyled>\n                    <Divider variant='inset' component='li' />\n                </React.Fragment>\n            </div>\n            {loading && <CircularSpinner />}\n\n            {\n                    ( contactList && ( contactList.length > 0 ) )\n                    ?\n                    contactList.map((contact, contactIndex) => \n                        ( contact.contact_type === 'individual' )\n                        ?\n                        <React.Fragment key={contactIndex}>\n                            <ListItemStyled key={value} button>\n                            <ListItemAvatar>\n                                <AvatarShareStyled alt='semy Sharp' src={contact.profile_image} />\n                            </ListItemAvatar>\n                            <ListItemText primary={contact.first_name + ' ' + contact.last_name} />\n                            <ListItemSecondaryAction>\n                                <Checkbox\n                                edge='end'\n                                onChange={handleToggle(contactIndex, contact)}\n                                checked={checked.indexOf(contactIndex) !== -1}\n                                style={{ marginRight: 0, color: '#17baff' }}\n                                />\n                            </ListItemSecondaryAction>\n                            </ListItemStyled>\n                            <Divider variant='inset' component='li' />\n                        </React.Fragment>\n                        :\n                        null\n                    )\n                    :\n                    null\n                }\n        </ListStyled>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.liveChatReducer.loading,\n        contacts: state.liveChatReducer.contacts\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createGroup: (data) => dispatch(createGroup(data))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfirmationDialogRaw)"]},"metadata":{},"sourceType":"module"}