{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/Contacts/Modal/index.js\";\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, Typography, TextField, InputAdornment, Grid, List, ListItem, ListItemAvatar, ListItemText, Avatar, Divider, ListItemSecondaryAction, Checkbox, MenuItem, FormHelperText, FormControl, FormControlLabel } from '@material-ui/core';\nimport React, { useEffect, useState, useMemo } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LocalSee from '@material-ui/icons/LocalSee';\nimport Search from '@material-ui/icons/Search';\nimport Check from '@material-ui/icons/Check';\nimport Add from '@material-ui/icons/Add';\nimport { getContactlist, addNewGroup, updateGroup } from '../../../store/actions/contactActions';\nimport { withSnackbar } from 'notistack';\nimport FileBase64 from 'react-file-base64';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport CircularSpinner from '../../../component/CircularSpinner';\nimport PropTypes from 'prop-types';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nconst currencies = [{\n  value: 'all',\n  label: 'All Contacts'\n}, {\n  value: 'contact',\n  label: 'Contact'\n}, {\n  value: 'groups',\n  label: 'Groups'\n}];\nconst CloseButton = styled(IconButton)({\n  position: 'absolute',\n  right: 0,\n  top: 0\n});\nconst DialogTitleStyled = styled(DialogTitle)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 24px',\n  marginBottom: 20\n});\nconst TypoPopHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600'\n}));\nconst SearchFieldStyled = styled(TextField)(({\n  theme\n}) => ({\n  paddingTop: 10,\n  paddingBottom: 10,\n  '& div': {\n    height: 50\n  }\n}));\nconst ListItemStyled = styled(ListItem)(({\n  theme\n}) => ({\n  borderRadius: 8\n}));\nconst AvatarShareStyled = styled(Avatar)({\n  height: 50,\n  width: 50,\n  marginRight: 10\n});\nconst TypoListSubtext = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 14,\n  color: theme.palette.secondary.contrastText\n}));\nconst ListStyled = styled(List)(({\n  theme\n}) => ({\n  maxHeight: 550,\n  overflow: 'auto',\n  backgroundColor: '#f4f9fa',\n  margin: '0 -24px',\n  padding: '0 10px',\n  marginTop: 30,\n  paddingTop: 20\n}));\nconst ButtonSuccess = styled(Button)(({\n  theme\n}) => ({\n  background: '#00d264',\n  color: theme.palette.success.contrastText\n}));\nconst AvatarImageStyle = styled(Avatar)(({\n  theme\n}) => ({\n  height: 140,\n  width: 140,\n  backgroundColor: '#e5e5e5'\n})); // const TextFieldStyled = styled(TextField)(({ theme }) => ({\n//   '& div': {\n//     height: 56,\n//     padding: 0,\n//     marginTop: 30,\n//     textIndent: 14\n//   }\n// }));\n\nconst BoxAvtarStyled = styled(Box)(() => ({\n  position: 'relative',\n  height: 130,\n  width: 130\n}));\nconst AvatarStyled = styled(Avatar)(() => ({\n  height: 130,\n  width: 130\n}));\nconst IconButtonStyles = styled(IconButton)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.primary.main,\n  color: '#fff',\n  position: 'absolute',\n  right: 20,\n  zIndex: 9,\n  marginTop: 6\n}));\nconst IconAvtarButton = styled(IconButton)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.primary.main,\n  color: '#fff',\n  position: 'absolute',\n  right: 0,\n  zIndex: 9,\n  bottom: 0,\n  borderRadius: '60%',\n  width: 32,\n  height: 32,\n  textAlign: 'center',\n  lineHeight: '41px'\n}));\nconst useStyles = makeStyles(theme => ({\n  nameMobile: {\n    display: 'block',\n    flexDirection: 'column'\n  }\n}));\n\nconst CreateNewGroup = props => {\n  const classes = useStyles();\n  const {\n    user_id,\n    business_code\n  } = JSON.parse(localStorage.getItem('userData'));\n  const formFields = {\n    group_id: '',\n    user_id,\n    group_icon: '',\n    group_members: '',\n    group_name: ''\n  };\n  const {\n    contactlist,\n    getContactlist,\n    loading,\n    addNewGroup,\n    updateGroup,\n    usercontactlist,\n    DetailView,\n    success_message,\n    enqueueSnackbar,\n    grouplist\n  } = props;\n  const [values, setValues] = useState(formFields);\n  const [checked, setChecked] = React.useState([]);\n  const {\n    onClose,\n    value: valueProp,\n    open,\n    ...other\n  } = props;\n  const [value, setValue] = useState(valueProp);\n  const [ContactList, setContactList] = useState([]);\n  const [addUsersId, setaddUsersId] = useState([]);\n  const [is_private, setIsPrivate] = useState(0);\n  const [memberchecked, setMemberchecked] = useState([]);\n  const [searchvalue, setSearchvalue] = useState('');\n  const [files, setFiles] = useState();\n  const [image, setimage] = useState('');\n  const [filesErr, setFilesErr] = useState('');\n  const [checkErr, setCheckErr] = useState('');\n  const [isAllMember, setIsAllMember] = useState(false);\n  const [formvalidation, setFormvalidation] = useState({\n    group_icon: '',\n    group_members: '',\n    group_name: ''\n  });\n  const [formvalues, setFormvalues] = useState(formFields);\n\n  const handleCancel = () => {\n    setValue(false);\n    onClose(!open);\n    setFilesErr('');\n    setCheckErr('');\n    const data = {\n      group_icon: '',\n      group_members: '',\n      group_name: ''\n    };\n    setFormvalidation(data);\n    const grouValues = {\n      group_id: '',\n      user_id,\n      group_icon: '',\n      group_members: '',\n      group_name: ''\n    };\n    setValues(grouValues);\n    setChecked([]); // setFilesErr('');\n\n    setimage('');\n  };\n\n  const getFiles = files => {\n    // debugger\n    setFilesErr('');\n    var extn = files.name.split('.');\n    var etn = ['jpg', 'jpeg', 'png'];\n    var low = extn[1].toLowerCase();\n\n    if (etn.includes(low)) {\n      setFiles(files);\n      setimage(files.base64);\n      var image = files.base64.replace(/^data:image\\/\\w+;base64,/, '');\n      setValues({ ...values,\n        group_icon: image\n      });\n    } else {\n      setFilesErr('This file not supportted');\n      setValues({ ...values,\n        group_icon: ''\n      });\n    }\n  };\n\n  useMemo(() => {\n    setSearchvalue('');\n    setContactList(usercontactlist);\n  }, [open]);\n  useMemo(() => {\n    if (DetailView !== null) {\n      setIsPrivate(DetailView.is_private);\n\n      for (var x in DetailView) {\n        values[x] = DetailView[x];\n      }\n\n      if (values.group_members) {\n        setChecked(values.group_members.split(','));\n      } else {\n        setChecked([]);\n      }\n    } else {\n      setFiles('');\n      setChecked([]);\n      setValues(formFields);\n    }\n  }, [DetailView]);\n  useMemo(() => {\n    success_message && enqueueSnackbar(success_message, {\n      variant: 'success'\n    });\n  }, [success_message]);\n\n  const handleChange = prop => e => {\n    // const form = { ...formvalues };\n    // const formerr = { ...formvalidation };\n    // form[event.target.name] = event.target.value;\n    // formerr[event.target.name] = '';\n    const formvalue = { ...formvalues\n    };\n    const formvalidations = { ...formvalidation\n    };\n    const fieldName = e.target.name;\n    var fieldValue = '';\n    formvalidations[fieldName] = ''; // if (formvalue[fieldName] == '') {\n    //   fieldValue = e.target.value\n    // }\n\n    formvalue[fieldName] = e.target.value;\n    setValues(formvalue);\n    setFormvalidation(formvalidations);\n  };\n\n  const handleToggle = value => () => {\n    setaddUsersId(value);\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    values.group_members = newChecked.toString();\n    setCheckErr('');\n  };\n\n  console.log('checked-', checked);\n\n  const handleAllMembersToggle = value => {\n    const newChecked = [...value];\n    setChecked(newChecked);\n    console.log('memberchecked-', memberchecked);\n  };\n\n  const handleSelectMember = () => {\n    setIsAllMember(!isAllMember); //  console.warn('isAllMember111', isAllMember);\n\n    if (!isAllMember) {\n      filtered.map((data, i) => {\n        if (memberchecked.indexOf(data.user_id) == -1) {\n          memberchecked.push(data.user_id);\n        }\n      });\n    } else {\n      memberchecked.splice(0, memberchecked.length);\n    }\n\n    console.warn('memberchecked333', memberchecked);\n    handleAllMembersToggle(memberchecked);\n  };\n\n  const handleSubmit = e => {\n    // debugger\n    e.preventDefault();\n    const dataTosend = {\n      user_id,\n      business_code\n    }; // console.log('checked====',checked);\n    // return false;\n\n    values.group_members = checked.toString();\n    if (handlevalidation()) return false;\n\n    if (values.group_id !== '') {\n      if (files == '') {\n        const data_to_update = {\n          group_id: values.group_id,\n          group_members: checked.toString(),\n          group_name: values.group_name.trim(),\n          user_id,\n          is_private\n        };\n        updateGroup(data_to_update, dataTosend);\n      } else {\n        const data_to_update = {\n          group_icon: files.base64.replace(/^data:image\\/\\w+;base64,/, ''),\n          group_id: values.group_id,\n          group_members: checked.toString(),\n          group_name: values.group_name.trim(),\n          user_id,\n          is_private\n        };\n        updateGroup(data_to_update, dataTosend);\n      }\n    } else {\n      if (values.group_name != '') {\n        values.group_name = values.group_name.trim();\n\n        if (values.group_name.length > 0) {\n          if (files == '') {\n            const data_to_update = {\n              // group_id: values.group_id,\n              group_members: checked.toString(),\n              group_name: values.group_name.trim(),\n              user_id,\n              is_private\n            };\n            console.log('data_to_update====', data_to_update);\n            addNewGroup(data_to_update, dataTosend);\n          } else {\n            const data_to_update = {\n              group_icon: files.base64.replace(/^data:image\\/\\w+;base64,/, ''),\n              // group_id: values.group_id,\n              group_members: checked.toString(),\n              group_name: values.group_name.trim(),\n              user_id,\n              is_private\n            };\n            addNewGroup(data_to_update, dataTosend);\n          }\n        }\n      }\n    }\n\n    handleCancel();\n    setIsAllMember(!isAllMember);\n  };\n\n  const handleChangeCheck = e => {\n    if (e.target.checked == 1) {\n      setIsPrivate(1);\n    } else {\n      setIsPrivate(0);\n    }\n  };\n\n  const handlevalidation = () => {\n    // debugger\n    let error = false;\n    const formerr = { ...formvalidation\n    };\n    console.log(grouplist); // grouplist.map((item) => {\n    //   if (item.group_name.toUpperCase() === values.group_name.toUpperCase()) {\n    //     error = true;\n    //     formerr.group_name = 'Group with this name is already added!';\n    //     setFormvalidation(formerr);\n    //   }\n    // })\n    // if (!values.group_icon) {\n    //   error = true;\n    //   setFilesErr('Group icon is required');\n    // }\n    // if (!values.group_members) {\n    //   error = true;\n    //   setCheckErr('Group members are required!');\n    // }\n\n    if (!values.group_name) {\n      error = true;\n      formerr.group_name = 'Group name is required!';\n      setFormvalidation(formerr);\n    } // debugger\n\n\n    if (values.group_name.trim() == '') {\n      error = true;\n      formerr.group_name = 'Please enter valid Group name';\n      setFormvalidation(formerr);\n    }\n\n    return error;\n  };\n\n  useEffect(() => {\n    const dataTosend = {\n      user_id,\n      business_code\n    };\n    getContactlist(dataTosend);\n    setContactList(usercontactlist);\n  }, []);\n  const [currency, setCurrency] = React.useState('all');\n\n  const handlesearch = e => {\n    setSearchvalue(e.target.value);\n    let filteredByname = [];\n    filteredByname = usercontactlist.filter(suggestion1 => suggestion1.first_name.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1 || suggestion1.last_name.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1 || suggestion1.mobile_no.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1);\n\n    if (filteredByname.length == 0) {\n      filteredByname.push({\n        user_id: 0,\n        first_name: 'No record found',\n        last_name: '',\n        profile_image: ''\n      });\n    }\n\n    setContactList(filteredByname);\n    setChecked(values.group_members.split(','));\n  };\n\n  console.log('ContactList=====', ContactList);\n  let filtered = [];\n\n  if (ContactList.length > 0) {\n    filtered = ContactList.filter(a => a.accept_status == 1);\n  }\n\n  console.log('filtered=====', filtered);\n  const Rymindrlist = filtered.length > 0 ? filtered.map(item => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItemStyled, {\n    key: value,\n    button: true,\n    onClick: handleToggle(item.user_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 13\n    }\n  }, item.user_id !== 0 ? /*#__PURE__*/React.createElement(AvatarShareStyled, {\n    alt: \"semy Sharp\",\n    src: item.profile_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 37\n    }\n  }) : null), /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.nameMobile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.first_name ? item.first_name + ' ' + item.last_name : item.group_name ? item.group_name : item.mobile_no ? item.mobile_no : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: item.mobile_no,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 13\n    }\n  }, item.user_id !== 0 ? /*#__PURE__*/React.createElement(Checkbox, {\n    edge: \"end\",\n    onChange: handleToggle(item.user_id),\n    checked: checked.indexOf(item.user_id) !== -1,\n    style: {\n      marginRight: 0,\n      color: '#17baff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 17\n    }\n  }) : '')), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 11\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h6\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }\n  }, \"No Contacts Found\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    fullWidth: true,\n    maxWidth: \"md\",\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitleStyled, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TypoPopHeadStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 15\n    }\n  }, \"Create group\"), /*#__PURE__*/React.createElement(IconButton, {\n    color: \"default\",\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BoxAvtarStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AvatarStyled, {\n    alt: \"Remy Sharp\",\n    src: image || values.group_icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: \"attachement\",\n    id: \"icon-button-file\",\n    control: /*#__PURE__*/React.createElement(FileBase64, {\n      accept: \"image/*\",\n      name: \"group_icon\",\n      onDone: getFiles,\n      onChange: handleChange('group_icon'),\n      className: \"displayNone\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 25\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(IconAvtarButton, {\n      color: \"primary\",\n      \"aria-label\": \"upload picture\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PhotoCamera, {\n      color: \"inherit\",\n      fontSize: \"small\",\n      style: {\n        fontSize: '19px',\n        position: 'relative',\n        bottom: '4px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 27\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    error: !!filesErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 23\n    }\n  }, \" \", filesErr, \" \")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Group Name\",\n    variant: \"outlined\",\n    onChange: handleChange('group_name'),\n    value: values.group_name,\n    name: \"group_name\",\n    error: formvalidation.group_name !== '',\n    helperText: formvalidation.group_name,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(SearchFieldStyled, {\n    id: \"input-with-icon-textfield\",\n    variant: \"outlined\",\n    fullWidth: true,\n    size: \"small\",\n    value: searchvalue,\n    onChange: handlesearch,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 23\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 15\n    }\n  }), console.log('private -', is_private), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: is_private,\n      onChange: handleChangeCheck,\n      name: \"isPrivate\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 21\n      }\n    }),\n    label: \"Private Group.\",\n    style: {\n      marginTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      bottom: '10px',\n      left: '30px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 19\n    }\n  }, \"Checking this will ensure your mobile contacts will not be able to add themselves to this group.\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Select All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    edge: \"end\",\n    onChange: handleSelectMember,\n    checked: isAllMember // inputProps={{ 'aria-labelledby': labelId }}\n    ,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(IconButtonStyles, {\n    \"aria-label\": \"delete\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Check, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ListStyled, {\n    style: {\n      background: 'primary'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 15\n    }\n  }, Rymindrlist)))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.contact.loading,\n    error: state.contact.error,\n    contactlist: state.contact.contactlist,\n    contactGroupMemberlist: state.contact.contactGroupMemberlist,\n    grouplist: state.contact.grouplist,\n    usercontactlist: state.contact.usercontactlist,\n    groupdeletemessage: state.contact.groupdeletemessage,\n    success_message: state.contact.success_message\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getContactlist: data => dispatch(getContactlist(data)),\n    addNewGroup: (data, dataTosend) => dispatch(addNewGroup(data, dataTosend)),\n    updateGroup: (data, dataTosend) => dispatch(updateGroup(data, dataTosend))\n  };\n};\n\nCreateNewGroup.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  getContactlist: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  addNewGroup: PropTypes.func.isRequired,\n  updateGroup: PropTypes.func.isRequired,\n  enqueueSnackbar: PropTypes.func.isRequired,\n  success_message: PropTypes.any.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(CreateNewGroup));","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/Contacts/Modal/index.js"],"names":["Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","Typography","TextField","InputAdornment","Grid","List","ListItem","ListItemAvatar","ListItemText","Avatar","Divider","ListItemSecondaryAction","Checkbox","MenuItem","FormHelperText","FormControl","FormControlLabel","React","useEffect","useState","useMemo","CloseIcon","LocalSee","Search","Check","Add","getContactlist","addNewGroup","updateGroup","withSnackbar","FileBase64","PhotoCamera","CircularSpinner","PropTypes","makeStyles","styled","connect","currencies","value","label","CloseButton","position","right","top","DialogTitleStyled","borderBottom","padding","marginBottom","TypoPopHeadStyled","theme","color","palette","secondary","contrastText","fontSize","fontWeight","SearchFieldStyled","paddingTop","paddingBottom","height","ListItemStyled","borderRadius","AvatarShareStyled","width","marginRight","TypoListSubtext","ListStyled","maxHeight","overflow","backgroundColor","margin","marginTop","ButtonSuccess","background","success","AvatarImageStyle","BoxAvtarStyled","AvatarStyled","IconButtonStyles","primary","main","zIndex","IconAvtarButton","bottom","textAlign","lineHeight","useStyles","nameMobile","display","flexDirection","CreateNewGroup","props","classes","user_id","business_code","JSON","parse","localStorage","getItem","formFields","group_id","group_icon","group_members","group_name","contactlist","loading","usercontactlist","DetailView","success_message","enqueueSnackbar","grouplist","values","setValues","checked","setChecked","onClose","valueProp","open","other","setValue","ContactList","setContactList","addUsersId","setaddUsersId","is_private","setIsPrivate","memberchecked","setMemberchecked","searchvalue","setSearchvalue","files","setFiles","image","setimage","filesErr","setFilesErr","checkErr","setCheckErr","isAllMember","setIsAllMember","formvalidation","setFormvalidation","formvalues","setFormvalues","handleCancel","data","grouValues","getFiles","extn","name","split","etn","low","toLowerCase","includes","base64","replace","x","variant","handleChange","prop","e","formvalue","formvalidations","fieldName","target","fieldValue","handleToggle","currentIndex","indexOf","newChecked","push","splice","toString","console","log","handleAllMembersToggle","handleSelectMember","filtered","map","i","length","warn","handleSubmit","preventDefault","dataTosend","handlevalidation","data_to_update","trim","handleChangeCheck","error","formerr","currency","setCurrency","handlesearch","filteredByname","filter","suggestion1","first_name","last_name","mobile_no","profile_image","a","accept_status","Rymindrlist","item","startAdornment","left","mapStateToProps","state","contact","contactGroupMemberlist","groupdeletemessage","mapDispatchToProps","dispatch","propTypes","func","isRequired","bool","string","any"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Typography,\n  TextField,\n  InputAdornment,\n  Grid,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Divider,\n  ListItemSecondaryAction,\n  Checkbox,\n  MenuItem,\n  FormHelperText,\n  FormControl,\n  FormControlLabel,\n} from '@material-ui/core';\nimport React, { useEffect, useState, useMemo } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LocalSee from '@material-ui/icons/LocalSee';\nimport Search from '@material-ui/icons/Search';\nimport Check from '@material-ui/icons/Check';\nimport Add from '@material-ui/icons/Add';\nimport { getContactlist, addNewGroup, updateGroup } from '../../../store/actions/contactActions';\nimport { withSnackbar } from 'notistack';\nimport FileBase64 from 'react-file-base64';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport CircularSpinner from '../../../component/CircularSpinner';\n\nimport PropTypes from 'prop-types';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\n\nconst currencies = [\n  {\n    value: 'all',\n    label: 'All Contacts',\n  },\n  {\n    value: 'contact',\n    label: 'Contact',\n  },\n  {\n    value: 'groups',\n    label: 'Groups',\n  },\n];\n\nconst CloseButton = styled(IconButton)({\n  position: 'absolute',\n  right: 0,\n  top: 0,\n});\n\nconst DialogTitleStyled = styled(DialogTitle)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 24px',\n  marginBottom: 20,\n});\n\nconst TypoPopHeadStyled = styled(Typography)(({ theme }) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600',\n}));\n\nconst SearchFieldStyled = styled(TextField)(({ theme }) => ({\n  paddingTop: 10,\n  paddingBottom: 10,\n  '& div': { height: 50 },\n}));\n\nconst ListItemStyled = styled(ListItem)(({ theme }) => ({\n  borderRadius: 8,\n}));\n\nconst AvatarShareStyled = styled(Avatar)({\n  height: 50,\n  width: 50,\n  marginRight: 10,\n});\n\nconst TypoListSubtext = styled(Typography)(({ theme }) => ({\n  fontSize: 14,\n  color: theme.palette.secondary.contrastText,\n}));\n\nconst ListStyled = styled(List)(({ theme }) => ({\n  maxHeight: 550,\n  overflow: 'auto',\n  backgroundColor: '#f4f9fa',\n  margin: '0 -24px',\n  padding: '0 10px',\n  marginTop: 30,\n  paddingTop: 20,\n}));\n\nconst ButtonSuccess = styled(Button)(({ theme }) => ({\n  background: '#00d264',\n  color: theme.palette.success.contrastText,\n}));\n\nconst AvatarImageStyle = styled(Avatar)(({ theme }) => ({\n  height: 140,\n  width: 140,\n  backgroundColor: '#e5e5e5',\n}));\n\n// const TextFieldStyled = styled(TextField)(({ theme }) => ({\n//   '& div': {\n//     height: 56,\n//     padding: 0,\n//     marginTop: 30,\n//     textIndent: 14\n//   }\n// }));\n\nconst BoxAvtarStyled = styled(Box)(() => ({\n  position: 'relative',\n  height: 130,\n  width: 130,\n}));\n\nconst AvatarStyled = styled(Avatar)(() => ({\n  height: 130,\n  width: 130,\n}));\nconst IconButtonStyles = styled(IconButton)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  color: '#fff',\n  position: 'absolute',\n  right: 20,\n  zIndex: 9,\n  marginTop: 6,\n}));\n\nconst IconAvtarButton = styled(IconButton)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  color: '#fff',\n  position: 'absolute',\n  right: 0,\n  zIndex: 9,\n  bottom: 0,\n  borderRadius: '60%',\n  width: 32,\n  height: 32,\n  textAlign: 'center',\n  lineHeight: '41px',\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  nameMobile: {\n    display: 'block',\n    flexDirection: 'column',\n  },\n}));\n\nconst CreateNewGroup = (props) => {\n  const classes = useStyles();\n  const { user_id, business_code } = JSON.parse(localStorage.getItem('userData'));\n  const formFields = {\n    group_id: '',\n    user_id,\n    group_icon: '',\n    group_members: '',\n    group_name: '',\n  };\n\n  const {\n    contactlist,\n    getContactlist,\n    loading,\n    addNewGroup,\n    updateGroup,\n    usercontactlist,\n    DetailView,\n    success_message,\n    enqueueSnackbar,\n    grouplist,\n  } = props;\n  const [values, setValues] = useState(formFields);\n\n  const [checked, setChecked] = React.useState([]);\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = useState(valueProp);\n  const [ContactList, setContactList] = useState([]);\n  const [addUsersId, setaddUsersId] = useState([]);\n  const [is_private, setIsPrivate] = useState(0);\n  const [memberchecked, setMemberchecked] = useState([]);\n\n  const [searchvalue, setSearchvalue] = useState('');\n  const [files, setFiles] = useState();\n  const [image, setimage] = useState('');\n\n  const [filesErr, setFilesErr] = useState('');\n  const [checkErr, setCheckErr] = useState('');\n  const [isAllMember, setIsAllMember] = useState(false)\n  const [formvalidation, setFormvalidation] = useState({\n    group_icon: '',\n    group_members: '',\n    group_name: '',\n  });\n  const [formvalues, setFormvalues] = useState(formFields);\n\n  const handleCancel = () => {\n    setValue(false);\n    onClose(!open);\n    setFilesErr('');\n    setCheckErr('');\n    const data = {\n      group_icon: '',\n      group_members: '',\n      group_name: '',\n    };\n    setFormvalidation(data);\n    const grouValues = {\n      group_id: '',\n      user_id,\n      group_icon: '',\n      group_members: '',\n      group_name: '',\n    };\n    setValues(grouValues);\n    setChecked([]);\n    // setFilesErr('');\n    setimage('');\n  };\n  const getFiles = (files) => {\n    // debugger\n    setFilesErr('');\n    var extn = files.name.split('.');\n    var etn = ['jpg', 'jpeg', 'png'];\n\n    var low = extn[1].toLowerCase();\n    if (etn.includes(low)) {\n      setFiles(files);\n      setimage(files.base64);\n\n      var image = files.base64.replace(/^data:image\\/\\w+;base64,/, '');\n      setValues({ ...values, group_icon: image });\n    } else {\n      setFilesErr('This file not supportted');\n      setValues({ ...values, group_icon: '' });\n    }\n  };\n\n  useMemo(() => {\n    setSearchvalue('');\n    setContactList(usercontactlist);\n  }, [open]);\n\n  useMemo(() => {\n    if (DetailView !== null) {\n      setIsPrivate(DetailView.is_private);\n      for (var x in DetailView) {\n        values[x] = DetailView[x];\n      }\n      if (values.group_members) {\n        setChecked(values.group_members.split(','));\n      } else {\n        setChecked([]);\n      }\n    } else {\n      setFiles('');\n      setChecked([]);\n      setValues(formFields);\n    }\n  }, [DetailView]);\n  useMemo(() => {\n    success_message && enqueueSnackbar(success_message, { variant: 'success' });\n  }, [success_message]);\n  const handleChange = (prop) => (e) => {\n    // const form = { ...formvalues };\n    // const formerr = { ...formvalidation };\n    // form[event.target.name] = event.target.value;\n    // formerr[event.target.name] = '';\n    const formvalue = { ...formvalues };\n    const formvalidations = { ...formvalidation };\n    const fieldName = e.target.name;\n    var fieldValue = '';\n    formvalidations[fieldName] = '';\n    // if (formvalue[fieldName] == '') {\n    //   fieldValue = e.target.value\n    // }\n    formvalue[fieldName] = e.target.value;\n    setValues(formvalue);\n    setFormvalidation(formvalidations);\n  };\n  const handleToggle = (value) => () => {\n    setaddUsersId(value);\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    values.group_members = newChecked.toString();\n    setCheckErr('');\n  };\nconsole.log('checked-',checked)\n  const handleAllMembersToggle = (value) => {\n    const newChecked = [...value];\n    setChecked(newChecked);\n    console.log('memberchecked-', memberchecked);\n  };\n\n  const handleSelectMember = () => {\n    setIsAllMember(!isAllMember)\n  //  console.warn('isAllMember111', isAllMember);\n    if(!isAllMember) {\n      filtered.map((data, i) => {\n        if(memberchecked.indexOf(data.user_id) == -1) {\n          memberchecked.push(data.user_id)\n        }\n      })\n    }\n    else {\n      memberchecked.splice(0, memberchecked.length)\n    }\n    console.warn('memberchecked333', memberchecked);\n    handleAllMembersToggle(memberchecked)\n  }\n\n  const handleSubmit = (e) => {\n    // debugger\n\n    e.preventDefault();\n    const dataTosend = {\n      user_id,\n      business_code,\n    };\n    // console.log('checked====',checked);\n    // return false;\n    values.group_members = checked.toString();\n    if (handlevalidation()) return false;\n\n    if (values.group_id !== '') {\n      if (files == '') {\n        const data_to_update = {\n          group_id: values.group_id,\n          group_members: checked.toString(),\n          group_name: values.group_name.trim(),\n          user_id,\n          is_private,\n        };\n        updateGroup(data_to_update, dataTosend);\n      } else {\n        const data_to_update = {\n          group_icon: files.base64.replace(/^data:image\\/\\w+;base64,/, ''),\n          group_id: values.group_id,\n          group_members: checked.toString(),\n          group_name: values.group_name.trim(),\n          user_id,\n          is_private,\n        };\n        updateGroup(data_to_update, dataTosend);\n      }\n    } else {\n      if (values.group_name != '') {\n        values.group_name = values.group_name.trim();\n        if (values.group_name.length > 0) {\n          if (files == '') {\n            const data_to_update = {\n              // group_id: values.group_id,\n              group_members: checked.toString(),\n              group_name: values.group_name.trim(),\n              user_id,\n              is_private,\n            };\n\n            console.log('data_to_update====', data_to_update);\n\n            addNewGroup(data_to_update, dataTosend);\n          } else {\n            const data_to_update = {\n              group_icon: files.base64.replace(/^data:image\\/\\w+;base64,/, ''),\n              // group_id: values.group_id,\n              group_members: checked.toString(),\n              group_name: values.group_name.trim(),\n              user_id,\n              is_private,\n            };\n            addNewGroup(data_to_update, dataTosend);\n          }\n        }\n      }\n    }\n    handleCancel();\n    setIsAllMember(!isAllMember)\n  };\n\n  const handleChangeCheck = (e) => {\n    if (e.target.checked == 1) {\n      setIsPrivate(1);\n    } else {\n      setIsPrivate(0);\n    }\n  };\n\n  const handlevalidation = () => {\n    // debugger\n    let error = false;\n    const formerr = { ...formvalidation };\n    console.log(grouplist);\n    // grouplist.map((item) => {\n    //   if (item.group_name.toUpperCase() === values.group_name.toUpperCase()) {\n    //     error = true;\n    //     formerr.group_name = 'Group with this name is already added!';\n    //     setFormvalidation(formerr);\n    //   }\n    // })\n    // if (!values.group_icon) {\n    //   error = true;\n    //   setFilesErr('Group icon is required');\n    // }\n\n    // if (!values.group_members) {\n    //   error = true;\n    //   setCheckErr('Group members are required!');\n    // }\n\n    if (!values.group_name) {\n      error = true;\n      formerr.group_name = 'Group name is required!';\n      setFormvalidation(formerr);\n    }\n    // debugger\n    if (values.group_name.trim() == '') {\n      error = true;\n      formerr.group_name = 'Please enter valid Group name';\n      setFormvalidation(formerr);\n    }\n\n    return error;\n  };\n  useEffect(() => {\n    const dataTosend = {\n      user_id,\n      business_code,\n    };\n    getContactlist(dataTosend);\n    setContactList(usercontactlist);\n  }, []);\n\n  const [currency, setCurrency] = React.useState('all');\n  const handlesearch = (e) => {\n    setSearchvalue(e.target.value);\n    let filteredByname = [];\n    filteredByname = usercontactlist.filter(\n      (suggestion1) =>\n        suggestion1.first_name.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1 ||\n        suggestion1.last_name.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1 ||\n        suggestion1.mobile_no.toLowerCase().indexOf(e.target.value.toLowerCase()) > -1\n    );\n\n    if (filteredByname.length == 0) {\n      filteredByname.push({\n        user_id: 0,\n        first_name: 'No record found',\n        last_name: '',\n        profile_image: '',\n      });\n    }\n    setContactList(filteredByname);\n    setChecked(values.group_members.split(','));\n  };\n  console.log('ContactList=====', ContactList);\n  let filtered = [];\n  if (ContactList.length > 0) {\n    filtered = ContactList.filter((a) => a.accept_status == 1);\n  }\n  console.log('filtered=====', filtered);\n  const Rymindrlist =\n    filtered.length > 0 ? (\n      filtered.map((item) => (\n        <>\n          <ListItemStyled key={value} button onClick={handleToggle(item.user_id)}>\n            <ListItemAvatar>\n              {item.user_id !== 0 ? <AvatarShareStyled alt=\"semy Sharp\" src={item.profile_image} /> : null}\n            </ListItemAvatar>\n            <ListItem className={classes.nameMobile}>\n              <ListItemText\n                primary={\n                  item.first_name\n                    ? item.first_name + ' ' + item.last_name\n                    : item.group_name\n                    ? item.group_name\n                    : item.mobile_no\n                    ? item.mobile_no\n                    : ''\n                }\n              />\n              <ListItemText primary={item.mobile_no} />\n            </ListItem>\n            <ListItemSecondaryAction>\n              {item.user_id !== 0 ? (\n                <Checkbox\n                  edge=\"end\"\n                  onChange={handleToggle(item.user_id)}\n                  checked={checked.indexOf(item.user_id) !== -1}\n                  style={{ marginRight: 0, color: '#17baff' }}\n                />\n              ) : (\n                ''\n              )}\n            </ListItemSecondaryAction>\n          </ListItemStyled>\n          <Divider variant=\"inset\" component=\"li\" />\n        </>\n      ))\n    ) : (\n      <h6 style={{ textAlign: 'center' }}>No Contacts Found</h6>\n    );\n  return (\n    <>\n        <Dialog\n          fullWidth\n          maxWidth=\"md\"\n          disableBackdropClick\n          disableEscapeKeyDown\n          aria-labelledby=\"confirmation-dialog-title\"\n          open={open}\n          {...other}\n        >\n          <DialogTitleStyled id=\"form-dialog-title\">\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n              <TypoPopHeadStyled>Create group</TypoPopHeadStyled>\n              <IconButton color=\"default\" onClick={handleCancel}>\n                <CloseIcon />\n              </IconButton>\n            </Box>\n          </DialogTitleStyled>\n          <DialogContent>\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={3} alignItems=\"center\">\n                <Grid item xs={3} justifyContent=\"center\">\n                  <BoxAvtarStyled>\n                    <AvatarStyled alt=\"Remy Sharp\" src={image || values.group_icon} />\n                    <FormControlLabel\n                      className=\"attachement\"\n                      id=\"icon-button-file\"\n                      control={\n                        <FileBase64\n                          accept=\"image/*\"\n                          name=\"group_icon\"\n                          onDone={getFiles}\n                          onChange={handleChange('group_icon')}\n                          className=\"displayNone\"\n                          style={{ display: 'none' }}\n                        />\n                      }\n                      label={\n                        <IconAvtarButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                          <PhotoCamera\n                            color=\"inherit\"\n                            fontSize=\"small\"\n                            style={{ fontSize: '19px', position: 'relative', bottom: '4px' }}\n                          />\n                        </IconAvtarButton>\n                      }\n                    />\n                    <FormControl error={!!filesErr}>\n                      <FormHelperText> {filesErr} </FormHelperText>\n                    </FormControl>\n                  </BoxAvtarStyled>\n                </Grid>\n                <Grid item xs={9}>\n                  <TextField\n                    id=\"outlined-basic\"\n                    label=\"Group Name\"\n                    variant=\"outlined\"\n                    onChange={handleChange('group_name')}\n                    value={values.group_name}\n                    name=\"group_name\"\n                    error={formvalidation.group_name !== ''}\n                    helperText={formvalidation.group_name}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n              <SearchFieldStyled\n                id=\"input-with-icon-textfield\"\n                variant=\"outlined\"\n                fullWidth\n                size=\"small\"\n                value={searchvalue}\n                onChange={handlesearch}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <Search />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              {console.log('private -', is_private)}\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Checkbox checked={is_private} onChange={handleChangeCheck} name=\"isPrivate\" color=\"primary\" />\n                  }\n                  label=\"Private Group.\"\n                  style={{ marginTop: '1rem' }}\n                />\n                <div style={{ position: 'relative', bottom: '10px', left: '30px' }}>\n                  <p>\n                    Checking this will ensure your mobile contacts will not be able to add themselves to this group.\n                  </p>\n                </div>\n              </Grid>\n              {/* <Grid item xs={8}>\n                <FormControl error={!!checkErr}>\n                  <FormHelperText>{checkErr} </FormHelperText>\n                </FormControl>\n              </Grid> */}\n              <Grid item xs={12}>\n              <ListItem button >\n            <ListItemAvatar />\n            <ListItemText primary='Select All' />\n            <ListItemSecondaryAction>\n              <Checkbox\n                edge='end'\n                onChange={handleSelectMember}\n                checked={isAllMember}\n                // inputProps={{ 'aria-labelledby': labelId }}\n                color='primary'\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n                </Grid>\n\n              <IconButtonStyles aria-label=\"delete\" onClick={handleSubmit}>\n                <Check />\n              </IconButtonStyles>\n              <ListStyled style={{ background: 'primary' }}>{Rymindrlist}</ListStyled>\n            </form>\n          </DialogContent>\n        </Dialog>\n      \n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.contact.loading,\n    error: state.contact.error,\n    contactlist: state.contact.contactlist,\n    contactGroupMemberlist: state.contact.contactGroupMemberlist,\n    grouplist: state.contact.grouplist,\n    usercontactlist: state.contact.usercontactlist,\n    groupdeletemessage: state.contact.groupdeletemessage,\n    success_message: state.contact.success_message,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getContactlist: (data) => dispatch(getContactlist(data)),\n    addNewGroup: (data, dataTosend) => dispatch(addNewGroup(data, dataTosend)),\n    updateGroup: (data, dataTosend) => dispatch(updateGroup(data, dataTosend)),\n  };\n};\nCreateNewGroup.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  getContactlist: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  addNewGroup: PropTypes.func.isRequired,\n  updateGroup: PropTypes.func.isRequired,\n  enqueueSnackbar: PropTypes.func.isRequired,\n  success_message: PropTypes.any.isRequired,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(CreateNewGroup));\n"]},"metadata":{},"sourceType":"module"}