{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  loading: false,\n  error: null,\n  dashupcomingrymindr: [],\n  TodayCount: 0\n};\n\nconst dashboardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ISLOADING:\n      return { ...state,\n        error: null,\n        loading: true\n      };\n\n    case actionTypes.ERROR:\n      return { ...state,\n        error: action.error,\n        loading: false\n      };\n\n    case actionTypes.GETUPCOMMINGRYMINDRDASHBOARD:\n      return { ...state,\n        dashupcomingrymindr: action.payload.list,\n        TodayCount: action.payload.TodayCount,\n        error: null,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default dashboardReducer;","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/store/reducers/dashboardReducer.js"],"names":["actionTypes","initialState","loading","error","dashupcomingrymindr","TodayCount","dashboardReducer","state","action","type","ISLOADING","ERROR","GETUPCOMMINGRYMINDRDASHBOARD","payload","list"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,mBAAmB,EAAE,EAHF;AAInBC,EAAAA,UAAU,EAAE;AAJO,CAArB;;AAOA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,WAAW,CAACU,SAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,KAAK,EAAE,IAFF;AAGLD,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKF,WAAW,CAACW,KAAjB;AACE,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,KAAK,EAAEK,MAAM,CAACL,KAFT;AAGLD,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKF,WAAW,CAACY,4BAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,mBAAmB,EAAEI,MAAM,CAACK,OAAP,CAAeC,IAF/B;AAGLT,QAAAA,UAAU,EAAEG,MAAM,CAACK,OAAP,CAAeR,UAHtB;AAILF,QAAAA,KAAK,EAAE,IAJF;AAKLD,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAQF;AACE,aAAOK,KAAP;AAxBJ;AA0BD,CA3BD;;AA4BA,eAAeD,gBAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  loading: false,\n  error: null,\n  dashupcomingrymindr: [],\n  TodayCount: 0,\n};\n\nconst dashboardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ISLOADING:\n      return {\n        ...state,\n        error: null,\n        loading: true,\n      };\n    case actionTypes.ERROR:\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n\n    case actionTypes.GETUPCOMMINGRYMINDRDASHBOARD:\n      return {\n        ...state,\n        dashupcomingrymindr: action.payload.list,\n        TodayCount: action.payload.TodayCount,\n        error: null,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n};\nexport default dashboardReducer;\n"]},"metadata":{},"sourceType":"module"}