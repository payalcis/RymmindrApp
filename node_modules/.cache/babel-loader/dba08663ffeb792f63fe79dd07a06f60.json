{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport Axios from '../../helper/axios';\nimport axios from 'axios';\nexport const isLoading = () => {\n  return {\n    type: actionTypes.ISLOADING\n  };\n};\nexport const Success = response => {\n  return response;\n};\nexport const Fail = error => {\n  return {\n    type: actionTypes.ERROR,\n    error: error\n  };\n};\nexport const SuccessMessage = message => {\n  return {\n    type: actionTypes.SUCCESS_MESSAGE_RYMINDR,\n    success_message: message\n  };\n};\nexport const getCategories = data => {\n  return dispatch => {\n    // dispatch(isLoading());\n    Axios().post('users/getCategoryList', data).then(response => {\n      if (response.data.status === '1') {\n        let temp = response.data.data;\n        let tempArr = [];\n        temp.map((data, i) => {\n          if (data.id != 119 && data.category_name != 'Receipts' && data.id != 39 && data.category_name != 'Warranty') {\n            tempArr.push(data);\n          }\n        });\n        dispatch(Success({\n          type: actionTypes.GETCATEGORY,\n          payload: tempArr,\n          default_cat: response.data.default_cat\n        })); //get subcategories\n\n        const dataTosend = {\n          user_id: data.user_id,\n          category_id: response.data.default_cat\n        };\n        dispatch(getSubCategories(dataTosend));\n      } else {// dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const getSubCategories = data => {\n  return dispatch => {\n    // dispatch(isLoading());\n    Axios().post('users/getCategoryList', data).then(response => {\n      if (response.data.status === '1') {\n        dispatch(Success({\n          type: actionTypes.SUBCATEGORY,\n          payload: response.data.data\n        }));\n      } else {// dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const getGroups = data => {\n  return dispatch => {\n    // dispatch(isLoading());\n    Axios().post('users/getGroupList', data).then(response => {\n      if (response.data.status === '1') {\n        dispatch(Success({\n          type: actionTypes.GROUPLIST,\n          payload: response.data.data\n        }));\n      } else {// dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const getBusinessUsers = data => {\n  return dispatch => {\n    // dispatch(isLoading());\n    Axios().post('users/businessUserList', data).then(response => {\n      if (response.data.status === '1') {\n        dispatch(Success({\n          type: actionTypes.BUSINESSUSERS,\n          payload: response.data.data\n        }));\n      } else {// dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const createRymindr = (data, unmatch, history, sendAttachment) => {\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const {\n        user_id,\n        business_code,\n        first_name,\n        last_name\n      } = JSON.parse(localStorage.getItem('userData'));\n      const qiscusId = ''; //getqiscusId.data.results.room.room_id;\n\n      const dataTosend = { ...data\n      };\n      dataTosend.qiscus_id = qiscusId;\n      const response = await Axios().post('users/create_quick_rymindr', dataTosend);\n\n      if (response.data.status === '1') {\n        const rymindr_id = response.data.data.id;\n        let inviteTorymidr = {\n          mobile_no: unmatch,\n          rymindr_id: rymindr_id,\n          user_id: user_id,\n          user_name: first_name + ' ' + last_name,\n          business_code: business_code,\n          qiscuss: qiscusId,\n          rymind_type: data.rymind_type\n        };\n        let seldFiles = [];\n\n        if (sendAttachment) {\n          var img = sendAttachment;\n          var len = img.length;\n\n          for (var i = 0; i < len; i++) {\n            if (img[i].type == 'application/pdf') {\n              var image = img[i].base64.split(';base64,');\n              var image = image[1];\n              var extn = img[i].name.split('.');\n            } else if (img[i].type == '') {\n              var image = img[i].base64.split(';base64,');\n              var image = image[1];\n              var extn = img[i].name.split('.');\n            } else {\n              var image = img[i].base64.replace(/^data:image\\/\\w+;base64,/, '');\n              var extn = img[i].name.split('.');\n            }\n\n            const att_data = {\n              attachment: image,\n              //recr_rymindr_id: rymindr_id,\n              //user_id: user_id,\n              extn: extn[1]\n            };\n            seldFiles.push(att_data); //await Axios().post('users/rymindrDesktopAttachment', att_data);\n          }\n        }\n\n        if (unmatch) {\n          const sendInvitation = await Axios().post('users/inviteForRymindr', inviteTorymidr);\n        }\n\n        let dateTosend = {\n          recr_rymindr_id: rymindr_id,\n          user_id: user_id,\n          sendAttachment: seldFiles,\n          deleteAttachment: []\n        };\n        console.log('dateTosend=====', dateTosend);\n        await Axios().post('users/rymindrDesktopAttachment', dateTosend);\n        dispatch(Success({\n          type: actionTypes.CREATERYMINDR,\n          payload: response.data.data\n        }));\n        dispatch(SuccessMessage('Rymindr has been created sucessfully.'));\n        history.push('/rymindrs');\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    } finally {\n      dispatch(SuccessMessage(null));\n      dispatch(Fail(null));\n    }\n  };\n};\nexport const editRymindr = (data, history, sendAttachment, deleteAttachment) => {\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const {\n        user_id,\n        business_code,\n        first_name,\n        last_name\n      } = JSON.parse(localStorage.getItem('userData'));\n      const response = await Axios().post('users/updateQuickRymindr', data);\n\n      if (response.data.status === '1') {\n        const rymindr_id = data.rymindr_id;\n        let seldFiles = [];\n\n        if (sendAttachment) {\n          var img = sendAttachment;\n          var len = img.length;\n\n          for (var i = 0; i < len; i++) {\n            if (img[i].base64 != undefined) {\n              if (img[i].type == 'application/pdf') {\n                var image = img[i].base64.split(';base64,');\n                var image = image[1];\n                var extn = img[i].name.split('.');\n              } else if (img[i].type == '') {\n                var image = img[i].base64.split(';base64,');\n                var image = image[1];\n                var extn = img[i].name.split('.');\n              } else {\n                var image = img[i].base64.replace(/^data:image\\/\\w+;base64,/, '');\n                var extn = img[i].name.split('.');\n              }\n\n              const att_data = {\n                attachment: image,\n                extn: extn[1]\n              };\n              seldFiles.push(att_data); //await Axios().post('users/rymindrDesktopAttachment', att_data);\n            }\n          }\n        }\n\n        let dateTosend = {\n          recr_rymindr_id: rymindr_id,\n          user_id: user_id,\n          sendAttachment: seldFiles,\n          deleteAttachment: deleteAttachment\n        };\n        console.log('dateTosend=====', dateTosend);\n        await Axios().post('users/rymindrDesktopAttachment', dateTosend);\n        dispatch(Success({\n          type: actionTypes.EDITRYMINDR,\n          payload: response.data.data\n        }));\n        dispatch(SuccessMessage('Rymindr has been updated sucessfully.'));\n        history.push('/rymindrs');\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    } finally {\n      dispatch(SuccessMessage(null));\n      dispatch(Fail(null));\n    }\n  };\n};\nexport const generateQrCodeDB = (data, history) => {\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const {\n        user_id,\n        business_code,\n        first_name,\n        last_name\n      } = JSON.parse(localStorage.getItem('userData'));\n      const dataTosend = { ...data\n      };\n      const response = await Axios().post('users/generateRymindrQrCode', dataTosend);\n      console.warn('respons55555e', response);\n\n      if (response.status == 200) {\n        dispatch(Success({\n          type: actionTypes.GENERATEQRCODE,\n          payload: response.data.tbl_rymindr\n        }));\n        dispatch(SuccessMessage('QR Code has been created sucessfully.'));\n        history.push('/rymindrs');\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    } finally {\n      dispatch(SuccessMessage(null));\n      dispatch(Fail(null));\n    }\n  };\n};\nexport const statusData = data => {\n  return async dispatch => {\n    try {\n      const {\n        user_id,\n        business_code,\n        first_name,\n        last_name\n      } = JSON.parse(localStorage.getItem('userData'));\n      const dataTosend = { ...data\n      };\n      const response = await Axios().post('user/rymindrStatus', dataTosend);\n\n      if (response.status == 200) {\n        dispatch(Success({\n          type: actionTypes.STATUSDATA,\n          payload: response.data.data\n        }));\n        console.log('response.data.data', response.data.data);\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    } finally {\n      dispatch(SuccessMessage(null));\n      dispatch(Fail(null));\n    }\n  };\n};\nexport const inviteAndAddMobile = data => {\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const response = await Axios().post('users/inviteAndAddMobile', data);\n\n      if (response.data.status === '1') {\n        dispatch(Success({\n          type: actionTypes.INVITEANDADDMOBILE,\n          payload: response.data.data\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\nexport const getUpcommingRymindrs = data => {\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const response = await Axios().post('users/getUpcommingRymindr', data);\n\n      if (response.data.status === '1') {\n        const record = response.data.data;\n        let upcomingry = [];\n        record.forEach(item => {\n          upcomingry.push(item.remindr);\n        });\n        console.log('data', data);\n        var merged = [].concat.apply([], upcomingry);\n        let reqData = {};\n\n        if (record.length > 0) {\n          if (merged[0].rymindr_type == 'Holiday' && merged[0].is_bank_holiday == 1) {\n            reqData = {\n              user_id: data.user_id,\n              rymindr_id: merged[0].id,\n              is_page: 'history',\n              is_bank_holiday: 1\n            };\n          } else {\n            reqData = {\n              user_id: data.user_id,\n              rymindr_id: merged[0].rymindr_id,\n              is_page: 'history'\n            };\n          }\n\n          dispatch(getRymidrDetails(reqData));\n        } else {\n          dispatch(Success({\n            type: actionTypes.GETRYMINDRDETAILS,\n            payload: null\n          }));\n        }\n\n        dispatch(Success({\n          type: actionTypes.GETUPCOMMINGRYMINDR,\n          payload: {\n            record,\n            upcomingList: merged.length > 0 ? merged : []\n          }\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\nexport const getHistoryRymindrs = data => {\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const response = await Axios().post('users/getHistoryRymindr', data);\n      console.log('response====', response);\n\n      if (response.data.status === '1') {\n        const record = response.data.data;\n        const all_rymindrids = response.data.rymindrid;\n        let upcomingry = [];\n        record.forEach(item => {\n          upcomingry.push(item.remindr);\n        });\n        var merged = [].concat.apply([], upcomingry);\n\n        if (data.selected_id) {\n          const reqData = {\n            user_id: data.user_id,\n            rymindr_id: data.selected_id\n          };\n          await dispatch(getRymidrDetails(reqData));\n        } else {\n          if (record.length > 0) {\n            const reqData = {\n              user_id: data.user_id,\n              rymindr_id: merged[0].rymindr_id\n            };\n            await dispatch(getRymidrDetails(reqData));\n          } else {\n            dispatch(Success({\n              type: actionTypes.GETRYMINDRDETAILS,\n              payload: null\n            }));\n          }\n        }\n\n        dispatch(Success({\n          type: actionTypes.GETHISTORYRYMINDR,\n          payload: {\n            upcomingList: merged.length > 0 ? merged : [],\n            rymindr_id: response.data.rymindrids\n          } //payload: { record, upcomingList: merged.length > 0 ? merged : [], rymindr_id: response.data.rymindrids }\n\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\nexport const getRymidrDetails = data => {\n  console.warn('dtaa454545', data);\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const response = await Axios().post('users/getRymindrDetail', data);\n\n      if (response.data.status === '1') {\n        dispatch(Success({\n          type: actionTypes.GETRYMINDRDETAILS,\n          payload: response.data.data\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\nexport const getHolidayDetails = data => {\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const response = await Axios().post('user/bankHolidayDetails', data);\n\n      if (response.data.status === '1') {\n        dispatch(Success({\n          type: actionTypes.GETRYMINDRDETAILS,\n          payload: response.data.data\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\nexport const delete_rymindr2 = data => {\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const qiscus_id = data.qiscus_id;\n      delete data.qiscus_id;\n      const response = await Axios().post('users/deleteRymindr', data);\n\n      if (response.data.status === '1') {\n        // const qicsusconfig = { headers: { QISCUS_SDK_SECRET: '434e6d04f43c59a9d96666bddcb5c3e0' } };\n        // let dataToSendQicusRemove = {\n        //   emails: data.user_id.split(','),\n        //   room_id: qiscus_id,\n        // };\n        // await axios.post(\n        //   'https://rymindr-fmgafzuj8sxps.qiscus.com/api/v2/rest/remove_room_participants',\n        //   dataToSendQicusRemove,\n        //   qicsusconfig\n        // );\n        dispatch(SuccessMessage('Rymindr has been deleted successfully'));\n        await dispatch(getUpcommingRymindrs({\n          user_id: data.user_id\n        })); //await dispatch(getHistoryRymindrs({ user_id: data.user_id, selected_id: data.upcoming }));\n\n        dispatch(Success({\n          type: actionTypes.DELETERYMINDR,\n          payload: response.data.data\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    } finally {\n      dispatch(SuccessMessage(null));\n      dispatch(Fail(null));\n    }\n  };\n};\nexport const delete_rymindr = data => {\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const qiscus_id = data.qiscus_id;\n      delete data.qiscus_id;\n      const response = await Axios().post('users/deleteRymindr', data);\n\n      if (response.data.status === '1') {\n        // const qicsusconfig = { headers: { QISCUS_SDK_SECRET: '434e6d04f43c59a9d96666bddcb5c3e0' } };\n        // let dataToSendQicusRemove = {\n        //   emails: data.user_id.split(','),\n        //   room_id: qiscus_id,\n        // };\n        // await axios.post(\n        //   'https://rymindr-fmgafzuj8sxps.qiscus.com/api/v2/rest/remove_room_participants',\n        //   dataToSendQicusRemove,\n        //   qicsusconfig\n        // );\n        dispatch(SuccessMessage('Rymindr has been deleted successfully')); //await dispatch(getUpcommingRymindrs({ user_id: data.user_id }))\n\n        await dispatch(getHistoryRymindrs({\n          user_id: data.user_id,\n          selected_id: data.upcoming\n        }));\n        dispatch(Success({\n          type: actionTypes.DELETERYMINDR,\n          payload: response.data.data\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    } finally {\n      dispatch(SuccessMessage(null));\n      dispatch(Fail(null));\n    }\n  };\n};\nexport const clearRymindrHistory2 = data => {\n  return async dispatch => {\n    try {\n      // const response = await Axios().post('users/clearHistory', data)\n      // if (response.data.status === '1') {\n      //   console.log('response.data.status======',response.data.status);\n      //   dispatch(\n      //     Success({\n      //       type: actionTypes.DELETERYMINDRHISTORY,\n      //       payload: response.data.status\n      //     })\n      //   )\n      // } else {\n      //   dispatch(Fail(response.data.message))\n      // }\n      dispatch(SuccessMessage('Rymindr Histories have cleared successfully.'));\n      await dispatch(getHistoryRymindrs(data));\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\nexport const clearRymindrHistory = data => {\n  return async dispatch => {\n    try {\n      const response = await Axios().post('users/clearHistory', data);\n\n      if (response.data.status === '1') {\n        console.log('response.data.status======', response.data.status);\n        dispatch(SuccessMessage('Rymindr Histories have cleared successfully.'));\n        await dispatch(getHistoryRymindrs(data));\n      } else {\n        dispatch(Fail(response.data.message));\n        await dispatch(getHistoryRymindrs(data));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n      await dispatch(getHistoryRymindrs(data));\n    }\n  };\n};\nexport const rymindr_action = data => {\n  return async dispatch => {\n    try {\n      const dataTosend = {\n        rymindr_id: '18105',\n        status: 2,\n        user_id: '2892',\n        friend_id: '2891',\n        user_name: 'Demolive1 ',\n        recr_rymindr_id: '18103'\n      };\n      dispatch(isLoading());\n      const response = await Axios().post('users/acceptRequestRymindr', data);\n\n      if (response.data.status === '1') {\n        dispatch(Success({\n          type: actionTypes.RYMINDRACTION,\n          payload: response.data.data\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n}; //\n\nexport const getNotification = data => {\n  return dispatch => {\n    // dispatch(isLoading());\n    Axios().post('users/newRymindrList', data).then(response => {\n      if (response.data.status === '1') {\n        dispatch(Success({\n          type: actionTypes.GETNOTIFICATION,\n          payload: response.data.data,\n          default_cat: response.data.default_cat\n        })); //get subcategories\n\n        const dataTosend = {\n          user_id: data.user_id,\n          category_id: response.data.default_cat\n        };\n        dispatch(getSubCategories(dataTosend));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const getCategoriesRymindr = data => {\n  return dispatch => {\n    // dispatch(isLoading());\n    Axios().post('users/getCategoryListRymindr', data).then(response => {\n      if (response.data.status === '1') {\n        let temp = response.data.data;\n        let tempArr = [];\n        temp.map((data, i) => {\n          if (data.id != 119 && data.category_name != 'Receipts' && data.id != 39 && data.category_name != 'Warranty') {\n            tempArr.push(data);\n          }\n        });\n        dispatch(Success({\n          type: actionTypes.GETCATEGORY,\n          payload: tempArr,\n          default_cat: response.data.default_cat\n        })); //get subcategories\n\n        const dataTosend = {\n          user_id: data.user_id,\n          category_id: response.data.default_cat\n        };\n        dispatch(getSubCategories(dataTosend));\n      } else {// dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {// dispatch(Fail(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/store/actions/rymidr.js"],"names":["actionTypes","Axios","axios","isLoading","type","ISLOADING","Success","response","Fail","error","ERROR","SuccessMessage","message","SUCCESS_MESSAGE_RYMINDR","success_message","getCategories","data","dispatch","post","then","status","temp","tempArr","map","i","id","category_name","push","GETCATEGORY","payload","default_cat","dataTosend","user_id","category_id","getSubCategories","catch","err","SUBCATEGORY","getGroups","GROUPLIST","getBusinessUsers","BUSINESSUSERS","createRymindr","unmatch","history","sendAttachment","business_code","first_name","last_name","JSON","parse","localStorage","getItem","qiscusId","qiscus_id","rymindr_id","inviteTorymidr","mobile_no","user_name","qiscuss","rymind_type","seldFiles","img","len","length","image","base64","split","extn","name","replace","att_data","attachment","sendInvitation","dateTosend","recr_rymindr_id","deleteAttachment","console","log","CREATERYMINDR","editRymindr","undefined","EDITRYMINDR","generateQrCodeDB","warn","GENERATEQRCODE","tbl_rymindr","statusData","STATUSDATA","inviteAndAddMobile","INVITEANDADDMOBILE","getUpcommingRymindrs","record","upcomingry","forEach","item","remindr","merged","concat","apply","reqData","rymindr_type","is_bank_holiday","is_page","getRymidrDetails","GETRYMINDRDETAILS","GETUPCOMMINGRYMINDR","upcomingList","getHistoryRymindrs","all_rymindrids","rymindrid","selected_id","GETHISTORYRYMINDR","rymindrids","getHolidayDetails","delete_rymindr2","DELETERYMINDR","delete_rymindr","upcoming","clearRymindrHistory2","clearRymindrHistory","rymindr_action","friend_id","RYMINDRACTION","getNotification","GETNOTIFICATION","getCategoriesRymindr"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport Axios from '../../helper/axios';\nimport axios from 'axios';\n\nexport const isLoading = () => {\n  return {\n    type: actionTypes.ISLOADING,\n  };\n};\n\nexport const Success = (response) => {\n  return response;\n};\n\nexport const Fail = (error) => {\n  return {\n    type: actionTypes.ERROR,\n    error: error,\n  };\n};\n\nexport const SuccessMessage = (message) => {\n  return {\n    type: actionTypes.SUCCESS_MESSAGE_RYMINDR,\n    success_message: message,\n  };\n};\n\nexport const getCategories = (data) => {\n  return (dispatch) => {\n    // dispatch(isLoading());\n    Axios()\n      .post('users/getCategoryList', data)\n      .then((response) => {\n        if (response.data.status === '1') {\n          let temp = response.data.data;\n          let tempArr = [];\n\n          temp.map((data, i) => {\n            if (\n              data.id != 119 &&\n              data.category_name != 'Receipts' &&\n              data.id != 39 &&\n              data.category_name != 'Warranty'\n            ) {\n              tempArr.push(data);\n            }\n          });\n          dispatch(\n            Success({\n              type: actionTypes.GETCATEGORY,\n              payload: tempArr,\n              default_cat: response.data.default_cat, \n            })\n          );\n          //get subcategories\n          const dataTosend = {\n            user_id: data.user_id,\n            category_id: response.data.default_cat,\n          };\n          dispatch(getSubCategories(dataTosend));\n        } else {\n          // dispatch(Fail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        dispatch(Fail(err.message));\n      });\n  };\n};\nexport const getSubCategories = (data) => {\n  return (dispatch) => {\n    // dispatch(isLoading());\n\n    Axios()\n      .post('users/getCategoryList', data)\n      .then((response) => {\n        if (response.data.status === '1') {\n          dispatch(\n            Success({\n              type: actionTypes.SUBCATEGORY,\n              payload: response.data.data,\n            })\n          );\n        } else {\n          // dispatch(Fail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        dispatch(Fail(err.message));\n      });\n  };\n};\n\nexport const getGroups = (data) => {\n  return (dispatch) => {\n    // dispatch(isLoading());\n    Axios()\n      .post('users/getGroupList', data)\n      .then((response) => {\n        if (response.data.status === '1') {\n          dispatch(\n            Success({\n              type: actionTypes.GROUPLIST,\n              payload: response.data.data,\n            })\n          );\n        } else {\n          // dispatch(Fail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        dispatch(Fail(err.message));\n      });\n  };\n};\n\nexport const getBusinessUsers = (data) => {\n  return (dispatch) => {\n    // dispatch(isLoading());\n    Axios()\n      .post('users/businessUserList', data)\n      .then((response) => {\n        if (response.data.status === '1') {\n          dispatch(\n            Success({\n              type: actionTypes.BUSINESSUSERS,\n              payload: response.data.data,\n            })\n          );\n        } else {\n          // dispatch(Fail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        dispatch(Fail(err.message));\n      });\n  };\n};\n\nexport const createRymindr = (data, unmatch, history, sendAttachment) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n      const { user_id, business_code, first_name, last_name } = JSON.parse(localStorage.getItem('userData'));\n      const qiscusId = ''; //getqiscusId.data.results.room.room_id;\n      const dataTosend = { ...data };\n      dataTosend.qiscus_id = qiscusId;\n\n      const response = await Axios().post('users/create_quick_rymindr', dataTosend);\n\n      if (response.data.status === '1') {\n        const rymindr_id = response.data.data.id;\n        let inviteTorymidr = {\n          mobile_no: unmatch,\n          rymindr_id: rymindr_id,\n          user_id: user_id,\n          user_name: first_name + ' ' + last_name,\n          business_code: business_code,\n          qiscuss: qiscusId,\n          rymind_type: data.rymind_type,\n        };\n\n        let seldFiles = []\n        if (sendAttachment) {\n          var img = sendAttachment;\n          var len = img.length;\n          for (var i = 0; i < len; i++) {\n            if (img[i].type == 'application/pdf') {\n              var image = img[i].base64.split(';base64,');\n              var image = image[1];\n              var extn = img[i].name.split('.');\n            } else if (img[i].type == '') {\n              var image = img[i].base64.split(';base64,');\n              var image = image[1];\n              var extn = img[i].name.split('.');\n            } else {\n              var image = img[i].base64.replace(/^data:image\\/\\w+;base64,/, '');\n              var extn = img[i].name.split('.');\n            }\n            const att_data = {\n              attachment: image,\n              //recr_rymindr_id: rymindr_id,\n              //user_id: user_id,\n              extn: extn[1],\n            };\n            seldFiles.push(att_data);\n            //await Axios().post('users/rymindrDesktopAttachment', att_data);\n          }\n        }\n        if (unmatch) {\n          const sendInvitation = await Axios().post('users/inviteForRymindr', inviteTorymidr);\n        }\n\n        let dateTosend = {\n          recr_rymindr_id: rymindr_id,\n          user_id: user_id,\n          sendAttachment:seldFiles,\n          deleteAttachment:[]\n      };\n      console.log('dateTosend=====',dateTosend);\n      await Axios().post('users/rymindrDesktopAttachment', dateTosend);\n\n        dispatch(\n          Success({\n            type: actionTypes.CREATERYMINDR,\n            payload: response.data.data,\n          })\n        );\n        dispatch(SuccessMessage('Rymindr has been created sucessfully.'));\n\n        history.push('/rymindrs');\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    } finally {\n      dispatch(SuccessMessage(null));\n      dispatch(Fail(null));\n    }\n  };\n};\n\nexport const editRymindr = (data, history, sendAttachment,deleteAttachment) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n      const { user_id, business_code, first_name, last_name } = JSON.parse(localStorage.getItem('userData'));\n      \n\n      const response = await Axios().post('users/updateQuickRymindr', data);\n\n      if (response.data.status === '1') {\n        const rymindr_id = data.rymindr_id;\n      \n        let seldFiles = []\n        if (sendAttachment) {\n          var img = sendAttachment;\n          var len = img.length;\n          for (var i = 0; i < len; i++) {\n            if (img[i].base64 != undefined) {\n              if (img[i].type == 'application/pdf') {\n                var image = img[i].base64.split(';base64,');\n                var image = image[1];\n                var extn = img[i].name.split('.');\n              } else if (img[i].type == '') {\n                var image = img[i].base64.split(';base64,');\n                var image = image[1];\n                var extn = img[i].name.split('.');\n              } else {\n                var image = img[i].base64.replace(/^data:image\\/\\w+;base64,/, '');\n                var extn = img[i].name.split('.');\n              }\n              const att_data = {\n                attachment: image,\n                extn: extn[1],\n              };\n              seldFiles.push(att_data);\n              //await Axios().post('users/rymindrDesktopAttachment', att_data);\n            }\n          }\n        }\n\n        let dateTosend = {\n            recr_rymindr_id: rymindr_id,\n            user_id: user_id,\n            sendAttachment:seldFiles,\n            deleteAttachment:deleteAttachment\n        };\n        console.log('dateTosend=====',dateTosend);\n        await Axios().post('users/rymindrDesktopAttachment', dateTosend);\n        dispatch(\n          Success({\n            type: actionTypes.EDITRYMINDR,\n            payload: response.data.data,\n          })\n        );\n        dispatch(SuccessMessage('Rymindr has been updated sucessfully.'));\n\n        history.push('/rymindrs');\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    } finally {\n      dispatch(SuccessMessage(null));\n      dispatch(Fail(null));\n    }\n  };\n};\n\nexport const generateQrCodeDB = (data, history) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n      const { user_id, business_code, first_name, last_name } = JSON.parse(localStorage.getItem('userData'));\n      const dataTosend = { ...data };\n\n      const response = await Axios().post('users/generateRymindrQrCode', dataTosend);\n\n      console.warn('respons55555e', response);\n\n      if (response.status == 200) {\n        dispatch(\n          Success({\n            type: actionTypes.GENERATEQRCODE,\n            payload: response.data.tbl_rymindr,\n          })\n        );\n        dispatch(SuccessMessage('QR Code has been created sucessfully.'));\n        history.push('/rymindrs');\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    } finally {\n      dispatch(SuccessMessage(null));\n      dispatch(Fail(null));\n    }\n  };\n};\nexport const statusData = (data) => {\n  return async (dispatch) => {\n    try {\n      \n      const { user_id, business_code, first_name, last_name } = JSON.parse(localStorage.getItem('userData'));\n      const dataTosend = { ...data };\n\n      const response = await Axios().post('user/rymindrStatus', dataTosend);\n\n      if (response.status == 200) {\n        dispatch(\n          Success({\n            type: actionTypes.STATUSDATA,\n            payload: response.data.data,\n          })\n        );\n        console.log('response.data.data',response.data.data)\n    \n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    } finally {\n      dispatch(SuccessMessage(null));\n      dispatch(Fail(null));\n    }\n  };\n};\n\nexport const inviteAndAddMobile = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n\n      const response = await Axios().post('users/inviteAndAddMobile', data);\n\n      if (response.data.status === '1') {\n        dispatch(\n          Success({\n            type: actionTypes.INVITEANDADDMOBILE,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const getUpcommingRymindrs = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n\n      const response = await Axios().post('users/getUpcommingRymindr', data);\n\n      if (response.data.status === '1') {\n        const record = response.data.data;\n        let upcomingry = [];\n        record.forEach((item) => {\n          upcomingry.push(item.remindr);\n        });\n        console.log('data',data)\n\n        var merged = [].concat.apply([], upcomingry);\n\n        let reqData = {};\n\n        if (record.length > 0) {\n          if (merged[0].rymindr_type == 'Holiday' && merged[0].is_bank_holiday==1) {\n            reqData = {\n              user_id: data.user_id,\n              rymindr_id: merged[0].id,\n              is_page: 'history',\n              is_bank_holiday: 1,\n            };\n          } else {\n            reqData = {\n              user_id: data.user_id,\n              rymindr_id: merged[0].rymindr_id,\n              is_page: 'history',\n            };\n          }\n          dispatch(getRymidrDetails(reqData));\n        } else {\n          dispatch(\n            Success({\n              type: actionTypes.GETRYMINDRDETAILS,\n              payload: null,\n            })\n          );\n        }\n\n        dispatch(\n          Success({\n            type: actionTypes.GETUPCOMMINGRYMINDR,\n            payload: { record, upcomingList: merged.length > 0 ? merged : [] },\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const getHistoryRymindrs = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n      const response = await Axios().post('users/getHistoryRymindr', data);\n      console.log('response====', response);\n      if (response.data.status === '1') {\n        const record = response.data.data;\n        const all_rymindrids = response.data.rymindrid;\n        let upcomingry = [];\n        record.forEach((item) => {\n          upcomingry.push(item.remindr);\n        });\n        var merged = [].concat.apply([], upcomingry);\n        if (data.selected_id) {\n          const reqData = {\n            user_id: data.user_id,\n            rymindr_id: data.selected_id,\n          };\n          await dispatch(getRymidrDetails(reqData));\n        } else {\n          if (record.length > 0) {\n            const reqData = {\n              user_id: data.user_id,\n              rymindr_id: merged[0].rymindr_id,\n            };\n            await dispatch(getRymidrDetails(reqData));\n          } else {\n            dispatch(\n              Success({\n                type: actionTypes.GETRYMINDRDETAILS,\n                payload: null,\n              })\n            );\n          }\n        }\n        dispatch(\n          Success({\n            type: actionTypes.GETHISTORYRYMINDR,\n            payload: { upcomingList: merged.length > 0 ? merged : [], rymindr_id: response.data.rymindrids },\n            //payload: { record, upcomingList: merged.length > 0 ? merged : [], rymindr_id: response.data.rymindrids }\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const getRymidrDetails = (data) => {\n  console.warn('dtaa454545', data);\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n      const response = await Axios().post('users/getRymindrDetail', data);\n\n      if (response.data.status === '1') {\n        dispatch(\n          Success({\n            type: actionTypes.GETRYMINDRDETAILS,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const getHolidayDetails = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n\n      const response = await Axios().post('user/bankHolidayDetails', data);\n\n      if (response.data.status === '1') {\n        dispatch(\n          Success({\n            type: actionTypes.GETRYMINDRDETAILS,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const delete_rymindr2 = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n      const qiscus_id = data.qiscus_id;\n      delete data.qiscus_id;\n\n      const response = await Axios().post('users/deleteRymindr', data);\n\n      if (response.data.status === '1') {\n        // const qicsusconfig = { headers: { QISCUS_SDK_SECRET: '434e6d04f43c59a9d96666bddcb5c3e0' } };\n        // let dataToSendQicusRemove = {\n        //   emails: data.user_id.split(','),\n        //   room_id: qiscus_id,\n        // };\n\n        // await axios.post(\n        //   'https://rymindr-fmgafzuj8sxps.qiscus.com/api/v2/rest/remove_room_participants',\n        //   dataToSendQicusRemove,\n        //   qicsusconfig\n        // );\n        dispatch(SuccessMessage('Rymindr has been deleted successfully'));\n         await dispatch(getUpcommingRymindrs({ user_id: data.user_id}))\n        //await dispatch(getHistoryRymindrs({ user_id: data.user_id, selected_id: data.upcoming }));\n\n        dispatch(\n          Success({\n            type: actionTypes.DELETERYMINDR,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    } finally {\n      dispatch(SuccessMessage(null));\n      dispatch(Fail(null));\n    }\n  };\n};\n\nexport const delete_rymindr = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n      const qiscus_id = data.qiscus_id;\n      delete data.qiscus_id;\n\n      const response = await Axios().post('users/deleteRymindr', data);\n\n      if (response.data.status === '1') {\n        // const qicsusconfig = { headers: { QISCUS_SDK_SECRET: '434e6d04f43c59a9d96666bddcb5c3e0' } };\n        // let dataToSendQicusRemove = {\n        //   emails: data.user_id.split(','),\n        //   room_id: qiscus_id,\n        // };\n\n        // await axios.post(\n        //   'https://rymindr-fmgafzuj8sxps.qiscus.com/api/v2/rest/remove_room_participants',\n        //   dataToSendQicusRemove,\n        //   qicsusconfig\n        // );\n        dispatch(SuccessMessage('Rymindr has been deleted successfully'));\n         //await dispatch(getUpcommingRymindrs({ user_id: data.user_id }))\n        await dispatch(getHistoryRymindrs({ user_id: data.user_id, selected_id: data.upcoming }));\n\n        dispatch(\n          Success({\n            type: actionTypes.DELETERYMINDR,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    } finally {\n      dispatch(SuccessMessage(null));\n      dispatch(Fail(null));\n    }\n  };\n};\n\nexport const clearRymindrHistory2 = (data) => {\n  return async (dispatch) => {\n    try {\n      // const response = await Axios().post('users/clearHistory', data)\n      // if (response.data.status === '1') {\n      //   console.log('response.data.status======',response.data.status);\n      //   dispatch(\n      //     Success({\n      //       type: actionTypes.DELETERYMINDRHISTORY,\n      //       payload: response.data.status\n      //     })\n      //   )\n      // } else {\n      //   dispatch(Fail(response.data.message))\n      // }\n      \n        dispatch(SuccessMessage('Rymindr Histories have cleared successfully.'));\n        await dispatch(getHistoryRymindrs(data));\n        \n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const clearRymindrHistory = (data) => {\n  return async (dispatch) => {\n    try {\n      const response = await Axios().post('users/clearHistory', data);\n      if (response.data.status === '1') {\n        console.log('response.data.status======', response.data.status);\n        dispatch(SuccessMessage('Rymindr Histories have cleared successfully.'));\n        await dispatch(getHistoryRymindrs(data));\n      } else {\n        dispatch(Fail(response.data.message));\n        await dispatch(getHistoryRymindrs(data));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n      await dispatch(getHistoryRymindrs(data));\n    }\n  };\n};\n\nexport const rymindr_action = (data) => {\n  return async (dispatch) => {\n    try {\n      const dataTosend = {\n        rymindr_id: '18105',\n        status: 2,\n        user_id: '2892',\n        friend_id: '2891',\n        user_name: 'Demolive1 ',\n        recr_rymindr_id: '18103',\n      };\n\n      dispatch(isLoading());\n\n      const response = await Axios().post('users/acceptRequestRymindr', data);\n      if (response.data.status === '1') {\n        dispatch(\n          Success({\n            type: actionTypes.RYMINDRACTION,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\n//\nexport const getNotification = (data) => {\n  return (dispatch) => {\n    // dispatch(isLoading());\n    Axios()\n      .post('users/newRymindrList', data)\n      .then((response) => {\n        if (response.data.status === '1') {\n          dispatch(\n            Success({\n              type: actionTypes.GETNOTIFICATION,\n              payload: response.data.data,\n              default_cat: response.data.default_cat,\n            })\n          );\n          //get subcategories\n          const dataTosend = {\n            user_id: data.user_id,\n            category_id: response.data.default_cat,\n          };\n          dispatch(getSubCategories(dataTosend));\n        } else {\n          dispatch(Fail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        dispatch(Fail(err.message));\n      });\n  };\n};\n\nexport const getCategoriesRymindr = (data) => {\n  return (dispatch) => {\n    // dispatch(isLoading());\n    Axios()\n      .post('users/getCategoryListRymindr', data)\n      .then((response) => {\n        if (response.data.status === '1') {\n          let temp = response.data.data;\n          let tempArr = [];\n\n          temp.map((data, i) => {\n            if (\n              data.id != 119 &&\n              data.category_name != 'Receipts' &&\n              data.id != 39 &&\n              data.category_name != 'Warranty'\n            ) {\n              tempArr.push(data);\n            }\n          });\n\n          dispatch(\n            Success({\n              type: actionTypes.GETCATEGORY,\n              payload: tempArr,\n              default_cat: response.data.default_cat,\n            })\n          );\n\n          //get subcategories\n          const dataTosend = {\n            user_id: data.user_id,\n            category_id: response.data.default_cat,\n          };\n          dispatch(getSubCategories(dataTosend));\n        } else {\n          // dispatch(Fail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        // dispatch(Fail(err.message));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}