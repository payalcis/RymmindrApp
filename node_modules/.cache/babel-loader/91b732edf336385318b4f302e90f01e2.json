{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/HistoryRymindrs/CreateRymindr/Modal/Memberlist.js\";\nimport { Avatar, Box, Checkbox, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, Tab, Tabs, TextField, Typography, Divider } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport { makeStyles, styled, withStyles } from '@material-ui/core/styles';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nconst TabsStyles = styled(Tabs)(({\n  theme\n}) => ({\n  borderBottom: '1px solid #ccc',\n  '& span': {\n    justifyContent: 'center'\n  }\n}));\n\nconst TabComponent = props => {\n  const {\n    handleToggles,\n    handleMemberToggle,\n    checked,\n    groupdata,\n    memberchecked,\n    checkOnSelectAllMembers,\n    checkOnSelectAllGroup,\n    memberdata,\n    handleToTagvalue\n  } = props;\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [phoneNumber, setPhoneNumber] = useState([]);\n  const [phoneErr, setPhoneErr] = useState(false);\n  var [checkedForAllMembers, setCheckedForAllMembers] = useState(0);\n  var [checkedForAllGroup, setCheckedForAllGroup] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  console.log(checkedForAllMembers);\n\n  const handleMemberToggles = value => () => {\n    if (value == 0) {\n      if (checkedForAllMembers % 2 == 1 && checkedForAllMembers !== 0 && checkOnSelectAllMembers == true) {\n        handleMemberToggle(3);\n      } else {\n        handleMemberToggle(0);\n      }\n\n      setCheckedForAllMembers(++checkedForAllMembers);\n    } else if (value == 1) {\n      if (checkedForAllGroup % 2 == 1 && checkedForAllGroup !== 0 && checkOnSelectAllGroup == true) {\n        handleMemberToggle(4);\n      } else {\n        handleMemberToggle(1);\n      }\n\n      setCheckedForAllGroup(++checkedForAllGroup);\n    } else {\n      setCheckedForAllMembers(++checkedForAllMembers);\n      handleMemberToggle(value);\n    }\n  };\n\n  const handleGroupToggle = value => () => {\n    setCheckedForAllGroup(++checkedForAllGroup);\n    handleToggles(value);\n  };\n\n  const handleTag = e => {\n    const newvalue = e.target.value;\n    var filter = /^((\\+[1-9]{1,4}[ \\-]*)|(\\([0-9]{2,3}\\)[ \\-]*)|([0-9]{2,4})[ \\-]*)*?[0-9]{3,4}?[ \\-]*[0-9]{3,4}?$/;\n\n    if (filter.test(newvalue)) {\n      var phn = newvalue.length;\n\n      if (phn == 11) {\n        const newNumber = [...phoneNumber, newvalue];\n        setPhoneNumber(Array.from(new Set(newNumber)));\n        handleToTagvalue(Array.from(new Set(newNumber)));\n        setPhoneErr(false);\n      } else {\n        setPhoneErr(true);\n      }\n    } else {\n      setPhoneErr(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TabsStyles, {\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"simple tabs example\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: \"Members\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Groups\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    multiple: true,\n    id: \"tags-filled\",\n    filterSelectedOptions: false,\n    options: [],\n    freeSolo: true,\n    value: phoneNumber,\n    onChange: handleTag,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      placeholder: \"Type Number and Enter to Add\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      error: phoneErr,\n      onChange: () => setPhoneErr(false),\n      helperText: phoneErr && 'Not a valid number.',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, memberdata.length > 0 ? /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Select All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    edge: \"end\",\n    onChange: handleMemberToggles(0),\n    checked: checkOnSelectAllMembers // inputProps={{ 'aria-labelledby': labelId }}\n    ,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }), memberdata.map((value, key) => {\n    const labelId = `checkbox-list-secondary-label-${value}`;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n      key: key,\n      button: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: value.first_name,\n      src: value.profile_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value.first_name} ${value.last_name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"end\",\n      onChange: handleMemberToggles(value),\n      checked: memberchecked.indexOf(value.user_id) !== -1,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"No Record Found\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, groupdata.length > 0 ? /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Select All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    edge: \"end\",\n    onChange: handleMemberToggles(1),\n    checked: checkOnSelectAllGroup // inputProps={{ 'aria-labelledby': labelId }}\n    ,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }), groupdata.map((value, key) => {\n    // console.log(value)\n    const labelId = `checkbox-list-secondary-label-${value}`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: key,\n      button: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: value.group_name,\n      src: value.group_icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value.group_name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"end\",\n      onChange: handleGroupToggle(value),\n      checked: checked.indexOf(value.group_id) !== -1,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 19\n      }\n    })));\n  })) : /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"No Record Found\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }))));\n};\n\nTabComponent.propTypes = {\n  handleToggles: PropTypes.func.isRequired,\n  handleMemberToggle: PropTypes.func.isRequired,\n  checked: PropTypes.array.isRequired,\n  groupdata: PropTypes.array.isRequired,\n  memberchecked: PropTypes.array.isRequired,\n  checkOnSelectAllMembers: PropTypes.bool.isRequired,\n  checkOnSelectAllGroup: PropTypes.bool.isRequired,\n  memberdata: PropTypes.array.isRequired,\n  handleToTagvalue: PropTypes.func.isRequired\n};\nexport default TabComponent;","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/HistoryRymindrs/CreateRymindr/Modal/Memberlist.js"],"names":["Avatar","Box","Checkbox","List","ListItem","ListItemAvatar","ListItemSecondaryAction","ListItemText","Tab","Tabs","TextField","Typography","Divider","React","useState","Autocomplete","PropTypes","makeStyles","styled","withStyles","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","useStyles","theme","root","backgroundColor","palette","background","paper","TabsStyles","borderBottom","justifyContent","TabComponent","handleToggles","handleMemberToggle","checked","groupdata","memberchecked","checkOnSelectAllMembers","checkOnSelectAllGroup","memberdata","handleToTagvalue","classes","setValue","phoneNumber","setPhoneNumber","phoneErr","setPhoneErr","checkedForAllMembers","setCheckedForAllMembers","checkedForAllGroup","setCheckedForAllGroup","handleChange","event","newValue","console","log","handleMemberToggles","handleGroupToggle","handleTag","e","newvalue","target","filter","test","phn","length","newNumber","Array","from","Set","params","map","key","labelId","first_name","profile_image","last_name","indexOf","user_id","group_name","group_icon","group_id","func","array","bool"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Box,\n  Checkbox,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  Tab,\n  Tabs,\n  TextField,\n  Typography, Divider\n} from '@material-ui/core'\nimport React, { useState } from 'react'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport PropTypes from 'prop-types'\nimport { makeStyles, styled, withStyles } from '@material-ui/core/styles'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box>{children}\n        </Box>\n      )}\n    </div>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  }\n}))\n\nconst TabsStyles = styled(Tabs)(({ theme }) => ({\n  borderBottom: '1px solid #ccc',\n  '& span': {\n    justifyContent: 'center'\n  }\n}))\n\nconst TabComponent = (props) => {\n  const { handleToggles, handleMemberToggle, checked, groupdata, memberchecked,checkOnSelectAllMembers,checkOnSelectAllGroup, memberdata, handleToTagvalue } = props\n  const classes = useStyles()\n  const [value, setValue] = useState(0)\n  const [phoneNumber, setPhoneNumber] = useState([])\n  const [phoneErr, setPhoneErr] = useState(false)\n  var [checkedForAllMembers, setCheckedForAllMembers] = useState(0)\n  var [checkedForAllGroup, setCheckedForAllGroup] = useState(0)\n  \n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n  console.log(checkedForAllMembers)\n  const handleMemberToggles = (value) => () => {\n    if(value == 0){\n      if(checkedForAllMembers%2 == 1 && checkedForAllMembers!==0 && checkOnSelectAllMembers== true){\n        handleMemberToggle(3)\n        \n      }else{\n        \n        handleMemberToggle(0)\n        \n      }\n      \n      setCheckedForAllMembers(++checkedForAllMembers)\n    }\n    else if(value == 1){\n      \n      if(checkedForAllGroup%2 == 1 && checkedForAllGroup!==0  && checkOnSelectAllGroup== true){\n        handleMemberToggle(4)\n      }else{\n        handleMemberToggle(1)\n      }\n      \n      setCheckedForAllGroup(++checkedForAllGroup)\n    }\n    else{\n      setCheckedForAllMembers(++checkedForAllMembers)\n      handleMemberToggle(value)\n    }\n    \n  }\n\n  const handleGroupToggle = (value) => () => {\n    \n    setCheckedForAllGroup(++checkedForAllGroup)\n    handleToggles(value)\n  }\n\n  const handleTag = (e) => {\n    \n    const newvalue = e.target.value\n    \n    var filter = /^((\\+[1-9]{1,4}[ \\-]*)|(\\([0-9]{2,3}\\)[ \\-]*)|([0-9]{2,4})[ \\-]*)*?[0-9]{3,4}?[ \\-]*[0-9]{3,4}?$/\n    if (filter.test(newvalue)) {\n      var phn = newvalue.length\n      if (phn == 11) {\n        const newNumber = [...phoneNumber, newvalue]\n        setPhoneNumber(Array.from(new Set(newNumber)))\n        handleToTagvalue(Array.from(new Set(newNumber)))\n        setPhoneErr(false)\n      } else {\n        setPhoneErr(true)\n      }\n    } else {\n      setPhoneErr(true)\n    }\n  }\n  return (\n    <div className={classes.root}>\n      <TabsStyles\n        value={value}\n        onChange={handleChange}\n        aria-label='simple tabs example'\n        indicatorColor='primary'\n        textColor='primary'\n        variant='fullWidth'\n      >\n        <Tab label='Members' />\n        <Tab label='Groups' />\n      </TabsStyles>\n      <Box>\n        <Autocomplete\n          multiple\n          id='tags-filled'\n          filterSelectedOptions={false}\n          options={[]}\n          freeSolo\n          value={phoneNumber}\n          onChange={handleTag}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              placeholder='Type Number and Enter to Add'\n              variant='outlined'\n              margin='normal'\n              error={phoneErr}\n              onChange={() => setPhoneErr(false)}\n              helperText={phoneErr && 'Not a valid number.'}\n            />\n          )}\n        />\n      </Box>\n      <TabPanel value={value} index={0}>\n        {(memberdata.length > 0)? <List dense className={classes.root}>\n        <ListItem button>\n                  <ListItemAvatar>\n                  </ListItemAvatar>\n                  <ListItemText primary=\"Select All\" />\n                  <ListItemSecondaryAction>\n                    <Checkbox\n                      edge='end'\n                      onChange={handleMemberToggles(0)}\n                      checked={checkOnSelectAllMembers}\n                      \n                      // inputProps={{ 'aria-labelledby': labelId }}\n                      color='primary'\n                    />\n                  </ListItemSecondaryAction>\n                </ListItem>\n                <Divider variant='inset' component='li' />\n          {memberdata.map((value, key) => {\n            const labelId = `checkbox-list-secondary-label-${value}`\n            return (\n              <>\n                <ListItem key={key} button>\n                  <ListItemAvatar>\n                    <Avatar alt={value.first_name} src={value.profile_image} />\n                  </ListItemAvatar>\n                  <ListItemText id={labelId} primary={`${value.first_name} ${value.last_name}`} />\n                  <ListItemSecondaryAction>\n                    <Checkbox\n                      edge='end'\n                      onChange={handleMemberToggles(value)}\n                      checked={memberchecked.indexOf(value.user_id) !== -1}\n                      inputProps={{ 'aria-labelledby': labelId }}\n                      color='primary'\n                    />\n                  </ListItemSecondaryAction>\n                </ListItem>\n                <Divider variant='inset' component='li' />\n              </>\n            )\n          })}\n        </List>:<List dense>\n        <ListItem button>\n                  <ListItemAvatar>\n                  </ListItemAvatar>\n                  <ListItemText primary=\"No Record Found\" />\n                  <ListItemSecondaryAction>\n                    \n                  </ListItemSecondaryAction>\n                </ListItem>\n                <Divider variant='inset' component='li' />\n                </List>\n                }\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {(groupdata.length > 0)?<List dense>\n        <ListItem button>\n                  <ListItemAvatar>\n                  </ListItemAvatar>\n                  <ListItemText primary=\"Select All\" />\n                  <ListItemSecondaryAction>\n                    <Checkbox\n                      edge='end'\n                      onChange={handleMemberToggles(1)}\n                      checked={checkOnSelectAllGroup}\n                      // inputProps={{ 'aria-labelledby': labelId }}\n                      color='primary'\n                    />\n                  </ListItemSecondaryAction>\n                </ListItem>\n                <Divider variant='inset' component='li' />\n          {groupdata.map((value, key) => {\n            // console.log(value)\n            const labelId = `checkbox-list-secondary-label-${value}`\n            return (\n              <ListItem key={key} button>\n                <ListItemAvatar>\n                  <Avatar alt={value.group_name} src={value.group_icon} />\n                </ListItemAvatar>\n                <ListItemText id={labelId} primary={`${value.group_name}`} />\n                <ListItemSecondaryAction>\n                  <Checkbox\n                    edge='end'\n                    onChange={handleGroupToggle(value)}\n                    checked={checked.indexOf(value.group_id) !== -1}\n                    inputProps={{ 'aria-labelledby': labelId }}\n                    color='primary'\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>\n            )\n          })}\n        </List>:<List dense>\n        <ListItem button>\n                  <ListItemAvatar>\n                  </ListItemAvatar>\n                  <ListItemText primary=\"No Record Found\" />\n                  <ListItemSecondaryAction>\n                    \n                  </ListItemSecondaryAction>\n                </ListItem>\n                <Divider variant='inset' component='li' />\n                </List>}\n        \n      </TabPanel>\n    </div>\n  )\n}\n\nTabComponent.propTypes = {\n  handleToggles: PropTypes.func.isRequired,\n  handleMemberToggle: PropTypes.func.isRequired,\n  checked: PropTypes.array.isRequired,\n  groupdata: PropTypes.array.isRequired,\n  memberchecked: PropTypes.array.isRequired,\n  checkOnSelectAllMembers:PropTypes.bool.isRequired,\n  checkOnSelectAllGroup:PropTypes.bool.isRequired,\n  memberdata: PropTypes.array.isRequired,\n  handleToTagvalue: PropTypes.func.isRequired\n}\n\nexport default TabComponent\n"]},"metadata":{},"sourceType":"module"}