{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport Axios from '../../helper/axios';\nimport axios from 'axios';\nexport const isLoading = () => {\n  return {\n    type: actionTypes.ISLOADING\n  };\n};\nexport const Success = response => {\n  return response;\n};\nexport const Fail = error => {\n  return {\n    type: actionTypes.ERROR,\n    error: error\n  };\n};\nexport const getContent = data => {\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const {\n        user_id,\n        business_code,\n        first_name,\n        last_name\n      } = JSON.parse(localStorage.getItem('userData'));\n      const dataTosend = { ...data\n      };\n      const response = await Axios().post('users/getContent', dataTosend);\n\n      if (response.data.status === '1') {\n        //console.log('responsee=action', response);\n        dispatch(Success({\n          type: actionTypes.GETRESOURCECONTENT,\n          payload: response.data.data\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {// dispatch(Fail(error.message));\n    }\n  };\n};","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/store/actions/resourceCenterAction.js"],"names":["actionTypes","Axios","axios","isLoading","type","ISLOADING","Success","response","Fail","error","ERROR","getContent","data","dispatch","user_id","business_code","first_name","last_name","JSON","parse","localStorage","getItem","dataTosend","post","status","GETRESOURCECONTENT","payload","message"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WAAW,CAACK;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,OAAO,GAAIC,QAAD,IAAc;AACnC,SAAOA,QAAP;AACD,CAFM;AAIP,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACLL,IAAAA,IAAI,EAAEJ,WAAW,CAACU,KADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAME,UAAU,GAAIC,IAAD,IAAU;AAClC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAACV,SAAS,EAAV,CAAR;AACA,YAAM;AAAEW,QAAAA,OAAF;AAAWC,QAAAA,aAAX;AAA0BC,QAAAA,UAA1B;AAAsCC,QAAAA;AAAtC,UAAoDC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAA1D;AACA,YAAMC,UAAU,GAAG,EAAE,GAAGV;AAAL,OAAnB;AACA,YAAML,QAAQ,GAAG,MAAMN,KAAK,GAAGsB,IAAR,CAAa,kBAAb,EAAiCD,UAAjC,CAAvB;;AACA,UAAIf,QAAQ,CAACK,IAAT,CAAcY,MAAd,KAAyB,GAA7B,EAAkC;AAChC;AACAX,QAAAA,QAAQ,CACNP,OAAO,CAAC;AACNF,UAAAA,IAAI,EAAEJ,WAAW,CAACyB,kBADZ;AAENC,UAAAA,OAAO,EAAEnB,QAAQ,CAACK,IAAT,CAAcA;AAFjB,SAAD,CADD,CAAR;AAMD,OARD,MAQO;AACLC,QAAAA,QAAQ,CAACL,IAAI,CAACD,QAAQ,CAACK,IAAT,CAAce,OAAf,CAAL,CAAR;AACD;AACF,KAhBD,CAgBE,OAAOlB,KAAP,EAAc,CACd;AACD;AACF,GApBD;AAqBD,CAtBM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport Axios from '../../helper/axios';\nimport axios from 'axios';\n\nexport const isLoading = () => {\n  return {\n    type: actionTypes.ISLOADING,\n  };\n};\n\nexport const Success = (response) => {\n  return response;\n};\n\nexport const Fail = (error) => {\n  return {\n    type: actionTypes.ERROR,\n    error: error,\n  };\n};\n\nexport const getContent = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n      const { user_id, business_code, first_name, last_name } = JSON.parse(localStorage.getItem('userData'));\n      const dataTosend = { ...data };\n      const response = await Axios().post('users/getContent', dataTosend);     \n      if (response.data.status === '1') {\n        //console.log('responsee=action', response);\n        dispatch(\n          Success({\n            type: actionTypes.GETRESOURCECONTENT,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      // dispatch(Fail(error.message));\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}