{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/Register/Register.js\";\nimport { Box, Button, FormControl, FormHelperText, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Paper, TextField, Typography } from '@material-ui/core';\nimport { Link, useHistory, Redirect } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport CircularSpinner from '../../component/CircularSpinner/index';\nimport PropTypes from 'prop-types';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { connect } from 'react-redux';\nimport img from '../../assets/images/login_bg.png';\nimport { register } from '../../store/actions/auth';\nimport { styled } from '@material-ui/core/styles';\nimport { withSnackbar } from 'notistack';\nimport generator from \"generate-password\";\nconst GridStyled = styled(Grid)({\n  height: '100vh'\n});\nconst PaperStyled = styled(Paper)({\n  width: 783,\n  textAlign: 'center',\n  padding: 40,\n  // boxShadow: 0px 3px 6px #40576A29;\n  borderRadius: 10\n});\nconst TypoStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 24,\n  marginTop: 20,\n  fontWeight: 'bold',\n  textTransform: 'uppercase'\n}));\nconst LinkStyled = styled(Link)(({\n  theme\n}) => ({\n  color: theme.palette.primary.main,\n  textDecoration: 'none'\n}));\nconst ButtonTypoStyled = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.palette.primary.main\n}));\nconst formFields = {\n  email: null,\n  password: null,\n  platform: 'desktop',\n  account_type: '',\n  address: '',\n  sc_bessi_name: '',\n  post_code: '',\n  mobile_no: '',\n  contact_person: '',\n  confirm_password: ''\n};\n\nconst Register = props => {\n  const history = useHistory();\n  const {\n    enqueueSnackbar,\n    error2,\n    loading\n  } = props;\n  const [values, setValues] = useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false\n  });\n  const [formValue, setFormValue] = useState(formFields);\n  const [fromValidation, setFormValidation] = useState(formFields);\n  const [accountType, setAccountType] = useState('Education');\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleClickShowConfirmPassword = () => {\n    setValues({ ...values,\n      showConfirmPassword: !values.showConfirmPassword\n    });\n  };\n\n  const generatePassword = () => {\n    const pwd = generator.generate({\n      length: 12,\n      lowercase: true,\n      uppercase: true,\n      numbers: true,\n      symbols: false\n    });\n    const FormValue = { ...formValue\n    };\n    FormValue.password = pwd;\n    FormValue.confirm_password = pwd;\n    setFormValue(FormValue);\n    console.log('formValue-', formValue);\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handlevalidation = () => {\n    let error = false; // var phoneno = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    // var phoneno = /((0)|((\\+|00)447)){1}[0-9]{10}\\b/\n\n    const formerr = { ...fromValidation\n    };\n\n    if (!formValue.email) {\n      error = true;\n      formerr.email = 'Email is required!';\n      setFormValidation(formerr);\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formValue.email)) {\n      error = true;\n      formerr.email = 'Invalid email address';\n      setFormValidation(formerr);\n    }\n\n    var upperCaseLetters = /[A-Z]/g;\n    var numbers = /[0-9]/g;\n\n    if (!formValue.password) {\n      error = true;\n      formerr.password = 'Password is required!';\n      setFormValidation(formerr);\n    } else if (!formValue.password.match(upperCaseLetters)) {\n      error = true;\n      formerr.password = 'Password must contain an upper case letter!';\n      setFormValidation(formerr);\n    } else if (!formValue.password.match(numbers)) {\n      error = true;\n      formerr.password = 'Password must contain a digit!';\n      setFormValidation(formerr);\n    }\n\n    if (!formValue.mobile_no) {\n      error = true;\n      formerr.mobile_no = 'Mobile no. is required!';\n      setFormValidation(formerr);\n    } else if (!(formValue.mobile_no.charAt(0) == \"0\")) {\n      error = true;\n      formerr.mobile_no = 'Invalid Mobile no.!';\n      setFormValidation(formerr);\n    } else if (isNaN(formValue.mobile_no)) {\n      error = true;\n      formerr.mobile_no = 'Invalid Mobile no.!';\n      setFormValidation(formerr);\n    }\n\n    if (!formValue.contact_person) {\n      error = true;\n      formerr.contact_person = 'Contact Person is required!';\n      setFormValidation(formerr);\n    }\n\n    if (!formValue.confirm_password) {\n      error = true;\n      formerr.confirm_password = 'Confirm Password is required!';\n      setFormValidation(formerr);\n    } else if (formValue.password !== formValue.confirm_password) {\n      error = true;\n      formerr.confirm_password = 'Password not matched!';\n      setFormValidation(formerr);\n    } // else if (!(formValue.mobile_no).match(phoneno)) {\n    //   error = true;\n    //   formerr.mobile_no = 'Invalid Mobile no.!';\n    //   setFormValidation(formerr);\n    // }\n    // if (formValue.confirmpassord && formValue.password && formValue.confirmpassord !== formValue.password) {\n    //   error = true;\n    //   formerr.confirmpassord = 'password and confirm password should be same.';\n    //   setFormValidation(formerr);\n    // }\n\n\n    if (!formValue.address) {\n      error = true;\n      formerr.address = 'Address is required!';\n      setFormValidation(formerr);\n    }\n\n    if (!formValue.sc_bessi_name) {\n      error = true;\n      formerr.sc_bessi_name = 'Name is required!';\n      setFormValidation(formerr);\n    }\n\n    var postcodeRegEx = /^[A-Z]{1,2}[0-9RCHNQ][0-9A-Z]?\\s?[0-9][ABD-HJLNP-UW-Z]{2}$|^[A-Z]{2}-?[0-9]{4}$/;\n\n    if (!formValue.post_code) {\n      error = true;\n      formerr.post_code = 'Post code is required!';\n      setFormValidation(formerr);\n    } else if (!postcodeRegEx.test(formValue.post_code.replace(/\\s+/g, '').toUpperCase())) {\n      error = true;\n      formerr.post_code = 'Post code format is not correct!';\n      setFormValidation(formerr);\n    }\n\n    return error;\n  };\n\n  const handleToChange = e => {\n    const formvalue = { ...formValue\n    };\n    const formvalidation = { ...fromValidation\n    };\n    const fieldName = e.target.name;\n    var fieldValue = '';\n    formvalidation[fieldName] = '';\n\n    if (fieldName === 'mobile_no') {\n      if (formvalue[fieldName] == '') {\n        fieldValue = e.target.value.trim();\n      }\n\n      if (isNaN(e.target.value)) {\n        fieldValue = '';\n      } else {\n        fieldValue = e.target.value;\n      }\n\n      formvalue[fieldName] = fieldValue;\n      setFormValue(formvalue);\n      setFormValidation(formvalidation);\n    } else {\n      if (formvalue[fieldName] == '') {\n        fieldValue = e.target.value.trim();\n      } else {\n        fieldValue = e.target.value;\n      }\n\n      formvalue[fieldName] = fieldValue;\n      setFormValue(formvalue);\n      setFormValidation(formvalidation);\n    }\n  };\n\n  const handleToSubmit = () => {\n    if (handlevalidation()) return false;\n    const dataTosend = { ...formValue\n    };\n    dataTosend.account_type = accountType; // delete dataTosend.confirmpassord;\n\n    console.log('Data to send');\n    console.log(dataTosend);\n    props.noRegister(dataTosend, history);\n  };\n\n  const handleRediect = () => {\n    window.location.assign('https://rymindr.com/policy/');\n  }; // useEffect(() => {\n  //   error2 && enqueueSnackbar(error2, { variant: 'error' });\n  // }, [error2]);\n\n\n  useEffect(() => {\n    let mounted = true;\n    setTimeout(function () {\n      if (mounted) {\n        error2 && enqueueSnackbar(error2, {\n          variant: 'error'\n        });\n      }\n    }, 0);\n    return function cleanup() {\n      mounted = false;\n    };\n  }, [error2]);\n  const userId = localStorage.getItem('token');\n  let authRedirect = null;\n\n  if (userId) {\n    authRedirect = /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 20\n      }\n    });\n  }\n\n  console.log(error2);\n  return /*#__PURE__*/React.createElement(GridStyled, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: \"loginBg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 5\n    }\n  }, authRedirect, /*#__PURE__*/React.createElement(PaperStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: 130\n    },\n    src: require('../../assets/images/login_logo.png'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TypoStyled, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }, \"Create New Account\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardBoxContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: accountType === 'Education' ? 'cardBox active' : 'cardBox',\n    onClick: () => setAccountType('Education'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../assets/images/education.svg'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ButtonTypoStyled, {\n    variant: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, \"Education\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: accountType === 'Business' ? 'cardBox active' : 'cardBox',\n    onClick: () => setAccountType('Business'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../assets/images/business.svg'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ButtonTypoStyled, {\n    variant: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, \"Business\"))), /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      letterSpacing: 1.25,\n      fontWeight: '500',\n      fontSize: 14,\n      marginBottom: 40\n    },\n    variant: \"body1\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 10\n    }\n  }, accountType === 'Business' ? 'Sign up here if you are a business establishment. For example a fast food service, service provider, Pharmacy, Hairdresser, health care provider etc.' : 'Sign up here if you are a educational establishment. For example a school, college, nursery.'), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    spacing: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"schoolname\",\n    onChange: handleToChange,\n    name: \"sc_bessi_name\",\n    value: formValue.sc_bessi_name,\n    label: accountType === 'Business' ? 'Business Name' : 'School Name',\n    variant: \"outlined\",\n    fullWidth: true,\n    error: !!fromValidation.sc_bessi_name,\n    helperText: fromValidation.sc_bessi_name,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    spacing: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"address\",\n    onChange: handleToChange,\n    name: \"address\",\n    value: formValue.address,\n    label: \"Address\",\n    variant: \"outlined\",\n    fullWidth: true,\n    error: !!fromValidation.address,\n    helperText: fromValidation.address,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"postcode\",\n    onChange: handleToChange,\n    name: \"post_code\",\n    value: formValue.post_code,\n    label: \"Postcode\",\n    variant: \"outlined\",\n    fullWidth: true,\n    error: !!fromValidation.post_code,\n    helperText: fromValidation.post_code,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"email\",\n    name: \"email\",\n    label: \"Email\",\n    variant: \"outlined\",\n    fullWidth: true,\n    value: formValue.email,\n    onChange: handleToChange,\n    error: !!fromValidation.email,\n    helperText: fromValidation.email,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"contact_person\",\n    name: \"contact_person\",\n    label: \"Contact Person\",\n    variant: \"outlined\",\n    fullWidth: true,\n    value: formValue.contact_person,\n    onChange: handleToChange,\n    error: !!fromValidation.contact_person,\n    helperText: fromValidation.contact_person,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"mobile_no\",\n    name: \"mobile_no\",\n    label: \"Contact Number\",\n    variant: \"outlined\",\n    fullWidth: true,\n    value: formValue.mobile_no,\n    onChange: handleToChange,\n    error: !!fromValidation.mobile_no,\n    helperText: fromValidation.mobile_no,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    error: !!fromValidation.password,\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 15\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: values.showPassword ? 'text' : 'password',\n    fullWidth: true,\n    name: \"password\",\n    value: formValue.password,\n    onChange: handleToChange,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 21\n      }\n    }, values.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 46\n      }\n    }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 63\n      }\n    }))),\n    labelWidth: 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 15\n    }\n  }, fromValidation.password))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    error: !!fromValidation.confirm_password,\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-confirm-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-confirm-password\",\n    type: values.showConfirmPassword ? 'text' : 'password',\n    fullWidth: true,\n    name: \"confirm_password\",\n    value: formValue.confirm_password,\n    onChange: handleToChange,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowConfirmPassword,\n      onMouseDown: handleMouseDownPassword,\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 21\n      }\n    }, values.showConfirmPassword ? /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 70\n      }\n    }))),\n    labelWidth: 130,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 15\n    }\n  }, fromValidation.confirm_password))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 7,\n    xs: 12,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexDirection: \"row\",\n    style: {\n      textAlign: 'left',\n      cursor: 'pointer',\n      color: '\t#484848'\n    },\n    onClick: generatePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 13\n    }\n  }, \"Suggest Password\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 7,\n    xs: 12,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexDirection: \"row\",\n    style: {\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      fontSize: 14,\n      fontWeight: '500'\n    },\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 15\n    }\n  }, \"By clicking Create Account I agree to Rymindr \"), /*#__PURE__*/React.createElement(LinkStyled, {\n    style: {\n      fontSize: 14,\n      fontWeight: '500'\n    },\n    onClick: () => {\n      window.open('https://rymindr.com/policy/', '_blank');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 15\n    }\n  }, \"Terms & Conditions, Privacy Policy.\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 5,\n    xs: 12,\n    spacing: 5,\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      fontSize: 14,\n      fontWeight: '500'\n    },\n    onClick: handleToSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 13\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 27\n    }\n  }), \"Create an Account\"))), /*#__PURE__*/React.createElement(Box, {\n    flexDirection: \"row\",\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      fontSize: 14,\n      fontWeight: '500'\n    },\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 11\n    }\n  }, \"Already have an account? \"), /*#__PURE__*/React.createElement(LinkStyled, {\n    style: {\n      fontSize: 14,\n      fontWeight: '500'\n    },\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error2: state.auth.error2\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    noRegister: (data, history) => dispatch(register(data, history))\n  };\n};\n\nRegister.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  noRegister: PropTypes.func.isRequired,\n  error2: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(Register));","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/Register/Register.js"],"names":["Box","Button","FormControl","FormHelperText","Grid","IconButton","InputAdornment","InputLabel","OutlinedInput","Paper","TextField","Typography","Link","useHistory","Redirect","React","useEffect","useState","CircularSpinner","PropTypes","Visibility","VisibilityOff","connect","img","register","styled","withSnackbar","generator","GridStyled","height","PaperStyled","width","textAlign","padding","borderRadius","TypoStyled","theme","fontSize","marginTop","fontWeight","textTransform","LinkStyled","color","palette","primary","main","textDecoration","ButtonTypoStyled","formFields","email","password","platform","account_type","address","sc_bessi_name","post_code","mobile_no","contact_person","confirm_password","Register","props","history","enqueueSnackbar","error2","loading","values","setValues","amount","weight","weightRange","showPassword","formValue","setFormValue","fromValidation","setFormValidation","accountType","setAccountType","handleClickShowPassword","handleClickShowConfirmPassword","showConfirmPassword","generatePassword","pwd","generate","length","lowercase","uppercase","numbers","symbols","FormValue","console","log","handleMouseDownPassword","event","preventDefault","handlevalidation","error","formerr","test","upperCaseLetters","match","charAt","isNaN","postcodeRegEx","replace","toUpperCase","handleToChange","e","formvalue","formvalidation","fieldName","target","name","fieldValue","value","trim","handleToSubmit","dataTosend","noRegister","handleRediect","window","location","assign","mounted","setTimeout","variant","cleanup","userId","localStorage","getItem","authRedirect","require","letterSpacing","marginBottom","cursor","open","mapStateToProps","state","auth","mapDispatchToProps","dispatch","data","propTypes","func","isRequired","bool","string"],"mappings":"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","sourcesContent":["import {\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Paper,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Link, useHistory,Redirect } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport CircularSpinner from '../../component/CircularSpinner/index';\nimport PropTypes from 'prop-types';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { connect } from 'react-redux';\nimport img from '../../assets/images/login_bg.png';\nimport { register } from '../../store/actions/auth';\nimport { styled } from '@material-ui/core/styles';\nimport { withSnackbar } from 'notistack';\nimport generator from \"generate-password\";\n\nconst GridStyled = styled(Grid)({\n  height: '100vh',\n});\n\nconst PaperStyled = styled(Paper)({\n  width: 783,\n  textAlign: 'center',\n  padding: 40,\n  // boxShadow: 0px 3px 6px #40576A29;\n  borderRadius: 10\n});\n\nconst TypoStyled = styled(Typography)(({ theme }) => ({\n  fontSize: 24,\n  marginTop: 20,\n  fontWeight: 'bold',\n  textTransform: 'uppercase',\n}));\n\nconst LinkStyled = styled(Link)(({ theme }) => ({\n  color: theme.palette.primary.main,\n  textDecoration: 'none',\n}));\n\nconst ButtonTypoStyled = styled(Typography)(({ theme }) => ({\n  color: theme.palette.primary.main,\n}));\n\nconst formFields = {\n  email: null,\n  password: null,\n  platform: 'desktop',\n  account_type: '',\n  address: '',\n  sc_bessi_name: '',\n  post_code: '',\n  mobile_no: '',\n  contact_person: '',\n  confirm_password: ''\n};\n\nconst Register = (props) => {\n  const history = useHistory();\n  const { enqueueSnackbar, error2, loading } = props;\n  const [values, setValues] = useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n  const [formValue, setFormValue] = useState(formFields);\n  const [fromValidation, setFormValidation] = useState(formFields);\n  const [accountType, setAccountType] = useState('Education');\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  const handleClickShowConfirmPassword = () => {\n    setValues({ ...values, showConfirmPassword: !values.showConfirmPassword });\n  };\n\n  const generatePassword = () => {\n    const pwd = generator.generate({\n      length: 12,\n      lowercase: true,\n      uppercase: true,\n      numbers: true,\n      symbols: false\n    });\n    const FormValue= {...formValue}\n    FormValue.password=pwd;\n    FormValue.confirm_password=pwd\n    setFormValue(FormValue)\n    console.log('formValue-',formValue)\n  }\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handlevalidation = () => {\n    let error = false;\n    // var phoneno = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    // var phoneno = /((0)|((\\+|00)447)){1}[0-9]{10}\\b/\n    const formerr = { ...fromValidation };\n    if (!formValue.email) {\n      error = true;\n      formerr.email = 'Email is required!';\n      setFormValidation(formerr);\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(formValue.email)) {\n      error = true;\n      formerr.email = 'Invalid email address';\n      setFormValidation(formerr);\n    }\n    var upperCaseLetters = /[A-Z]/g;\n    var numbers = /[0-9]/g;\n    if (!formValue.password) {\n      error = true;\n      formerr.password = 'Password is required!';\n      setFormValidation(formerr);\n    }\n    else if (!(formValue.password).match(upperCaseLetters)) {\n      error = true;\n      formerr.password = 'Password must contain an upper case letter!';\n      setFormValidation(formerr);\n    }\n    else if (!(formValue.password).match(numbers)) {\n      error = true;\n      formerr.password = 'Password must contain a digit!';\n      setFormValidation(formerr);\n    }\n    if (!formValue.mobile_no) {\n      error = true;\n      formerr.mobile_no = 'Mobile no. is required!';\n      setFormValidation(formerr);\n    }\n    else if (!((formValue.mobile_no).charAt(0) == \"0\")) {\n      error = true;\n      formerr.mobile_no = 'Invalid Mobile no.!';\n      setFormValidation(formerr);\n    }\n    else if (isNaN(formValue.mobile_no)) {\n      error = true;\n      formerr.mobile_no = 'Invalid Mobile no.!';\n      setFormValidation(formerr);\n    }\n    if(!formValue.contact_person){\n      error = true;\n      formerr.contact_person = 'Contact Person is required!';\n      setFormValidation(formerr);\n    }\n    if (!formValue.confirm_password) {\n      error = true;\n      formerr.confirm_password = 'Confirm Password is required!';\n      setFormValidation(formerr);\n    } else if(formValue.password !== formValue.confirm_password){\n      error = true;\n      formerr.confirm_password = 'Password not matched!';\n      setFormValidation(formerr);\n    }\n\n    // else if (!(formValue.mobile_no).match(phoneno)) {\n    //   error = true;\n    //   formerr.mobile_no = 'Invalid Mobile no.!';\n    //   setFormValidation(formerr);\n    // }\n\n    // if (formValue.confirmpassord && formValue.password && formValue.confirmpassord !== formValue.password) {\n    //   error = true;\n    //   formerr.confirmpassord = 'password and confirm password should be same.';\n    //   setFormValidation(formerr);\n    // }\n\n    if (!formValue.address) {\n      error = true;\n      formerr.address = 'Address is required!';\n      setFormValidation(formerr);\n    }\n    if (!formValue.sc_bessi_name) {\n      error = true;\n      formerr.sc_bessi_name = 'Name is required!';\n      setFormValidation(formerr);\n    }\n    var postcodeRegEx = /^[A-Z]{1,2}[0-9RCHNQ][0-9A-Z]?\\s?[0-9][ABD-HJLNP-UW-Z]{2}$|^[A-Z]{2}-?[0-9]{4}$/;\n\n    if (!formValue.post_code) {\n      error = true;\n      formerr.post_code = 'Post code is required!';\n      setFormValidation(formerr);\n    }\n    else if (!postcodeRegEx.test((formValue.post_code).replace(/\\s+/g, '').toUpperCase())) {\n      error = true;\n      formerr.post_code = 'Post code format is not correct!';\n      setFormValidation(formerr);\n    }\n    return error;\n  };\n\n  const handleToChange = (e) => {\n    const formvalue = { ...formValue };\n    const formvalidation = { ...fromValidation };\n    const fieldName = e.target.name;\n    var fieldValue = '';\n    formvalidation[fieldName] = '';\n    if (fieldName === 'mobile_no') {\n      if (formvalue[fieldName] == '') {\n        fieldValue = (e.target.value).trim();\n      }\n      if (isNaN(e.target.value)){\n        fieldValue = ''\n      }\n      else {\n        fieldValue = e.target.value\n      }\n      formvalue[fieldName] = fieldValue;\n      setFormValue(formvalue);\n      setFormValidation(formvalidation);\n    }\n    else {\n      if (formvalue[fieldName] == '') {\n        fieldValue = (e.target.value).trim();\n      }\n      else {\n        fieldValue = e.target.value\n      }\n      formvalue[fieldName] = fieldValue;\n      setFormValue(formvalue);\n      setFormValidation(formvalidation);\n    }\n  };\n\n  const handleToSubmit = () => {\n    if (handlevalidation()) return false;\n    const dataTosend = { ...formValue };\n    dataTosend.account_type = accountType;\n    // delete dataTosend.confirmpassord;\n    console.log('Data to send');\n    console.log(dataTosend);\n    props.noRegister(dataTosend, history);\n  };\n\n  const handleRediect = () => {\n    window.location.assign('https://rymindr.com/policy/');\n  };\n\n  // useEffect(() => {\n    \n  //   error2 && enqueueSnackbar(error2, { variant: 'error' });\n  // }, [error2]);\n\n\n  useEffect(() => {\n    let mounted = true\n    setTimeout(function(){\n      \n      if(mounted){\n        error2 && enqueueSnackbar(error2, { variant: 'error' })\n      }\n    },0)\n    return function cleanup() {\n        mounted = false\n    }\n  }, [error2])\n\n\n  const userId = localStorage.getItem('token');\n  let authRedirect = null;\n  if (userId) {\n    authRedirect = <Redirect to=\"/dashboard\" />;\n  }\n  console.log(error2)\n  return (\n    <GridStyled container justify=\"center\" alignItems=\"center\" className=\"loginBg\">\n       {authRedirect}\n      <PaperStyled>\n        <img style={{width: 130}} src={require('../../assets/images/login_logo.png')} />\n        <TypoStyled variant=\"h6\">Create New Account</TypoStyled>\n        <div className=\"cardBoxContainer\">\n          <div\n            className={accountType === 'Education' ? 'cardBox active' : 'cardBox'}\n            onClick={() => setAccountType('Education')}\n          >\n            <img src={require('../../assets/images/education.svg')} />\n            <ButtonTypoStyled variant=\"button\">Education</ButtonTypoStyled>\n          </div>\n          <div\n            className={accountType === 'Business' ? 'cardBox active' : 'cardBox'}\n            onClick={() => setAccountType('Business')}\n          >\n            <img src={require('../../assets/images/business.svg')} />\n            <ButtonTypoStyled variant=\"button\">Business</ButtonTypoStyled>\n          </div>\n        </div>\n        {/* <Typography style={{letterSpacing: 1.25, fontWeight: '500', fontSize: 14, marginBottom: 40}} variant=\"body1\" component=\"p\">\n          Sign up here if you are a {accountType === 'Business' ? 'business' : 'educational'}  establishment. For example a school, college, nursery.\n        </Typography> */}\n\n         <Typography style={{letterSpacing: 1.25, fontWeight: '500', fontSize: 14, marginBottom: 40}} variant=\"body1\" component=\"p\">\n         {accountType === 'Business' ? 'Sign up here if you are a business establishment. For example a fast food service, service provider, Pharmacy, Hairdresser, health care provider etc.' : 'Sign up here if you are a educational establishment. For example a school, college, nursery.'}\n        </Typography>\n\n        <Grid container spacing={1}>\n          <Grid item md={6} xs={12}  spacing={8}>\n            <TextField\n              id=\"schoolname\"\n              onChange={handleToChange}\n              name=\"sc_bessi_name\"\n              value={formValue.sc_bessi_name}\n              label={accountType === 'Business' ? 'Business Name' : 'School Name'}\n              variant=\"outlined\"\n              fullWidth\n              error={!!fromValidation.sc_bessi_name}\n              helperText={fromValidation.sc_bessi_name}\n              margin=\"normal\"\n            />\n          </Grid>\n          <Grid item  md={6} xs={12} spacing={8}>\n            <TextField\n              id=\"address\"\n              onChange={handleToChange}\n              name=\"address\"\n              value={formValue.address}\n              label=\"Address\"\n              variant=\"outlined\"\n              fullWidth\n              error={!!fromValidation.address}\n              helperText={fromValidation.address}\n              margin=\"normal\"\n            />\n          </Grid>\n          <Grid item  md={6} xs={12} spacing={5}>\n            <TextField\n              id=\"postcode\"\n              onChange={handleToChange}\n              name=\"post_code\"\n              value={formValue.post_code}\n              label=\"Postcode\"\n              variant=\"outlined\"\n              fullWidth\n              error={!!fromValidation.post_code}\n              helperText={fromValidation.post_code}\n              margin=\"normal\"\n            />\n          </Grid>\n          <Grid item  md={6} xs={12} spacing={5}>\n            <TextField\n              id=\"email\"\n              name=\"email\"\n              label=\"Email\"\n              variant=\"outlined\"\n              fullWidth\n              value={formValue.email}\n              onChange={handleToChange}\n              error={!!fromValidation.email}\n              helperText={fromValidation.email}\n              margin=\"normal\"\n            />\n          </Grid>\n          <Grid item  md={6} xs={12} spacing={5}>\n          <TextField\n              id=\"contact_person\"\n              name=\"contact_person\"\n              label=\"Contact Person\"\n              variant=\"outlined\"\n              fullWidth\n              value={formValue.contact_person}\n              onChange={handleToChange}\n              error={!!fromValidation.contact_person}\n              helperText={fromValidation.contact_person}\n              margin=\"normal\"\n            />\n          </Grid>\n          <Grid item  md={6} xs={12} spacing={5}>\n            <TextField\n              id=\"mobile_no\"\n              name=\"mobile_no\"\n              label=\"Contact Number\"\n              variant=\"outlined\"\n              fullWidth\n              value={formValue.mobile_no}\n              onChange={handleToChange}\n              error={!!fromValidation.mobile_no}\n              helperText={fromValidation.mobile_no}\n              margin=\"normal\"\n            /></Grid>\n               <Grid item  md={6} xs={12} spacing={5}>\n            <FormControl variant=\"outlined\" error={!!fromValidation.password} fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                type={values.showPassword ? 'text' : 'password'}\n                fullWidth\n                name=\"password\"\n                value={formValue.password}\n                onChange={handleToChange}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={70}\n              />\n              <FormHelperText>{fromValidation.password}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item md={6} xs={12} spacing={5}>\n          <FormControl variant=\"outlined\" error={!!fromValidation.confirm_password} fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-confirm-password\"\n                type={values.showConfirmPassword ? 'text' : 'password'}\n                fullWidth\n                name=\"confirm_password\"\n                value={formValue.confirm_password}\n                onChange={handleToChange}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowConfirmPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {values.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={130}\n              />\n              <FormHelperText>{fromValidation.confirm_password}</FormHelperText>\n            </FormControl>\n          </Grid>\n          {/* <Grid item xs={6} spacing={5}>\n            <FormControl variant=\"outlined\" error={!!fromValidation.confirmpassord} fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"outlined-adornment-password\">Confirm Password</InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password\"\n                type={values.showPassword ? 'text' : 'password'}\n                name=\"confirmpassord\"\n                value={formValue.confirmpassord}\n                onChange={handleToChange}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                labelWidth={135}\n              />\n              <FormHelperText>{fromValidation.confirmpassord}</FormHelperText>\n            </FormControl>\n          </Grid> */}\n\n          <Grid item  md={7} xs={12} spacing={5}>\n            <Box flexDirection=\"row\" style={{ textAlign: 'left', cursor: 'pointer',color: '\t#484848',  }} onClick ={generatePassword}>\n             Suggest Password\n            </Box>\n          </Grid>\n          <Grid item  md={7} xs={12} spacing={5}>\n            <Box flexDirection=\"row\" style={{ textAlign: 'left' }}>\n              <Typography style={{fontSize: 14, fontWeight: '500'}} component=\"span\">By clicking Create Account I agree to Rymindr </Typography>\n              <LinkStyled style={{fontSize: 14, fontWeight: '500'}} onClick={() => { window.open('https://rymindr.com/policy/', '_blank'); }}>Terms & Conditions, Privacy Policy.</LinkStyled>\n            </Box>\n          </Grid>\n          <Grid item md={5} xs={12} spacing={5} style={{ textAlign: 'right' }}>\n            <Button style={{fontSize: 14, fontWeight: '500'}} onClick={handleToSubmit} variant=\"contained\" color=\"primary\" size=\"large\" disabled={loading}>\n              {loading && <CircularSpinner />}\n              Create an Account\n            </Button>\n          </Grid>\n        </Grid>\n        <Box flexDirection=\"row\" mt={4}>\n          <Typography style={{fontSize: 14, fontWeight: '500'}} component=\"span\">Already have an account? </Typography>\n          <LinkStyled style={{fontSize: 14, fontWeight: '500'}} to=\"/login\">Login</LinkStyled>\n        </Box>\n      </PaperStyled>\n    </GridStyled>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.auth.loading,\n    error2: state.auth.error2,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    noRegister: (data, history) => dispatch(register(data, history)),\n  };\n};\n\nRegister.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  noRegister: PropTypes.func.isRequired,\n  error2: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(Register));\n"]},"metadata":{},"sourceType":"module"}