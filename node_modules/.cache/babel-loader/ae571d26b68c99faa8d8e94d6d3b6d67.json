{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/Layout/Notification/Notification.js\";\nimport { Box, IconButton, ListItem, ListItemText, Menu, Typography, Badge, List, ListItemAvatar, Avatar } from '@material-ui/core';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { getNotifications, notificationRead } from '../../../store/actions/notificationActions';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuDropBox: {\n    width: 600,\n    marginTop: 10\n  },\n  notifyBlockUnread: {\n    backgroundColor: 'rgba(206,226,241, 0.3)',\n    borderRadius: 15\n  },\n  notifyBlockRead: {\n    backgroundColor: 'white'\n  }\n}));\nconst AvatarStyled = styled(Avatar)({\n  height: 48,\n  width: 48,\n  marginRight: 10\n});\nconst TypoNameUnreadStyled = styled(Typography)({\n  color: '#00000',\n  fontWeight: 600\n});\nconst TypoNameReadStyled = styled(Typography)({\n  color: '#b3bcc3',\n  fontWeight: 600\n});\nconst TypoTimeStyled = styled(Typography)({\n  color: '#b3bcc3',\n  float: 'right'\n});\nconst BoxStyled = styled(Box)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 20px'\n});\nconst TypoPopHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600'\n}));\nconst LinkStyled = styled(Link)(({\n  theme\n}) => ({\n  color: theme.palette.primary.main,\n  padding: '0 !important',\n  textDecoration: 'none',\n  fontWeight: '600'\n}));\nconst TypoNotiUnreadStyled = styled(Typography)(({\n  theme\n}) => ({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  color: theme.palette.text.secondary\n}));\nconst TypoNotiReadStyled = styled(Typography)(({\n  theme\n}) => ({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  color: '#67696d'\n}));\n\nconst Notifications = props => {\n  const history = useHistory();\n  const {\n    user_id\n  } = JSON.parse(localStorage.getItem('userData'));\n  const {\n    getNotifications,\n    notificationRead,\n    notifications\n  } = props;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const badge = () => {\n    var count = 0; // console.warn('notifications3333', notifications)\n\n    notifications.map(item => {\n      if (item.status == 0) count++;\n    });\n    return count;\n  };\n\n  const updateNotifications = () => {\n    const dataToSend = {\n      user_id,\n      offset: 0,\n      limit: 20\n    };\n    getNotifications(dataToSend);\n  }; // const handleRead = (notificationId, url, rymindr_date, rymindr_time) => {\n\n\n  const handleNotification = notification => {\n    setAnchorEl(null);\n    console.log('notification===', notification);\n    console.log('notifications === ', notifications);\n    let tempURL = notification.url ? notification.url.split('/') : '';\n\n    if (new Date(notification.rymindr_date + ' ' + notification.rymindr_time) < new Date()) {\n      // console.log('tempURL22===',tempURL);\n      // return false;\n      handleRead(notification.id, '/history-rymindrs', notification.notification_type, notification.post_id);\n    } else {\n      // handleRead(\n      //   notification.id,\n      //   tempURL[1],\n      //   notification.notification_type,\n      //   notification.post_id,\n      //   notification.recr_post_id\n      //  )\n      if (notification.notification_type == 'booking' || notification.notification_type == \"booking_comment\") {\n        console.log('notification', notification);\n        handleRead(notification.id, tempURL[1], notification.notification_type, notification.post_id, notification.recr_post_id, null);\n      } else if (notification.notification_type == 'connention_request') {\n        handleRead(notification.id, tempURL[1], notification.notification_type, null, null, notification.user_id);\n      } else if (notification.notification_type == \"request_for_quick_rymindr\") {\n        handleRead(notification.id, tempURL[1], notification.notification_type, notification.post_id);\n      } else if (notification.notification_type == 'accepted_quick_rymindr') {\n        handleRead(notification.id, tempURL[1], notification.notification_type, null, null, notification.user_id);\n      } else if (notification.notification_type == 'exam_form') {\n        handleRead(notification.id, notification.url, notification.notification_type, notification.post_id, notification.recr_post_id, null);\n      }\n    } // if(url !== null) {console.log(url);\n    //   history.push(url);\n    // }\n    // const dataToSend = {\n    //   user_id,\n    //   notification_id: notificationId\n    // }\n    // notificationRead(dataToSend);\n\n  };\n\n  const handleRead = (notificationId, url, notification_type, post_id, recr_post_id, connection_id) => {\n    // if(notification_type == 'booking' || notification_type == \"booking_comment\") {\n    //   history.push({\n    //     pathname: '/bookings',\n    //     state: { post_id: post_id, recr_post_id: recr_post_id }\n    // })\n    // }\n    if (notification_type == 'booking' || notification_type == \"booking_comment\") {\n      history.push({\n        pathname: '/bookings',\n        state: {\n          post_id: post_id,\n          recr_post_id: recr_post_id\n        }\n      });\n    } else if (notification_type == 'connention_request') {\n      history.push({\n        pathname: '/contacts',\n        state: {\n          connection_id: connection_id\n        }\n      });\n    } else if (notification_type == 'accepted_quick_rymindr') {\n      history.push({\n        pathname: '/contacts',\n        state: {\n          connection_id: connection_id\n        }\n      });\n    } else if (notification_type == 'exam_form') {\n      history.push({\n        pathname: url,\n        state: {\n          post_id: post_id,\n          recr_post_id: recr_post_id\n        }\n      });\n    } else {\n      //if (url) history.push(url)\n      if (url) {\n        history.push({\n          pathname: url,\n          state: {\n            post_id: post_id\n          }\n        });\n      }\n    }\n\n    const dataToSend = {\n      user_id,\n      notification_id: notificationId\n    };\n    notificationRead(dataToSend);\n  };\n\n  useEffect(() => {\n    updateNotifications();\n    const interval = setInterval(() => updateNotifications(), 15000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []); // console.warn('notifications123', notifications)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"mt-5\",\n    \"aria-label\": \"Show notifications\",\n    color: \"primary\",\n    onClick: handleMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: badge(),\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NotificationsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Menu, {\n    id: \"menu-appbar\",\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className: classes.Menu,\n    keepMounted: true,\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.menuDropBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BoxStyled, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TypoPopHeadStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, \"Notifications\"), /*#__PURE__*/React.createElement(LinkStyled, {\n    to: \"/notification\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, \"See All\")), /*#__PURE__*/React.createElement(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, notifications.map((notification, index) => {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      alignItems: \"flex-start\",\n      onClick: () => handleNotification(notification // notification.id,\n      // notification.url,\n      // notification.rymindr_date,\n      // notification.rymindr_time\n      ),\n      className: notification.status == 0 ? classes.notifyBlockUnread : classes.notifyBlockRead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AvatarStyled, {\n      alt: notification.title,\n      src: notification.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      noWrap: true,\n      primary: /*#__PURE__*/React.createElement(Box, {\n        width: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 19\n        }\n      },\n      /*#__PURE__*/\n      // (notification.status == 0)?\n      React.createElement(TypoNameUnreadStyled, {\n        variant: \"body2\",\n        component: \"span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }\n      }, notification.title) // :\n      // <TypoNameReadStyled variant='body2' component='span'>{notification.title}</TypoNameReadStyled>\n      , /*#__PURE__*/React.createElement(TypoTimeStyled, {\n        variant: \"caption\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }\n      }, notification.time)),\n      secondary:\n      /*#__PURE__*/\n      // (notification.status == 0)?\n      React.createElement(TypoNotiUnreadStyled, {\n        variant: \"body1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 19\n        }\n      }, notification.text) // :\n      // <TypoNotiReadStyled variant='body1'>{notification.text}</TypoNotiReadStyled>\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 15\n      }\n    }));\n  }), notifications.length == 0 && /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    width: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 74\n    }\n  }, /*#__PURE__*/React.createElement(TypoNotiUnreadStyled, {\n    variant: \"body2\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 92\n    }\n  }, \"Great! You're all up to date. No notifications.\"))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    notifications: state.notification.notifications\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getNotifications: data => dispatch(getNotifications(data)),\n    notificationRead: data => dispatch(notificationRead(data))\n  };\n};\n\nNotifications.propTypes = {\n  getNotifications: PropTypes.func.isRequired,\n  notificationRead: PropTypes.func.isRequired,\n  notifications: PropTypes.array.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications);","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/Layout/Notification/Notification.js"],"names":["Box","IconButton","ListItem","ListItemText","Menu","Typography","Badge","List","ListItemAvatar","Avatar","BrowserRouter","Router","Switch","Route","Link","getNotifications","notificationRead","NotificationsIcon","PropTypes","connect","React","useEffect","useState","makeStyles","styled","useHistory","useStyles","theme","root","flexGrow","menuDropBox","width","marginTop","notifyBlockUnread","backgroundColor","borderRadius","notifyBlockRead","AvatarStyled","height","marginRight","TypoNameUnreadStyled","color","fontWeight","TypoNameReadStyled","TypoTimeStyled","float","BoxStyled","borderBottom","padding","TypoPopHeadStyled","palette","secondary","contrastText","fontSize","LinkStyled","primary","main","textDecoration","TypoNotiUnreadStyled","whiteSpace","overflow","textOverflow","text","TypoNotiReadStyled","Notifications","props","history","user_id","JSON","parse","localStorage","getItem","notifications","classes","anchorEl","setAnchorEl","open","Boolean","handleMenu","event","currentTarget","handleClose","badge","count","map","item","status","updateNotifications","dataToSend","offset","limit","handleNotification","notification","console","log","tempURL","url","split","Date","rymindr_date","rymindr_time","handleRead","id","notification_type","post_id","recr_post_id","notificationId","connection_id","push","pathname","state","notification_id","interval","setInterval","clearInterval","vertical","horizontal","index","title","image","time","length","mapStateToProps","mapDispatchToProps","dispatch","data","propTypes","func","isRequired","array"],"mappings":"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","sourcesContent":["import { Box, IconButton, ListItem, ListItemText, Menu, Typography, Badge, List, ListItemAvatar, Avatar } from '@material-ui/core'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport {\n  getNotifications,\n  notificationRead\n} from '../../../store/actions/notificationActions';\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport React, { useEffect, useState } from 'react'\nimport { makeStyles, styled } from '@material-ui/core/styles'\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  menuDropBox: {\n    width: 600, marginTop: 10\n  },\n  notifyBlockUnread: {\n    backgroundColor: 'rgba(206,226,241, 0.3)',\n    borderRadius: 15\n  },\n  notifyBlockRead: {\n    backgroundColor: 'white'\n  }\n}))\n\nconst AvatarStyled = styled(Avatar)({\n  height: 48,\n  width: 48,\n  marginRight: 10\n})\n\nconst TypoNameUnreadStyled = styled(Typography)({\n  color: '#00000',\n  fontWeight: 600\n})\n\nconst TypoNameReadStyled = styled(Typography)({\n  color: '#b3bcc3',\n  fontWeight: 600\n})\n\nconst TypoTimeStyled = styled(Typography)({\n  color: '#b3bcc3',\n  float: 'right'\n})\n\nconst BoxStyled = styled(Box)({\n  borderBottom: '1px solid #e0e0e0',\n  padding: '10px 20px'\n})\n\nconst TypoPopHeadStyled = styled(Typography)(({ theme }) => ({\n  color: theme.palette.secondary.contrastText,\n  fontSize: 18,\n  fontWeight: '600'\n}))\n\nconst LinkStyled = styled(Link)(({ theme }) => ({\n  color: theme.palette.primary.main,\n  padding: '0 !important',\n  textDecoration: 'none',\n  fontWeight: '600'\n}))\n\nconst TypoNotiUnreadStyled = styled(Typography)(({ theme }) => ({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  color: theme.palette.text.secondary\n}))\n\nconst TypoNotiReadStyled = styled(Typography)(({ theme }) => ({\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  color: '#67696d'\n}))\n\nconst Notifications = (props) => {\n\n  const history = useHistory();\n  const { user_id } = JSON.parse(localStorage.getItem('userData'));\n\n  const {\n    getNotifications,\n    notificationRead,\n    notifications\n  } = props;\n\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const open = Boolean(anchorEl)\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const badge = () => {\n    var count = 0;\n    // console.warn('notifications3333', notifications)\n    notifications.map((item) => {\n      if(item.status == 0) count++;\n    })\n\n    return count;\n  }\n\n  const updateNotifications = () => {\n    const dataToSend = {\n      user_id,\n      offset: 0,\n      limit: 20\n    }\n    getNotifications(dataToSend);\n  }\n\n  // const handleRead = (notificationId, url, rymindr_date, rymindr_time) => {\n    const handleNotification = (notification) => {\n    setAnchorEl(null);\n      console.log('notification===',notification);\n      console.log('notifications === ',notifications);\n\n      \n    let tempURL = (notification.url) ? (notification.url).split('/') : '';\n    \n    if(new Date(notification.rymindr_date + ' ' + notification.rymindr_time) < new Date()) {\n\n      // console.log('tempURL22===',tempURL);\n      // return false;\n      handleRead(\n        notification.id,\n        '/history-rymindrs',\n        notification.notification_type,\n        notification.post_id\n       )\n    }\n    else {\n      // handleRead(\n      //   notification.id,\n      //   tempURL[1],\n      //   notification.notification_type,\n      //   notification.post_id,\n      //   notification.recr_post_id\n      //  )\n      if(notification.notification_type == 'booking' || notification.notification_type == \"booking_comment\") {\n        console.log('notification',notification)\n        handleRead(\n          notification.id,\n          tempURL[1],\n          notification.notification_type,\n          notification.post_id,\n          notification.recr_post_id,\n          null\n        )\n      }\n      else if(notification.notification_type == 'connention_request') {\n        handleRead(\n          notification.id,\n          tempURL[1],\n          notification.notification_type,\n          null, null,\n          notification.user_id\n        )\n      } else if(notification.notification_type == \"request_for_quick_rymindr\") {\n        handleRead(\n          notification.id,\n          tempURL[1],\n          notification.notification_type,\n          notification.post_id\n         )\n      } else if(notification.notification_type == 'accepted_quick_rymindr') {\n        handleRead(\n          notification.id,\n          tempURL[1],\n          notification.notification_type,\n          null, null,\n          notification.user_id\n        )\n      }\n      else if (notification.notification_type == 'exam_form'){\n        handleRead(\n          notification.id,\n          notification.url,\n          notification.notification_type,\n          notification.post_id,\n          notification.recr_post_id,\n          null\n        )\n      }\n    }\n    // if(url !== null) {console.log(url);\n    //   history.push(url);\n    // }\n    // const dataToSend = {\n    //   user_id,\n    //   notification_id: notificationId\n    // }\n    // notificationRead(dataToSend);\n  }\n\n  const handleRead = (notificationId, url, notification_type, post_id, recr_post_id, connection_id) => {\n    \n    // if(notification_type == 'booking' || notification_type == \"booking_comment\") {\n    //   history.push({\n    //     pathname: '/bookings',\n    //     state: { post_id: post_id, recr_post_id: recr_post_id }\n    // })\n    // }\n\n    \n    if(notification_type == 'booking' || notification_type == \"booking_comment\") {\n      history.push({\n        pathname: '/bookings',\n        state: { post_id: post_id, recr_post_id: recr_post_id }\n      })\n    }\n    else if(notification_type == 'connention_request') {\n      history.push({\n        pathname: '/contacts',\n        state: { connection_id: connection_id }\n      })\n    } else if(notification_type == 'accepted_quick_rymindr') {\n      history.push({\n        pathname: '/contacts',\n        state: { connection_id: connection_id }\n      })\n    }\n    else if(notification_type == 'exam_form'){\n      history.push({\n        pathname: url,\n        state:{post_id: post_id, recr_post_id: recr_post_id }\n      })\n    }\n    else {\n      //if (url) history.push(url)\n      if(url){\n        history.push({\n          pathname: url,\n          state: { post_id: post_id }\n        })\n      }\n    }\n    const dataToSend = {\n      user_id,\n      notification_id: notificationId\n    }\n    notificationRead(dataToSend)\n  }\n\n  useEffect(() => {\n      updateNotifications();\n      const interval = setInterval(() => updateNotifications(), 15000);\n      return () => {\n        clearInterval(interval);\n      };\n  }, [])\n\n  // console.warn('notifications123', notifications)\n\n  return (\n    <div className={classes.root}>\n\n      <IconButton className='mt-5' aria-label='Show notifications' color='primary' onClick={handleMenu}>\n        <Badge badgeContent={badge()} color='error'>\n          <NotificationsIcon />\n        </Badge>\n      </IconButton>\n\n      <Menu\n        id='menu-appbar'\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n        className={classes.Menu}\n        keepMounted\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n        open={open}\n        onClose={handleClose}\n      >\n        <div className={classes.menuDropBox}>\n          <BoxStyled display='flex' justifyContent='space-between'>\n            <TypoPopHeadStyled>Notifications</TypoPopHeadStyled>\n            <LinkStyled to='/notification' onClick={handleClose}>See All</LinkStyled>\n          </BoxStyled>\n          <List className={classes.root}>\n            {notifications.map((notification, index) => {\n              return <ListItem\n                button\n                alignItems='flex-start'\n                onClick={() =>\n                  handleNotification(\n                    notification\n                    // notification.id,\n                    // notification.url,\n                    // notification.rymindr_date,\n                    // notification.rymindr_time\n                  )}\n                className={(notification.status == 0)? classes.notifyBlockUnread : classes.notifyBlockRead}\n                >\n              <ListItemAvatar>\n                <AvatarStyled alt={notification.title} src={notification.image} />\n              </ListItemAvatar>\n              <ListItemText\n                noWrap\n                primary={\n                  <Box width='100%'>\n                    {\n                    // (notification.status == 0)?\n                    <TypoNameUnreadStyled variant='body2' component='span'>{notification.title}</TypoNameUnreadStyled>\n                    // :\n                    // <TypoNameReadStyled variant='body2' component='span'>{notification.title}</TypoNameReadStyled>\n                    }\n                    <TypoTimeStyled variant='caption'>{notification.time}</TypoTimeStyled>\n                  </Box>\n                }\n                secondary={\n                  // (notification.status == 0)?\n                  <TypoNotiUnreadStyled variant='body1'>{notification.text}</TypoNotiUnreadStyled>\n                  // :\n                  // <TypoNotiReadStyled variant='body1'>{notification.text}</TypoNotiReadStyled>\n                }\n              />\n            </ListItem>\n            })\n            }\n            {notifications.length == 0 && <ListItem><ListItemText noWrap><Box width='100%'><TypoNotiUnreadStyled variant='body2' component='span'>Great! You're all up to date. No notifications.</TypoNotiUnreadStyled></Box></ListItemText></ListItem>}\n          </List>\n        </div>\n      </Menu>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    notifications: state.notification.notifications\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getNotifications: (data) => dispatch(getNotifications(data)),\n    notificationRead: (data) => dispatch(notificationRead(data))\n  }\n};\n\nNotifications.propTypes = {\n  getNotifications: PropTypes.func.isRequired,\n  notificationRead: PropTypes.func.isRequired,\n  notifications: PropTypes.array.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notifications)\n"]},"metadata":{},"sourceType":"module"}