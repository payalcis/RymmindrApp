{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport Axios from '../../helper/axios';\nexport const isLoading = () => {\n  return {\n    type: actionTypes.ISLOADING\n  };\n};\nexport const Success = response => {\n  return response;\n};\nexport const Fail = error => {\n  return {\n    type: actionTypes.ERROR,\n    error: error\n  };\n};\nexport const getComments = data => {\n  return dispatch => {\n    Axios().post('/comment', data).then(response => {\n      if (response.data.status === 200) {\n        dispatch(Success({\n          type: actionTypes.GETCOMMENT,\n          payload: response.data\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const addComment = data => {\n  return dispatch => {\n    Axios().post('/comment/add', data).then(response => {\n      if (response.data.status === 200) {\n        dispatch(Success({\n          type: actionTypes.GETCOMMENT,\n          payload: response.data\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const commentLike = data => {\n  return dispatch => {\n    Axios().post('/comment/like', data).then(response => {\n      if (response.data.status === 200) {\n        dispatch(Success({\n          type: actionTypes.COMMENTLIKE\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      console.log('err');\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const commentDelete = data => {\n  return dispatch => {\n    Axios().post('/comment/delete', data).then(response => {\n      if (response.data.status === 200) {\n        dispatch(Success({\n          type: actionTypes.DELETECOMMENT\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      console.log('err');\n      dispatch(Fail(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/store/actions/commentActions.js"],"names":["actionTypes","Axios","isLoading","type","ISLOADING","Success","response","Fail","error","ERROR","getComments","data","dispatch","post","then","status","GETCOMMENT","payload","message","catch","err","addComment","commentLike","COMMENTLIKE","console","log","commentDelete","DELETECOMMENT"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport Axios from '../../helper/axios';\n\nexport const isLoading = () => {\n    return {\n        type: actionTypes.ISLOADING,\n    };\n};\n\nexport const Success = (response) => {\n    return response;\n};\n\nexport const Fail = (error) => {\n    return {\n        type: actionTypes.ERROR,\n        error: error,\n    };\n};\n\nexport const getComments = (data) => {\n    return (dispatch) => {\n        Axios().post('/comment', data)\n            .then((response) => {\n                if (response.data.status === 200) {\n                    dispatch(\n                        Success({\n                            type: actionTypes.GETCOMMENT,\n                            payload: response.data\n                        })\n                    );\n                } else {\n                    dispatch(Fail(response.data.message));\n                }\n            })\n            .catch((err) => {\n                dispatch(Fail(err.message));\n            });\n    };\n};\n\nexport const addComment = (data) => {\n    return (dispatch) => {\n        Axios().post('/comment/add', data)\n            .then((response) => {\n                if (response.data.status === 200) {\n\n                    dispatch(\n                        Success({\n                            type: actionTypes.GETCOMMENT,\n                            payload: response.data\n                        })\n                    );\n                } else {\n                    dispatch(Fail(response.data.message));\n                }\n            })\n            .catch((err) => {\n                dispatch(Fail(err.message));\n            });\n    };\n};\n\nexport const commentLike = (data) => {\n    return (dispatch) => {\n        Axios().post('/comment/like', data)\n            .then((response) => {\n                if (response.data.status === 200) {\n                    dispatch(\n                        Success({\n                            type: actionTypes.COMMENTLIKE\n                        })\n                    );\n                } else {\n                    dispatch(Fail(response.data.message));\n                }\n            })\n            .catch((err) => {\n                console.log('err');\n                dispatch(Fail(err.message));\n            });\n    };\n};\n\nexport const commentDelete = (data) => {\n    return (dispatch) => {\n        Axios().post('/comment/delete', data)\n            .then((response) => {\n                if (response.data.status === 200) {\n                    dispatch(\n                        Success({\n                            type: actionTypes.DELETECOMMENT\n                        })\n                    );\n                } else {\n                    dispatch(Fail(response.data.message));\n                }\n            })\n            .catch((err) => {\n                console.log('err');\n                dispatch(Fail(err.message));\n            });\n    };\n};"]},"metadata":{},"sourceType":"module"}