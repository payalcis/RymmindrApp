{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  token: null,\n  user: null,\n  error: null,\n  error2: null,\n  loading: false,\n  loginLoading: false,\n  authRedirectPath: '/'\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START2:\n      return { ...state,\n        error: null,\n        error2: null,\n        loginLoading: true\n      };\n\n    case actionTypes.AUTH_START:\n      return { ...state,\n        error: null,\n        error2: null,\n        loading: true\n      };\n\n    case actionTypes.AUTH_SUCCESS:\n      return { ...state,\n        token: action.idToken,\n        user: action.user,\n        error: null,\n        error2: null,\n        loginLoading: false\n      };\n\n    case actionTypes.AUTH_FAIL:\n      console.log('action.error', action.error);\n      return { ...state,\n        error: action.error,\n        error2: null,\n        loginLoading: false\n      };\n\n    case actionTypes.AUTH_LOGOUT:\n      return { ...state,\n        token: null,\n        userId: null,\n        error: null,\n        error2: null\n      };\n    // case actionTypes.ISLOADING:\n    //   return {\n    //     ...state,\n    //     error: null,\n    //     loading: true,\n    //   };\n\n    case actionTypes.AUTHERROR:\n      return { ...state,\n        error2: action.error2,\n        loading: false\n      };\n\n    case actionTypes.EMAIL_VERIFY:\n      return { ...state,\n        loading: false\n      };\n\n    case actionTypes.SIGNUP:\n      return { ...state,\n        register: action.payload,\n        error: null,\n        error2: null,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/store/reducers/auth.js"],"names":["actionTypes","initialState","token","user","error","error2","loading","loginLoading","authRedirectPath","reducer","state","action","type","AUTH_START2","AUTH_START","AUTH_SUCCESS","idToken","AUTH_FAIL","console","log","AUTH_LOGOUT","userId","AUTHERROR","EMAIL_VERIFY","SIGNUP","register","payload"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,IAAI,EAAE,IAFW;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,MAAM,EAAE,IAJS;AAKjBC,EAAAA,OAAO,EAAE,KALQ;AAMjBC,EAAAA,YAAY,EAAE,KANG;AAOjBC,EAAAA,gBAAgB,EAAE;AAPD,CAArB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,WAAW,CAACa,WAAjB;AACI,aAAO,EACH,GAAGH,KADA;AAEHN,QAAAA,KAAK,EAAE,IAFJ;AAGHC,QAAAA,MAAM,EAAE,IAHL;AAIHE,QAAAA,YAAY,EAAE;AAJX,OAAP;;AAMJ,SAAKP,WAAW,CAACc,UAAjB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHN,QAAAA,KAAK,EAAE,IAFJ;AAGHC,QAAAA,MAAM,EAAE,IAHL;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAKN,WAAW,CAACe,YAAjB;AACI,aAAO,EACH,GAAGL,KADA;AAEHR,QAAAA,KAAK,EAAES,MAAM,CAACK,OAFX;AAGHb,QAAAA,IAAI,EAAEQ,MAAM,CAACR,IAHV;AAIHC,QAAAA,KAAK,EAAE,IAJJ;AAKHC,QAAAA,MAAM,EAAE,IALL;AAMHE,QAAAA,YAAY,EAAE;AANX,OAAP;;AAQJ,SAAKP,WAAW,CAACiB,SAAjB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BR,MAAM,CAACP,KAAnC;AACA,aAAO,EACH,GAAGM,KADA;AAEHN,QAAAA,KAAK,EAAEO,MAAM,CAACP,KAFX;AAGHC,QAAAA,MAAM,EAAE,IAHL;AAIHE,QAAAA,YAAY,EAAE;AAJX,OAAP;;AAMJ,SAAKP,WAAW,CAACoB,WAAjB;AACI,aAAO,EACH,GAAGV,KADA;AAEHR,QAAAA,KAAK,EAAE,IAFJ;AAGHmB,QAAAA,MAAM,EAAE,IAHL;AAIHjB,QAAAA,KAAK,EAAE,IAJJ;AAKHC,QAAAA,MAAM,EAAE;AALL,OAAP;AAOA;AACA;AACA;AACA;AACA;AACA;;AACJ,SAAKL,WAAW,CAACsB,SAAjB;AACI,aAAO,EACH,GAAGZ,KADA;AAEHL,QAAAA,MAAM,EAAEM,MAAM,CAACN,MAFZ;AAGHC,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAMJ,SAAKN,WAAW,CAACuB,YAAjB;AACI,aAAO,EACH,GAAGb,KADA;AAEHJ,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ,SAAKN,WAAW,CAACwB,MAAjB;AACI,aAAO,EACH,GAAGd,KADA;AAEHe,QAAAA,QAAQ,EAAEd,MAAM,CAACe,OAFd;AAGHtB,QAAAA,KAAK,EAAE,IAHJ;AAIHC,QAAAA,MAAM,EAAE,IAJL;AAKHC,QAAAA,OAAO,EAAE;AALN,OAAP;;AAOJ;AACI,aAAOI,KAAP;AApER;AAsEH,CAvED;;AAwEA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n    token: null,\n    user: null,\n    error: null,\n    error2: null,\n    loading: false,\n    loginLoading: false,\n    authRedirectPath: '/',\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START2:\n            return {\n                ...state,\n                error: null,\n                error2: null,\n                loginLoading: true,\n            };\n        case actionTypes.AUTH_START:\n            return {\n                ...state,\n                error: null,\n                error2: null,\n                loading: true,\n            };\n        case actionTypes.AUTH_SUCCESS:\n            return {\n                ...state,\n                token: action.idToken,\n                user: action.user,\n                error: null,\n                error2: null,\n                loginLoading: false,\n            };\n        case actionTypes.AUTH_FAIL:\n            console.log('action.error', action.error)\n            return {\n                ...state,\n                error: action.error,\n                error2: null,\n                loginLoading: false,\n            };\n        case actionTypes.AUTH_LOGOUT:\n            return {\n                ...state,\n                token: null,\n                userId: null,\n                error: null,\n                error2: null,\n            };\n            // case actionTypes.ISLOADING:\n            //   return {\n            //     ...state,\n            //     error: null,\n            //     loading: true,\n            //   };\n        case actionTypes.AUTHERROR:\n            return {\n                ...state,\n                error2: action.error2,\n                loading: false,\n            };\n\n        case actionTypes.EMAIL_VERIFY:\n            return {\n                ...state,\n                loading: false,\n            };\n\n        case actionTypes.SIGNUP:\n            return {\n                ...state,\n                register: action.payload,\n                error: null,\n                error2: null,\n                loading: false,\n            };\n        default:\n            return state;\n    }\n};\nexport default reducer;"]},"metadata":{},"sourceType":"module"}