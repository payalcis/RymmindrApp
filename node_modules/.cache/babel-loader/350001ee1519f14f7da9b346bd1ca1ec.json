{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/Rymindrs/CreateRymindr/EditRymindr.js\";\nimport { Attachment, Replay, Send, Headset, Videocam, Description } from '@material-ui/icons';\nimport { Box, Button, Checkbox, FormControlLabel, Grid, MenuItem, Paper, Switch, TextField, Typography, IconButton } from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\nimport { Link, useHistory, useParams, useLocation } from 'react-router-dom';\nimport { DatePicker, MuiPickersUtilsProvider, TimePicker } from '@material-ui/pickers';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { createRymindr, getBusinessUsers, getCategoriesRymindr, getGroups, getSubCategories, inviteAndAddMobile, getRymidrDetails, editRymindr } from '../../../store/actions/rymidr';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularSpinner from '../../../component/CircularSpinner/index'; // import ConfirmationDialogRaw from './Modal'\n\nimport MomentUtils from '@date-io/moment';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick'; // import Tabmenu from './Modal/Memberlist'\n\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { withSnackbar } from 'notistack';\nimport FileBase64 from 'react-file-base64';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport ckEditorConfig from '../../../helper/ckEditorConfig';\nimport ConfirmationDialogRaw from '../../Bookings/EventBooking/Modal';\nimport Tabmenu from '../../Bookings/EventBooking/Modal/Memberlist';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative'\n  },\n  iconAttach: {\n    color: theme.palette.primary.dark,\n    background: theme.palette.primary.light,\n    height: 32,\n    width: 32,\n    borderRadius: 60,\n    padding: 5,\n    float: 'left',\n    marginTop: -5,\n    marginRight: '10px'\n  },\n  fileName: {\n    maxWidth: 140,\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden'\n  }\n}));\nconst TypoHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 24,\n  color: theme.palette.primary.main,\n  textTransform: 'uppercase',\n  fontWeight: 'bold'\n}));\nconst TypoStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 16,\n  color: theme.palette.text.primary,\n  marginTop: 10,\n  marginBottom: 20,\n  cursor: 'pointer',\n  marginRight: 30,\n  display: 'flex'\n}));\nconst TypoHeadInnerStyled = styled(TypoHeadStyled)(({\n  theme\n}) => ({\n  color: theme.palette.text.primary\n}));\nconst PaperStyled = styled(Paper)({\n  padding: '10px 15px'\n});\nconst SlideBoxStyled = styled(Box)(() => ({\n  textAlign: 'center',\n  display: 'inline-block',\n  padding: 20,\n  borderRadius: 10,\n  '& img': {\n    display: 'inline-block',\n    height: 75,\n    width: 75\n  }\n}));\nconst SlideType = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.palette.text.primary,\n  fontSize: 16\n}));\nconst GridStyled = styled(Grid)(({\n  theme\n}) => ({\n  paddingLeft: '10rem',\n  paddingRight: '10rem',\n  [theme.breakpoints.down('md')]: {\n    paddingLeft: '8rem',\n    paddingRight: '8rem'\n  },\n  [theme.breakpoints.down('sm')]: {\n    paddingLeft: '2rem'\n  }\n}));\nconst Recurring = ['Daily', 'Weekly', 'Monthly', 'Yearly']; // const FormFields = {\n//   rymindr_date: '2020-05-02',\n//   note: 'test',\n//   is_shareable: true,\n//   rymindr_to_group: '125,126',\n//   rymindr_group_members_to: '2892,2954,2',\n//   category_id: '1',\n//   rymindr_time: '12:38',\n//   rymindr_to: '3032,2924,2892',\n//   rymindr_type: 'Energy (Gas & Electric)',\n//   qiscus_id: '14805940',\n//   user_id: '2891',\n//   user_name: 'demo data H',\n//   subcategory_id: '22',\n//   appointment: true,\n//   is_qrcode: true,\n//   no_of_time: '',\n// };\n\nconst FormFields = {\n  rymindr_id: '',\n  rymindr_date: '',\n  note: '',\n  is_shareable: true,\n  rymindr_to_group: '',\n  rymindr_group_members_to: '',\n  category_id: '',\n  rymindr_time: '',\n  rymindr_to: '',\n  rymindr_type: '',\n  qiscus_id: '',\n  user_id: '',\n  user_name: '',\n  rymindr_end_date: '',\n  rymindr_period_type: '',\n  rymindr_recurring_type: '',\n  subcategory_id: '',\n  appointment: true,\n  is_qrcode: '',\n  is_recurring: ''\n};\n\nconst EditRymindr = props => {\n  const classes = useStyles();\n  const {\n    enqueueSnackbar,\n    error,\n    categories,\n    subcategories,\n    getSubCategories,\n    getGroups,\n    groups,\n    businessusers,\n    getBusinessUsers,\n    createRymindr,\n    inviteAndAddMobile,\n    matched_contact,\n    loading,\n    DetailView,\n    success_message,\n    rymindrDetails,\n    getRymidrDetails,\n    editRymindr\n  } = props;\n  const {\n    user_id,\n    business_code,\n    first_name,\n    last_name\n  } = JSON.parse(localStorage.getItem('userData'));\n  const [state, setState] = useState({\n    checkedB: true,\n    switch: true,\n    switchrecuring: false\n  });\n  const history = useHistory();\n  const {\n    rymindr_id,\n    member_id,\n    group_id,\n    get_name,\n    id\n  } = useParams();\n  const date = new Date();\n  const [selectedDate, sethandleDateChange] = useState(moment(new Date()).format('YYYY-MM-DD'));\n  const [selectedTime, sethandleTimeChange] = useState(moment(new Date()).format('YYYY-MM-DD HH:mm')); //const [selectedEndDate, sethandleEndDateChange] = useState(moment(new Date()).format('YYYY-MM-DD'))\n\n  const [selectedEndDate, sethandleEndDateChange] = useState(moment(new Date(), 'YYYY-MM-DD').add(1, 'days'));\n  const [subcategory, setSubCategory] = useState(0);\n  const [checked, setChecked] = useState([]);\n  const [memberchecked, setMemberchecked] = useState([]);\n  const [checkOnSelectAllMembers, setcheckOnSelectAllMembers] = useState(false);\n  const [checkOnSelectAllGroup, setcheckOnSelectAllGroup] = useState(false);\n  const [group_members, setGroup_members] = useState('');\n  const [groupname_membersname, setGroupname_membersname] = useState([]);\n  const [formvalue, setFormvalue] = useState(FormFields);\n  const [formValidation, setFormValidation] = useState(FormFields);\n  const [open, setOpen] = useState(false);\n  const [timeErr, setTimeErr] = useState('');\n  const [toErr, settoErr] = useState('');\n  const [categories_listing, set_categories_listing] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [dateErr, setdateErr] = useState('');\n  const [endDateErr, setEndDateErr] = useState('');\n  const [slider, setSlider] = useState(null);\n  const [phoneNumber, setPhoneNumber] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [deleteFiles, setDeleteFiles] = useState([]);\n  const [data, setData] = useState(window.location.href.split('/:')[1]);\n  const [default_val, set_default_val] = useState(0);\n  const [editorValue, setEditorValue] = useState(null);\n\n  const handleChange = e => {\n    const formdata = { ...formvalue\n    };\n    const formvalidation = { ...formValidation\n    };\n    const value = e.target.value;\n    const name = e.target.name;\n\n    if (name === 'rymindr_type') {\n      const found = subcategories.find(element => element.id === value);\n      console.log('form before', formvalue);\n      formdata.rymindr_type = found.category_name;\n      formdata.subcategory_id = value;\n      formvalidation.subcategory_id = '';\n      setFormValidation(formvalidation);\n    } else if (name === 'note') {\n      formvalidation.note = '';\n      setFormValidation(formvalidation);\n      formdata[name] = value;\n    } else if (name === 'rymindr_recurring_type') {\n      formvalidation.rymindr_recurring_type = '';\n      setFormValidation(formvalidation);\n      formdata[name] = value;\n    } else {\n      formdata[name] = value;\n    }\n\n    setFormvalue(formdata);\n  };\n\n  const handleDateChange = e => {\n    const formvalidation = { ...formValidation\n    };\n    const date = new Date(e);\n    const selecteddate = moment(date).format('YYYY-MM-DD');\n    const currentDate = moment(new Date()).format('YYYY-MM-DD');\n    const selectedEndDate1 = moment(selectedEndDate).format('YYYY-MM-DD');\n    const currentDateTime = moment(new Date().getTime()).format('YYYY-MM-DD HH:mm');\n    const selectedDateTime = selecteddate + ' ' + moment(new Date(selectedTime).getTime()).format('HH:mm');\n\n    if (currentDate <= selecteddate) {\n      setdateErr('');\n      sethandleDateChange(selecteddate); // console.log('selectedDate--',selectedDate)\n\n      setFormvalue({ ...formvalue,\n        rymindr_date: selecteddate\n      }); // const new_select = moment(date).format('YYYY-MM-DD HH:mm')\n      // sethandleTimeChange(new_select)\n\n      if (currentDate == selecteddate && selectedDateTime < currentDateTime) {\n        setTimeErr('You can not choose a time before the current time.');\n        formvalidation.rymindr_time = 'You can not choose a time before the current time.';\n      } else {\n        setTimeErr('');\n      }\n    } else {\n      setdateErr('You can not choose a date before the current date.');\n    }\n\n    if (state.switchrecuring) {\n      if (selectedEndDate1 < selecteddate) {\n        console.log('err--');\n        setEndDateErr('You can not choose a date before the start date.');\n        sethandleDateChange(selecteddate);\n      } else if (selectedEndDate1 == selecteddate) {\n        setEndDateErr('End date must be greater than start date');\n        sethandleDateChange(selecteddate);\n      } else {\n        setEndDateErr('');\n        sethandleDateChange(selecteddate);\n      }\n    }\n  };\n\n  const handleEndDateChange = e => {\n    const date = new Date(e);\n    const selectedenddate = moment(date).format('YYYY-MM-DD');\n    const currentDate = moment(new Date()).format('YYYY-MM-DD');\n    const startDate = moment(selectedDate).format('YYYY-MM-DD');\n    console.log('startDate===', startDate);\n    console.log('selectedenddate===', selectedenddate);\n\n    if (currentDate >= selectedenddate) {\n      setEndDateErr('You can not choose a date before the current date.');\n      sethandleEndDateChange(selectedenddate);\n    } else if (startDate >= selectedenddate) {\n      setEndDateErr('End date must be greater than start date');\n      sethandleEndDateChange(selectedenddate);\n    } else {\n      setEndDateErr('');\n      sethandleEndDateChange(selectedenddate);\n      setFormvalue({ ...formvalue,\n        rymindr_end_date: selectedenddate\n      });\n    }\n  };\n\n  const handleTimeChange = e => {\n    const date = new Date(e);\n    const selectedtime = moment(date);\n    const selecteddate = moment(new Date(selectedtime).getTime()).format('YYYY-MM-DD HH:mm');\n    const currentDate = moment(new Date().getTime()).format('YYYY-MM-DD HH:mm');\n    const new_select = moment(selectedDate).format('YYYY-MM-DD') + ' ' + moment(new Date(e).getTime()).format('HH:mm');\n\n    if (currentDate <= new_select) {\n      const time = moment(new Date(e).getTime()).format('HH:mm');\n      setTimeErr('');\n      sethandleTimeChange(new_select);\n      setFormvalue({ ...formvalue,\n        rymindr_time: new_select\n      });\n    } else {\n      setTimeErr('You can not choose a time before the current time.');\n      sethandleTimeChange(new_select);\n      setFormvalue({ ...formvalue,\n        rymindr_time: new_select\n      });\n    }\n  };\n\n  const handleChangeCheck = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n    setFormvalue({ ...formvalue,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const handleSwitchChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const settings = {\n    accessibility: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 7,\n    slidesToScroll: 1,\n    centerMode: true,\n    focusOnSelect: true,\n    initialSlide: subcategory,\n    afterChange: index => {\n      if (categories_listing.length > 0) {\n        const formdata = { ...formvalue\n        };\n        setSubCategory(index);\n        const parent_cat_id = categories_listing[index].id;\n        formdata.category_id = parent_cat_id;\n        formdata.subcategory_id = '';\n        formdata.rymindr_type = '';\n        setFormvalue(formdata);\n        const dataToSend = {\n          user_id,\n          category_id: parent_cat_id\n        };\n        getSubCategories(dataToSend);\n      }\n    },\n    responsive: [{\n      breakpoint: 1400,\n      settings: {\n        slidesToShow: 5\n      }\n    }, {\n      breakpoint: 1200,\n      settings: {\n        slidesToShow: 4\n      }\n    }, {\n      breakpoint: 960,\n      settings: {\n        slidesToShow: 3\n      }\n    }]\n  };\n\n  const handleClose = newValue => {\n    setOpen(newValue);\n    const membername = [];\n    const groupname = [];\n\n    if (groups.length > 0) {\n      groups.forEach(element => {\n        const checkvalue = checked.indexOf(element.group_id);\n\n        if (checkvalue !== -1) {\n          groupname.push(element.group_name);\n        } // else if (element.group_id == group_id) {\n        //   groupname.push(element.group_name);\n        // }\n\n      });\n    }\n\n    if (businessusers.length > 0) {\n      businessusers.forEach(element => {\n        const checkvalue = memberchecked.indexOf(element.user_id);\n\n        if (checkvalue !== -1) {\n          if (element.user_id == user_id) {\n            membername.push('You');\n          } else {\n            membername.push(`${element.first_name} ${element.last_name}`);\n          }\n        } else if (element.user_id == member_id) {\n          if (element.user_id == user_id) {\n            membername.push(`You`);\n          } else {\n            membername.push(`${element.first_name} ${element.last_name}`);\n          }\n        }\n\n        settoErr('');\n      });\n\n      if (membername == '') {\n        membername.push('You');\n      }\n\n      setGroupname_membersname(groupname.concat(membername));\n\n      if (checked.length == 0 && memberchecked.length == 0) {\n        setGroupname_membersname([]);\n      }\n\n      const dataToSend = {\n        mobile_no: phoneNumber.join()\n      };\n\n      if (phoneNumber.length > 0) {\n        inviteAndAddMobile(dataToSend);\n      }\n\n      if (newValue) {// setValue(newValue);\n      }\n    }\n  };\n\n  const handleGroupToggle = value => {\n    //console.log('value====',value);\n    setcheckOnSelectAllGroup(false);\n    console.log('checked====', checked);\n    const groupMembers = value.group_member_list;\n    const currentIndex = checked.indexOf(value.group_id);\n    const newChecked = [...checked];\n    const selectedmember = [...group_members];\n\n    if (currentIndex === -1) {\n      newChecked.push(value.group_id);\n      groupMembers.forEach(element => {\n        selectedmember.push(element.user_id);\n      });\n    } else {\n      newChecked.splice(currentIndex, 1);\n      groupMembers.forEach(element => {\n        const remomeitem = selectedmember.indexOf(element.user_id);\n        selectedmember.splice(remomeitem, 1);\n      });\n    }\n\n    setChecked(newChecked);\n    setGroup_members(selectedmember);\n  };\n\n  const handleMemberToggle = value => {\n    const currentIndex = memberchecked.indexOf(value.user_id);\n    const newChecked = [...memberchecked];\n\n    if (group_id != '0') {\n      newChecked.push(group_id);\n    }\n\n    if (member_id != '0') {\n      newChecked.push(member_id);\n    }\n\n    if (currentIndex === -1) {\n      newChecked.push(value.user_id);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    const removeLoginUser = newChecked.indexOf(user_id.toString());\n    const removeUndefinedIndex = newChecked.indexOf(undefined);\n\n    if (removeLoginUser > -1) {\n      newChecked.splice(removeLoginUser, 1);\n    }\n\n    if (removeUndefinedIndex > -1) {\n      for (var i = 0; i < newChecked.length; i++) {\n        if (newChecked[i] == undefined) {\n          newChecked.splice(newChecked.indexOf(undefined), 1);\n          i--;\n        }\n      }\n\n      if (newChecked.length < 1) {\n        newChecked.push(user_id);\n        var temp = []; //temp.push('You')\n      }\n    }\n\n    setMemberchecked(newChecked);\n    setGroupname_membersname(temp);\n    const groupname = [];\n    const membername = [];\n\n    if (value == 0) {\n      businessusers.forEach(element => {\n        membername.push(element.first_name !== '' ? `${element.first_name} ${element.last_name}` : element.mobile_no);\n        newChecked.push(element.user_id);\n      });\n      setcheckOnSelectAllMembers(true);\n      setMemberchecked(newChecked);\n    } else if (value == 1) {\n      groups.forEach(element => {\n        groupname.push(element.group_name);\n        newChecked.push(element.group_id);\n      });\n      setcheckOnSelectAllGroup(true);\n      setChecked(newChecked);\n    } else if (value == 3) {\n      setcheckOnSelectAllMembers(false);\n      setMemberchecked([]);\n    } else if (value == 4) {\n      setcheckOnSelectAllGroup(false);\n      setChecked([]);\n    } else {\n      setcheckOnSelectAllMembers(false);\n    }\n\n    setGroupname_membersname(groupname.concat(membername));\n    console.log('groupname_membersname', groupname_membersname);\n  };\n\n  const handleAllMembersToggle = value => {\n    const newChecked = [...value];\n    setMemberchecked(newChecked);\n    console.log('memberchecked-', memberchecked);\n  };\n\n  const handleAllGroupMembersToggle = value => {\n    const newChecked = [...value];\n    setChecked(newChecked);\n    console.log('checked', checked);\n    let members = '';\n    const groupMembers = groups.forEach(item => {\n      members = members + ',' + item.group_members;\n    });\n    setGroup_members(members);\n    console.log('members-', members);\n  };\n\n  const location = useLocation(); // FOR SELECTED DATE FROM CALENDAR\n\n  useEffect(() => {\n    console.log('location.state======', location.state); // SELECTED VALUE FROM CALENDAR\n\n    if (location.state) {\n      sethandleDateChange(location.state.selectedDate);\n    } else {\n      sethandleDateChange(new Date());\n    } // SELECTED VALUE FROM CALENDAR\n\n\n    const dataToSend = {\n      ryminder_id: rymindr_id,\n      category_id: '',\n      user_id\n    };\n    props.getCategoriesRymindr(dataToSend);\n    getGroups({\n      user_id\n    });\n    const SendToBusiness = {\n      user_id,\n      business_code\n    };\n    getBusinessUsers(SendToBusiness);\n    const dataTosend = {\n      user_id,\n      rymindr_id: rymindr_id,\n      is_page: 'history',\n      edit_page: 1\n    };\n    getRymidrDetails(dataTosend); /// ///////////////////////////////////////\n  }, []);\n  useEffect(() => {\n    const temp_subcategory = formvalue.category_id; // if(slider && temp_subcategory) {\n    //   slider.slickGoTo(temp_subcategory);\n    // }\n  }, [slider]);\n  useEffect(() => {\n    // let get_category = []\n    if (categories.length > 0) {\n      if (rymindrDetails != null) {\n        const get_category = categories.filter(item => item.is_message_center === 0);\n        let count = 0;\n        categories.forEach(ele => {\n          if (ele.id == rymindrDetails.category_id) {\n            set_default_val(count);\n            setLoaded(true);\n          }\n\n          ++count;\n        });\n        set_categories_listing(get_category);\n      }\n    }\n  }, [categories, rymindrDetails]);\n\n  const validate = () => {\n    const formvalidation = { ...formValidation\n    };\n    let isError = false;\n    const endDate = moment(selectedEndDate).format('YYYY-MM-DD');\n    console.log('Date--', selectedDate, '/n', selectedEndDate);\n\n    if (!formvalue.subcategory_id) {\n      isError = true;\n      formvalidation.subcategory_id = 'Please select a sub category';\n      setFormValidation(formvalidation);\n    }\n\n    if (state.switchrecuring) {\n      if (selectedDate > endDate) {\n        isError = true;\n        setEndDateErr('End date must be greater than start date');\n      }\n    }\n\n    if (!formvalue.rymindr_time) {// var now = moment(new Date().getTime()).format('HH:mm');\n      // if (now.toString() > formvalue.rymindr_time.toString()) {\n      //   isError = true;\n      //   setTimeErr('You can not choose a time before the current time.');\n      // } else {\n      //   setTimeErr('');\n      // }\n    }\n\n    if (!formvalue.note) {\n      isError = true;\n      formvalidation.note = 'Please write rymindr';\n      setFormValidation(formvalidation);\n    } else if (formvalue.note.length > 1500) {\n      isError = true;\n      formvalidation.note = 'Rymindr should not be more than 1500 characters';\n      setFormValidation(formvalidation);\n    }\n\n    if (dateErr !== '') {\n      isError = true;\n      setdateErr('You can not choose a date before the current date.');\n    }\n\n    if (timeErr !== '') {\n      isError = true;\n      setTimeErr('You can not choose a time before the current time.');\n    }\n\n    if (groupname_membersname.length == 0) {\n      isError = true;\n      settoErr('This field should not be empty.');\n    } // if (state.switchrecuring) {\n    //   if (formvalue.rymindr_recurring_type == 'Daily') {\n    //     if ((!formvalue.rymindr_period_type) || !(parseInt(formvalue.rymindr_period_type) > 1 && parseInt(formvalue.rymindr_period_type) <= 2000)) {\n    //       isError = true\n    //       formvalidation.rymindr_period_type = 'This should not be zero or blank or more than 2000'\n    //       setFormValidation(formvalidation)\n    //     }\n    //   } else if (formvalue.rymindr_recurring_type == 'Weekly') {\n    //     if ((!formvalue.rymindr_period_type) || !(parseInt(formvalue.rymindr_period_type) > 1 && parseInt(formvalue.rymindr_period_type) <= 500)) {\n    //       isError = true\n    //       formvalidation.rymindr_period_type = 'This should not be zero or blank or more than 500'\n    //       setFormValidation(formvalidation)\n    //     }\n    //   } else if (formvalue.rymindr_recurring_type == 'Monthly') {\n    //     if ((!formvalue.rymindr_period_type) || !(parseInt(formvalue.rymindr_period_type) > 1 && parseInt(formvalue.rymindr_period_type) <= 500)) {\n    //       isError = true\n    //       formvalidation.rymindr_period_type = 'This should not be zero or blank or more than 500'\n    //       setFormValidation(formvalidation)\n    //     }\n    //   } else if (formvalue.rymindr_recurring_type == 'Yearly') {\n    //     if ((!formvalue.rymindr_period_type) || !(parseInt(formvalue.rymindr_period_type) > 1 && parseInt(formvalue.rymindr_period_type) <= 15)) {\n    //       isError = true\n    //       formvalidation.rymindr_period_type = 'This should not be zero or blank or more than 15'\n    //       setFormValidation(formvalidation)\n    //     }\n    //   }\n    //   if (!formvalue.rymindr_recurring_type) {\n    //     isError = true\n    //     formvalidation.rymindr_recurring_type = 'Please select the period'\n    //     setFormValidation(formvalidation)\n    //   }\n    // }\n\n\n    if (state.switchrecuring) {\n      if (endDateErr !== '') {\n        isError = true;\n        setEndDateErr(endDateErr);\n      }\n\n      if (!formvalue.rymindr_recurring_type) {\n        isError = true;\n        formvalidation.rymindr_recurring_type = 'Please select the period';\n        setFormValidation(formvalidation);\n      }\n    }\n\n    return isError;\n  };\n\n  const handleToTagvalue = value => {\n    setPhoneNumber(value);\n  };\n\n  const handleReset = () => {\n    // setFormvalue(FormFields)\n    // sethandleDateChange(new Date())\n    // sethandleTimeChange(date.getTime())\n    // setGroupname_membersname([])\n    // setMemberchecked([])\n    // setChecked([])\n    // setcheckOnSelectAllMembers(false)\n    // setcheckOnSelectAllGroup(false)\n    const newChecked = [...checked];\n\n    if (rymindrDetails != null) {\n      const formdata = { ...formvalue\n      };\n      formdata.note = rymindrDetails.note;\n      formdata.category_id = rymindrDetails.category_id;\n      formdata.rymindr_id = rymindrDetails.rymindr_id; // moment(new Date()).format('YYYY-MM-DD HH:mm')\n\n      const value = rymindrDetails.subcategory_id;\n\n      if (subcategories != null) {\n        const found = subcategories.find(element => element.id === value);\n        formdata.rymindr_type = rymindrDetails.category_name;\n        formdata.subcategory_id = value;\n      } // formvalidation.subcategory_id = '';\n      // setFormValidation(formvalidation);\n\n\n      if (rymindrDetails.recurring.recurring_type) {\n        state.switchrecuring = true; // setState(state)\n\n        setState({ ...state,\n          switch: true\n        });\n        formdata.rymindr_recurring_type = rymindrDetails.recurring.recurring_type;\n        formdata.rymindr_period_type = rymindrDetails.recurring.recurring_frequency;\n      }\n\n      if (rymindrDetails.user_list) {\n        const membername = [];\n        const groupname = [];\n        const newChecked = [...checked];\n        rymindrDetails.user_list.forEach(ele => {\n          if (businessusers.length > 0) {\n            businessusers.forEach(element => {\n              if (element.user_id == ele.user_id) {\n                // if(element.user_id == user_id){\n                //   membername.push(`You`);\n                // }else{\n                membername.push(`${element.first_name} ${element.last_name}`); // }\n              }\n            });\n          }\n\n          newChecked.push(ele.user_id);\n          setMemberchecked(newChecked);\n        });\n        rymindrDetails.group_list.forEach(ele => {\n          if (groups.length > 0) {\n            groups.forEach(element => {\n              if (element.group_id == ele.group_id) {\n                groupname.push(element.group_name);\n              }\n            });\n          }\n\n          newChecked.push(ele.group_id);\n          setChecked(newChecked);\n        });\n        setGroupname_membersname(groupname.concat(membername));\n      }\n\n      const new_select = moment(rymindrDetails.rymindr_time).format('YYYY-MM-DD HH:mm');\n      sethandleTimeChange(new_select); // sethandleTimeChange(moment((new Date(rymindrDetails.rymindr_date)).getTime()).format('HH:mm'))\n      // debugger\n\n      sethandleDateChange(rymindrDetails.rymindr_date);\n      sethandleTimeChange(rymindrDetails.rymindr_date + ' ' + rymindrDetails.rymindr_time);\n      setFiles(rymindrDetails.attachment);\n      setFormvalue(formdata);\n    }\n  };\n\n  const handleToSubmit = () => {\n    if (validate()) return false;\n    const FormFields11 = { ...formvalue\n    };\n    FormFields11.rymindr_to_group = checked.join();\n    FormFields11.rymindr_group_members_to = group_members;\n    FormFields11.user_id = user_id;\n    FormFields11.user_name = first_name;\n    const startDate = moment(selectedDate).format('YYYY-MM-DD');\n    const endDate = moment(selectedEndDate).format('YYYY-MM-DD');\n    FormFields11.rymindr_date = selectedDate;\n    FormFields11.rymindr_end_date = endDate;\n    FormFields11.appointment = state.switchrecuring;\n    let temp_final = selectedTime.split(' '); // let temp_time = temp_final[1].slice(0, -3);\n\n    FormFields11.rymindr_time = temp_final[1];\n    FormFields11.rymindr_to = matched_contact !== null ? memberchecked.join() + ',' + matched_contact.user_id : memberchecked.join();\n\n    if (state.switchrecuring) {\n      console.log('startDate====', startDate);\n      console.log('endDate====', endDate);\n      FormFields11.rymindr_period_type = getPeriod_type(selectedDate, endDate, FormFields11.rymindr_recurring_type);\n    } else {\n      delete FormFields11.rymindr_period_type;\n      delete FormFields11.rymindr_end_date;\n      delete FormFields11.rymindr_recurring_type;\n    }\n\n    if (rymindrDetails.recurring_type == null) {\n      FormFields11.is_recurring = false;\n    } else {\n      FormFields11.is_recurring = true;\n    }\n\n    const sendAttachment = files;\n    const deleteAttachment = deleteFiles;\n    const unmatch = matched_contact ? matched_contact.mobile_no : ''; // console.warn('hello recuring', FormFields11, history, sendAttachment);\n\n    console.log('sendAttachment', sendAttachment);\n    console.log('deleteAttachment==', deleteAttachment);\n    console.log('FormFields11==', FormFields11);\n    editRymindr(FormFields11, history, sendAttachment, deleteAttachment); //createRymindr(FormFields11, unmatch, history, sendAttachment);\n  };\n\n  const getPeriod_type = (d1, d2, recurring_type) => {\n    const secondsDiff = (d1, d2) => {\n      let millisecondDiff = d2 - d1;\n      let secDiff = Math.floor((d2 - d1) / 1000);\n      return secDiff;\n    };\n\n    const minutesDiff = (d1, d2) => {\n      let seconds = secondsDiff(d1, d2);\n      let minutesDiff = Math.floor(seconds / 60);\n      return minutesDiff;\n    };\n\n    const hoursDiff = (d1, d2) => {\n      let minutes = minutesDiff(d1, d2);\n      let hoursDiff = Math.floor(minutes / 60);\n      return hoursDiff;\n    };\n\n    const daysDiff = (d1, d2) => {\n      let hours = hoursDiff(d1, d2);\n      let daysDiff = Math.floor(hours / 24);\n      return daysDiff;\n    };\n\n    const weeksDiff = (d1, d2) => {\n      let days = daysDiff(d1, d2);\n      let weeksDiff = Math.floor(days / 7);\n      return weeksDiff;\n    };\n\n    const yearsDiff = (d1, d2) => {\n      let date1 = new Date(d1);\n      let date2 = new Date(d2);\n      let yearsDiff = date2.getFullYear() - date1.getFullYear();\n      return yearsDiff;\n    };\n\n    const monthsDiff = (d1, d2) => {\n      let date1 = new Date(d1);\n      let date2 = new Date(d2);\n      let years = yearsDiff(d1, d2);\n      let months = years * 12 + (date2.getMonth() - date1.getMonth());\n      return months;\n    };\n\n    let numbers = '';\n\n    if (recurring_type == 'Daily') {\n      numbers = daysDiff(new Date(d1).getTime(), new Date(d2).getTime());\n    } else if (recurring_type == 'Weekly') {\n      numbers = weeksDiff(new Date(d1).getTime(), new Date(d2).getTime());\n    } else if (recurring_type == 'Monthly') {\n      numbers = monthsDiff(new Date(d1).getTime(), new Date(d2).getTime());\n    } else if (recurring_type == 'Yearly') {\n      numbers = yearsDiff(new Date(d1).getTime(), new Date(d2).getTime());\n    }\n\n    return numbers;\n  };\n\n  useMemo(() => {\n    const newChecked = [...checked];\n\n    if (rymindrDetails != null) {\n      if (rymindrDetails.user_list) {\n        const membername = [];\n        const groupname = []; //const newChecked = [...checked];\n\n        let newCheckedMem = [...memberchecked];\n        rymindrDetails.user_list.forEach(ele => {\n          if (businessusers.length > 0) {\n            businessusers.forEach(element => {\n              if (element.user_id == ele.user_id) {\n                // if(element.user_id == user_id){\n                //   membername.push(`You`);\n                // }else{\n                membername.push(`${element.first_name} ${element.last_name}`); // }\n              }\n            });\n          }\n\n          if (newCheckedMem.indexOf(ele.user_id.toString()) == -1) {\n            newCheckedMem.push(ele.user_id.toString());\n          } // newChecked.push(parseInt(ele.user_id));\n\n        });\n        setMemberchecked(newCheckedMem);\n        let newCheckedGroup = [...checked];\n        rymindrDetails.group_list.forEach(ele => {\n          if (groups.length > 0) {\n            groups.forEach(element => {\n              if (element.group_id == ele.group_id) {\n                groupname.push(element.group_name);\n              }\n            });\n          }\n\n          if (newCheckedGroup.indexOf(ele.group_id) == -1) {\n            newCheckedGroup.push(ele.group_id);\n          }\n        });\n        setChecked(newCheckedGroup);\n\n        if (membername == '') {\n          membername.push('You');\n        }\n\n        setGroupname_membersname(groupname.concat(membername));\n      }\n    }\n  }, [rymindrDetails, businessusers, groups]);\n  useMemo(() => {\n    const newChecked = [...checked];\n\n    if (rymindrDetails != null) {\n      const formdata = { ...formvalue\n      };\n      formdata.note = rymindrDetails.note;\n      formdata.category_id = formdata.category_id ? formdata.category_id : rymindrDetails.category_id;\n\n      if (rymindrDetails.recr_rymindr_id !== null) {\n        formdata.rymindr_id = rymindrDetails.recr_rymindr_id;\n      } else {\n        formdata.rymindr_id = rymindrDetails.rymindr_id;\n      } // moment(new Date()).format('YYYY-MM-DD HH:mm')\n\n\n      const value = rymindrDetails.subcategory_id;\n      formdata.subcategory_id = rymindrDetails.subcategory_id; // if (subcategories != null) {\n      //   const found = subcategories.find((element) => element.id === value)\n      //   // formdata.rymindr_type = rymindrDetails.category_name\n      //   formdata.rymindr_type = rymindrDetails.rymindr_type\n      //   formdata.subcategory_id = value\n      // }\n      // formvalidation.subcategory_id = '';\n      // setFormValidation(formvalidation);\n\n      if (rymindrDetails.recurring.recurring_type) {\n        state.switchrecuring = true; // setState(state)\n\n        setState({ ...state,\n          switch: true\n        });\n        formdata.rymindr_recurring_type = rymindrDetails.recurring.recurring_type;\n        formdata.rymindr_period_type = rymindrDetails.recurring.recurring_frequency;\n      }\n\n      if (rymindrDetails.qr_code !== '') {\n        setState({ ...state,\n          is_qrcode: true\n        });\n      } // if (rymindrDetails.user_list) {\n      //   const membername = []\n      //   const groupname = []\n      //const newChecked = [...checked];\n      //   let newCheckedMem =[...memberchecked];\n      //   (rymindrDetails.user_list).forEach(ele => {\n      //     if (businessusers.length > 0) {\n      //       businessusers.forEach((element) => {\n      //         if (element.user_id == ele.user_id) {\n      //           // if(element.user_id == user_id){\n      //           //   membername.push(`You`);\n      //           // }else{\n      //           membername.push(`${element.first_name} ${element.last_name}`)\n      //           // }\n      //         }\n      //       })\n      //     }\n      //     if(newCheckedMem.indexOf(ele.user_id.toString()) == -1) {\n      //       newCheckedMem.push((ele.user_id).toString())\n      //     }\n      //     // newChecked.push(parseInt(ele.user_id));\n      //   });\n      //   setMemberchecked(newCheckedMem)\n      //   let newCheckedGroup =[...checked];\n      //   (rymindrDetails.group_list).forEach(ele => {\n      //     if (groups.length > 0) {\n      //       groups.forEach((element) => {\n      //         if (element.group_id == ele.group_id) {\n      //           groupname.push(element.group_name)\n      //         }\n      //       })\n      //     }\n      //     if(newCheckedGroup.indexOf(ele.group_id) == -1) {\n      //       newCheckedGroup.push(ele.group_id)\n      //     }\n      //   })\n      //   setChecked(newCheckedGroup)\n      //   if(membername == '') {\n      //     membername.push('You')\n      //   }\n      //   setGroupname_membersname(groupname.concat(membername))\n      // }\n\n\n      const new_select = moment(rymindrDetails.rymindr_time).format('YYYY-MM-DD HH:mm');\n      sethandleTimeChange(new_select); // sethandleTimeChange(moment((new Date(rymindrDetails.rymindr_date)).getTime()).format('HH:mm'))\n      // debugger\n\n      console.log('rymindrDetails==', rymindrDetails);\n      sethandleDateChange(rymindrDetails.rymindr_date);\n\n      if (rymindrDetails.recurring && rymindrDetails.recurring.recurring_type) {\n        let days = 0;\n\n        if (rymindrDetails.recurring.recurring_type == 'Daily') {\n          days = parseInt(rymindrDetails.recurring.recurring_frequency);\n        } else if (rymindrDetails.recurring.recurring_type == 'Weekly') {\n          days = parseInt(rymindrDetails.recurring.recurring_frequency) * 7;\n        } else if (rymindrDetails.recurring.recurring_type == 'Monthly') {\n          days = parseInt(rymindrDetails.recurring.recurring_frequency) * 30;\n        } else if (rymindrDetails.recurring.recurring_type == 'Yearly') {\n          days = parseInt(rymindrDetails.recurring.recurring_frequency) * 365;\n        }\n\n        console.log('days==', days);\n        const date = new Date(rymindrDetails.start_date);\n        const newEndDate = moment(addDays(date, days)).format('YYYY-MM-DD');\n        sethandleEndDateChange(newEndDate);\n      }\n\n      function addDays(date, days) {\n        const copy = new Date(Number(date));\n        copy.setDate(date.getDate() + days);\n        return copy;\n      } // let type = 'Yearly';\n      // let frequency = 5;\n      // if(type){\n      //   let  days = 0;\n      //   if(type=='Daily'){\n      //     days = parseInt(frequency);\n      //   } else if(type=='Weekly'){\n      //     days = parseInt(frequency)*7;\n      //   } else if(type=='Monthly'){\n      //     days = parseInt(frequency)*30;\n      //   } else if(type=='Yearly'){\n      //     days = parseInt(frequency)*365;\n      //   }\n      //   console.log('days==',days);\n      //   // recurring_frequency: 3\n      //   // recurring_type: \"Weekly\"\n      // }\n\n\n      sethandleTimeChange(rymindrDetails.rymindr_date + ' ' + rymindrDetails.rymindr_time);\n      setFiles(rymindrDetails.attachment);\n      setFormvalue(formdata);\n    }\n  }, [rymindrDetails, businessusers, groups]);\n  useMemo(() => {\n    error && enqueueSnackbar(error, {\n      variant: 'error'\n    });\n  }, [error]); // useMemo(() => {\n  //   //alert(success_message);\n  //   success_message && enqueueSnackbar(success_message, { variant: 'success' })\n  // }, [success_message])\n\n  const handleToopen = () => {\n    setOpen(true);\n  };\n\n  useMemo(() => {\n    console.log('deleteFiles===', deleteFiles);\n  }, [deleteFiles]);\n\n  const deleteImage = (index, file) => {\n    if (file && file.image_name) {\n      let deleteThat = files.filter(a => a.image_name == file.image_name);\n      setDeleteFiles([...deleteFiles, ...deleteThat]);\n      var removeIndex = files.map(function (item) {\n        return item.image_name;\n      }).indexOf(file.image_name);\n      files.splice(removeIndex, 1);\n    } else if (file && file.name) {\n      var removeIndex = files.map(function (item) {\n        return item.name;\n      }).indexOf(file.name);\n      files.splice(removeIndex, 1);\n    }\n\n    if (files.length == 0) {\n      setFiles([]);\n    } else {\n      setFiles([...files]);\n      console.log('files===', files);\n    }\n  };\n\n  const getFiles = inputfile => {\n    console.log('inputfile====', inputfile);\n    const file_Array = [...files];\n    inputfile.map(files1 => {\n      if (files1.image_name != undefined) {\n        var extn = files1.image_name.split('.');\n        var etn = ['docx', 'doc', 'pdf', 'jpg', 'jpeg', 'png'];\n        var low = extn[1].toLowerCase();\n        files.push(files1);\n      } else {\n        var extn = files1.name.split('.');\n        var etn = ['docx', 'doc', 'pdf', 'jpg', 'jpeg', 'png'];\n        var low = extn[1].toLowerCase();\n        files.push(files1);\n      }\n    });\n    console.log('files====', files);\n    setFiles([...files]);\n  };\n\n  const handleChangeEditor = data => {\n    // setFormValidation(data);\n    setFormvalue({ ...formvalue,\n      note: data\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1192,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(ConfirmationDialogRaw, {\n    open: open,\n    onClose: handleClose,\n    groupdata: groups,\n    memberdata: businessusers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tabmenu, {\n    groupdata: groups,\n    memberdata: businessusers,\n    handleToggles: handleGroupToggle,\n    checked: checked,\n    handleMemberToggle: handleMemberToggle,\n    handleAllMembersToggle: handleAllMembersToggle,\n    handleAllGroupMembersToggle: handleAllGroupMembersToggle,\n    memberchecked: memberchecked,\n    handleToTagvalue: handleToTagvalue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1214,\n      columnNumber: 9\n    }\n  }), \" \"), \" \", /*#__PURE__*/React.createElement(Grid, {\n    className: \"main-wrap-head\",\n    container: true,\n    style: {\n      marginBottom: 20\n    },\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1225,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TypoHeadStyled, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1232,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    onClick: () => history.goBack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBack, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1238,\n      columnNumber: 9\n    }\n  })), \"Edit \", /*#__PURE__*/React.createElement(TypoHeadInnerStyled, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1242,\n      columnNumber: 14\n    }\n  }, \" Rymindr \"), \" \"), \" \"), \" \", \" \"), \" \", /*#__PURE__*/React.createElement(PaperStyled, {\n    className: \"main-wrap-body edit-ray-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1253,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"article-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1255,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slideContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1257,\n      columnNumber: 9\n    }\n  }, \" \", categories.length > 0 && loaded ? /*#__PURE__*/React.createElement(Slider, Object.assign({\n    ref: slider => setSlider(slider)\n  }, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1259,\n      columnNumber: 49\n    }\n  }), \" \", categories.map((item, key) => {\n    return item.is_message_center == 0 ? /*#__PURE__*/React.createElement(SlideBoxStyled, {\n      key: key,\n      data: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1263,\n        columnNumber: 64\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.category_image,\n      className: \"SlideIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1266,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(SlideType, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 29\n      }\n    }, \" \", item.category_name, \" \"), \" \") : '';\n  }), \" \") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1278,\n      columnNumber: 19\n    }\n  }, \" Loading... \"), \" \"), /*#__PURE__*/React.createElement(GridStyled, {\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1284,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1286,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"Sub Category\",\n    value: formvalue.subcategory_id,\n    fullWidth: true,\n    onChange: handleChange,\n    name: \"rymindr_type\",\n    variant: \"outlined\",\n    error: !!formValidation.subcategory_id,\n    helperText: formValidation.subcategory_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1288,\n      columnNumber: 9\n    }\n  }, subcategories.length > 0 ? subcategories.map((option, key) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: key,\n    value: option.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1299,\n      columnNumber: 50\n    }\n  }, \" \", option.category_name, \" \")) : loading && /*#__PURE__*/React.createElement(CircularSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1304,\n      columnNumber: 28\n    }\n  }), \" \"), \" \"), \" \", /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1307,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    label: \"Set Date\",\n    inputVariant: \"outlined\",\n    value: selectedDate,\n    onChange: handleDateChange,\n    animateYearScrolling: true,\n    format: \"DD/MM/YYYY\",\n    fullWidth: true,\n    name: \"rymindr_date\",\n    error: !!dateErr,\n    helperText: dateErr,\n    disablePast: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1309,\n      columnNumber: 9\n    }\n  }), \" \"), \" \", /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1320,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    inputVariant: \"outlined\",\n    label: \"Set Time\",\n    value: selectedTime,\n    onChange: handleTimeChange,\n    fullWidth: true,\n    ampm: false,\n    error: !!timeErr,\n    helperText: timeErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1322,\n      columnNumber: 9\n    }\n  }), \" \"), \" \", console.log('groupname_membersname-', groupname_membersname), \" \", /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1331,\n      columnNumber: 81\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    multiple: true,\n    limitTags: 1,\n    id: \"tags-filled\",\n    filterSelectedOptions: false,\n    options: groupname_membersname,\n    freeSolo: true,\n    value: groupname_membersname,\n    freeSolo: true,\n    onChange: (event, newValue) => {\n      console.log('newValue++', newValue);\n      const newVal = newValue.toString();\n      const getArray = newVal.split(',');\n      const user_id_arr = [];\n      const group_id_arr = [];\n\n      for (let i = 0; i < getArray.length; i++) {\n        const getNewList = businessusers.find(ele => ele.first_name + ' ' + ele.last_name == getArray[i]);\n        console.log('getArray', getArray);\n        console.log('getNewList', getNewList);\n\n        if (getNewList) {\n          if (getNewList == undefined) {} else {\n            user_id_arr.push(getNewList.user_id);\n            setcheckOnSelectAllMembers(false);\n          } // break;\n\n        } else {\n          // FOR GROUPS\n          const getNewGroupList = groups.find(ele => ele.group_name == getArray[i]);\n          console.log('getNewGroupList', getNewGroupList);\n          console.log('groups', groups);\n          console.log('getArray', getArray);\n\n          if (getNewGroupList == undefined) {} else {\n            group_id_arr.push(getNewGroupList.group_id);\n            setcheckOnSelectAllGroup(false);\n          }\n        }\n\n        console.log('user_id_arr', user_id_arr);\n        console.log('group_id_arr', group_id_arr);\n      }\n\n      setGroupname_membersname(newValue); // console.log('user_id_arr',user_id_arr)\n      // const data1 = user_id_arr[0];\n      // const index1 = memberchecked.indexOf(data1);\n      // if (index1 > -1) {\n      //   memberchecked.splice(index1, 1);\n      // }\n      // // newChecked.push(group_id);\n      // const data2 = group_id_arr[0];\n      // const index2 = checked.indexOf(data2);\n      // if (index2 > -1) {\n      //   checked.splice(index2, 1);\n      // }\n\n      setMemberchecked(user_id_arr);\n      setChecked(group_id_arr);\n      console.log('newValue', newValue);\n      console.log('memberchecked', memberchecked);\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      label: \"To\",\n      onChange: handleToopen,\n      onClick: handleToopen,\n      error: !!toErr,\n      helperText: toErr,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1396,\n        columnNumber: 27\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1333,\n      columnNumber: 9\n    }\n  }), \" \"), \" \", state.switchrecuring && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1409,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"Period\",\n    value: formvalue.rymindr_recurring_type,\n    fullWidth: true,\n    onChange: handleChange,\n    variant: \"outlined\",\n    name: \"rymindr_recurring_type\",\n    error: !!formValidation.rymindr_recurring_type,\n    helperText: formValidation.rymindr_recurring_type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1411,\n      columnNumber: 17\n    }\n  }, Recurring.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option,\n    value: option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1421,\n      columnNumber: 49\n    }\n  }, \" \", option, \" \")), \" \"), \" \"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1432,\n      columnNumber: 9\n    }\n  }, \" \", state.switchrecuring &&\n  /*#__PURE__*/\n  // <TextField\n  //   id='outlined-select-currency'\n  //   label='No. of Time'\n  //   value={formvalue.rymindr_period_type}\n  //   fullWidth\n  //   name='rymindr_period_type'\n  //   onChange={handleChange}\n  //   variant='outlined'\n  //   error={!!formValidation.rymindr_period_type}\n  //   helperText={formValidation.rymindr_period_type}\n  // />\n  React.createElement(DatePicker, {\n    label: \"Set End Date\",\n    inputVariant: \"outlined\",\n    value: selectedEndDate,\n    onChange: handleEndDateChange,\n    animateYearScrolling: true,\n    format: \"DD/MM/YYYY\",\n    fullWidth: true,\n    name: \"rymindr_end_date\",\n    error: !!endDateErr,\n    helperText: endDateErr,\n    disablePast: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1447,\n      columnNumber: 17\n    }\n  }), \" \", /*#__PURE__*/React.createElement(FormControlLabel, {\n    style: {\n      position: 'static',\n      marginLeft: 6,\n      marginTop: 8\n    },\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: state.switchrecuring,\n      onChange: handleSwitchChange,\n      name: \"switchrecuring\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1462,\n        columnNumber: 21\n      }\n    }),\n    label: \"Recurring\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1459,\n      columnNumber: 11\n    }\n  })), \" \", /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1473,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(CKEditor, {\n    config: ckEditorConfig,\n    editor: Editor,\n    data: formvalue.note,\n    name: \"note\",\n    onReady: editor => {\n      // You can store the \"editor\" and use when it is needed.\n      console.log('Editor is ready to use!', editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      console.log('datadata====', data);\n      handleChangeEditor(data);\n    } // onBlur={ ( event, editor ) => {\n    //   const data = editor.getData();\n    //   console.log('datadata====',data);\n    //     handleChangeEditor(data)\n    //     console.log( 'Blur.', editor );\n    // } }\n    ,\n    onFocus: (event, editor) => {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1475,\n      columnNumber: 9\n    }\n  }), \" \", \" \"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1523,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1525,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: \"attachement\",\n    control: /*#__PURE__*/React.createElement(FileBase64, {\n      multiple: true,\n      onDone: getFiles,\n      onClick: e => e.target.value = null,\n      className: \"displayNone\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1537,\n        columnNumber: 21\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      component: \"span\",\n      style: {\n        marginLeft: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1548,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Attachment, {\n      style: {\n        marginBottom: -6,\n        marginRight: 10\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1553,\n        columnNumber: 13\n      }\n    }), \" Attachments \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1535,\n      columnNumber: 9\n    }\n  }), \" \"), \" \", /*#__PURE__*/React.createElement(Box, {\n    alignItems: \"center\",\n    display: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1560,\n      columnNumber: 15\n    }\n  }, \" \", files && files.map((file, index) => {\n    // alert(files.length+'----'+index+'----'+file);\n    if (file.image_name != undefined) {\n      const extension_arr = file.image_name.split('.');\n      const extension = extension_arr[1];\n\n      if (extension == 'jpeg' || extension == 'jpg' || extension == 'png' || extension == 'gif') {\n        return /*#__PURE__*/React.createElement(TypoStyled, {\n          variant: \"subtitle1\",\n          component: \"p\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1571,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: file.file_name,\n          width: \"32\",\n          height: \"32\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1575,\n            columnNumber: 29\n          }\n        }), \" \", ' ', \" \", /*#__PURE__*/React.createElement(Box, {\n          className: classes.fileName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1578,\n            columnNumber: 55\n          }\n        }, \" \", file.image_name, \" \"), ' ', \" \", /*#__PURE__*/React.createElement(CancelIcon, {\n          onClick: () => deleteImage(index, file),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1579,\n            columnNumber: 101\n          }\n        }), \" \");\n      } else if (extension == 'mp3') {\n        return /*#__PURE__*/React.createElement(TypoStyled, {\n          variant: \"subtitle1\",\n          component: \"p\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1586,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Headset, {\n          className: classes.iconAttach,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1590,\n            columnNumber: 29\n          }\n        }), \" \", file.image_name, ' ', \" \", /*#__PURE__*/React.createElement(CancelIcon, {\n          onClick: () => deleteImage(index, file),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1592,\n            columnNumber: 55\n          }\n        }), \" \");\n      } else if (extension == 'mp4') {\n        return /*#__PURE__*/React.createElement(TypoStyled, {\n          variant: \"subtitle1\",\n          component: \"p\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1599,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Videocam, {\n          className: classes.iconAttach,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1603,\n            columnNumber: 29\n          }\n        }), \" \", file.image_name, ' ', \" \", /*#__PURE__*/React.createElement(CancelIcon, {\n          onClick: () => deleteImage(index, file),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1605,\n            columnNumber: 55\n          }\n        }), \" \");\n      } else if (extension == 'doc' || extension == 'docx' || extension == 'pdf') {\n        return /*#__PURE__*/React.createElement(TypoStyled, {\n          variant: \"subtitle1\",\n          component: \"p\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1612,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Description, {\n          className: classes.iconAttach,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1616,\n            columnNumber: 29\n          }\n        }), \" \", file.image_name, ' ', \" \", /*#__PURE__*/React.createElement(CancelIcon, {\n          onClick: () => deleteImage(index, file),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1618,\n            columnNumber: 55\n          }\n        }), \" \");\n      } else {\n        return /*#__PURE__*/React.createElement(TypoStyled, {\n          variant: \"subtitle1\",\n          component: \"p\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1625,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Description, {\n          className: classes.iconAttach,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1629,\n            columnNumber: 29\n          }\n        }), \" \", file.image_name, ' ', \" \", /*#__PURE__*/React.createElement(CancelIcon, {\n          onClick: () => deleteImage(index, file),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1631,\n            columnNumber: 55\n          }\n        }), \" \");\n      }\n    } else {\n      const extension_arr = file.name.split('.');\n      const extension = extension_arr[1];\n\n      if (extension == 'jpeg' || extension == 'jpg' || extension == 'png' || extension == 'gif') {\n        return /*#__PURE__*/React.createElement(TypoStyled, {\n          variant: \"subtitle1\",\n          component: \"p\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1642,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: file.base64,\n          width: \"32\",\n          height: \"32\",\n          className: classes.iconAttach,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1646,\n            columnNumber: 29\n          }\n        }), ' ', \" \", /*#__PURE__*/React.createElement(Box, {\n          className: classes.fileName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1651,\n            columnNumber: 37\n          }\n        }, \" \", file.name, \" \"), ' ', \" \", /*#__PURE__*/React.createElement(CancelIcon, {\n          onClick: () => deleteImage(index, file),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1652,\n            columnNumber: 95\n          }\n        }), \" \");\n      } else if (extension == 'mp3') {\n        return /*#__PURE__*/React.createElement(TypoStyled, {\n          variant: \"subtitle1\",\n          component: \"p\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1659,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Headset, {\n          className: classes.iconAttach,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1663,\n            columnNumber: 29\n          }\n        }), \" \", file.name, ' ', \" \", /*#__PURE__*/React.createElement(CancelIcon, {\n          onClick: () => deleteImage(index, file),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1665,\n            columnNumber: 49\n          }\n        }), \" \");\n      } else if (extension == 'mp4') {\n        return /*#__PURE__*/React.createElement(TypoStyled, {\n          variant: \"subtitle1\",\n          component: \"p\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1672,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Videocam, {\n          className: classes.iconAttach,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1676,\n            columnNumber: 29\n          }\n        }), \" \", file.name, ' ', \" \", /*#__PURE__*/React.createElement(CancelIcon, {\n          onClick: () => deleteImage(index, file),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1678,\n            columnNumber: 49\n          }\n        }), \" \");\n      } else if (extension == 'doc' || extension == 'docx' || extension == 'pdf') {\n        return /*#__PURE__*/React.createElement(TypoStyled, {\n          variant: \"subtitle1\",\n          component: \"p\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1685,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Description, {\n          className: classes.iconAttach,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1689,\n            columnNumber: 29\n          }\n        }), \" \", file.name, ' ', \" \", /*#__PURE__*/React.createElement(CancelIcon, {\n          onClick: () => deleteImage(index, file),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1691,\n            columnNumber: 49\n          }\n        }), \" \");\n      } else {\n        return /*#__PURE__*/React.createElement(TypoStyled, {\n          variant: \"subtitle1\",\n          component: \"p\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1698,\n            columnNumber: 34\n          }\n        }, /*#__PURE__*/React.createElement(Description, {\n          className: classes.iconAttach,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1702,\n            columnNumber: 29\n          }\n        }), \" \", file.name, ' ', \" \", /*#__PURE__*/React.createElement(CancelIcon, {\n          onClick: () => deleteImage(index, file),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1704,\n            columnNumber: 49\n          }\n        }), \" \");\n      }\n    }\n  }), \" \"), \" \"), \" \", /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1715,\n      columnNumber: 16\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1717,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1719,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleToSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    startIcon: /*#__PURE__*/React.createElement(Send, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1727,\n        columnNumber: 23\n      }\n    }),\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1722,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1729,\n      columnNumber: 22\n    }\n  }), \"Update Rymindr \"), \" \"), \" \"), \" \"), \" \"), \" \"), \" \"), \" \");\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.rymidr.loading,\n    error: state.rymidr.error,\n    categories: state.rymidr.categories,\n    subcategories: state.rymidr.subcategories,\n    groups: state.rymidr.groups,\n    businessusers: state.rymidr.businessusers,\n    rymindrDetails: state.rymidr.rymindrDetails,\n    matched_contact: state.rymidr.matched_contact,\n    success_message: state.rymidr.success_message\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCategoriesRymindr: data => dispatch(getCategoriesRymindr(data)),\n    editRymindr: (data, history, sendAttachment, deleteAttachment) => dispatch(editRymindr(data, history, sendAttachment, deleteAttachment)),\n    getRymidrDetails: data => dispatch(getRymidrDetails(data)),\n    getSubCategories: data => dispatch(getSubCategories(data)),\n    getGroups: data => dispatch(getGroups(data)),\n    getBusinessUsers: data => dispatch(getBusinessUsers(data)),\n    createRymindr: (data, unmatch, history, sendAttachment) => dispatch(createRymindr(data, unmatch, history, sendAttachment)),\n    inviteAndAddMobile: data => dispatch(inviteAndAddMobile(data))\n  };\n};\n\nEditRymindr.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  getcategories: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired,\n  categories: PropTypes.array.isRequired,\n  subcategories: PropTypes.array.isRequired,\n  getSubCategories: PropTypes.func.isRequired,\n  getGroups: PropTypes.func.isRequired,\n  groups: PropTypes.array.isRequired,\n  businessusers: PropTypes.array.isRequired,\n  getBusinessUsers: PropTypes.func.isRequired,\n  createRymindr: PropTypes.func.isRequired,\n  inviteAndAddMobile: PropTypes.func.isRequired,\n  matched_contact: PropTypes.any.isRequired,\n  success_message: PropTypes.any.isRequired,\n  rymindrDetails: PropTypes.any.isRequired,\n  getRymidrDetails: PropTypes.func.isRequired,\n  editRymindr: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(EditRymindr));","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/Rymindrs/CreateRymindr/EditRymindr.js"],"names":["Attachment","Replay","Send","Headset","Videocam","Description","Box","Button","Checkbox","FormControlLabel","Grid","MenuItem","Paper","Switch","TextField","Typography","IconButton","ArrowBack","Link","useHistory","useParams","useLocation","DatePicker","MuiPickersUtilsProvider","TimePicker","React","useEffect","useMemo","useState","createRymindr","getBusinessUsers","getCategoriesRymindr","getGroups","getSubCategories","inviteAndAddMobile","getRymidrDetails","editRymindr","makeStyles","styled","Autocomplete","CircularSpinner","MomentUtils","PropTypes","Slider","connect","moment","withSnackbar","FileBase64","CancelIcon","CKEditor","Editor","ckEditorConfig","ConfirmationDialogRaw","Tabmenu","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","position","iconAttach","primary","dark","background","light","height","width","borderRadius","float","marginTop","marginRight","fileName","maxWidth","whiteSpace","textOverflow","overflow","TypoHeadStyled","fontSize","main","textTransform","fontWeight","TypoStyled","marginBottom","cursor","display","TypoHeadInnerStyled","PaperStyled","SlideBoxStyled","SlideType","GridStyled","paddingLeft","paddingRight","breakpoints","down","Recurring","FormFields","rymindr_id","rymindr_date","note","is_shareable","rymindr_to_group","rymindr_group_members_to","category_id","rymindr_time","rymindr_to","rymindr_type","qiscus_id","user_id","user_name","rymindr_end_date","rymindr_period_type","rymindr_recurring_type","subcategory_id","appointment","is_qrcode","is_recurring","EditRymindr","props","classes","enqueueSnackbar","error","categories","subcategories","groups","businessusers","matched_contact","loading","DetailView","success_message","rymindrDetails","business_code","first_name","last_name","JSON","parse","localStorage","getItem","state","setState","checkedB","switch","switchrecuring","history","member_id","group_id","get_name","id","date","Date","selectedDate","sethandleDateChange","format","selectedTime","sethandleTimeChange","selectedEndDate","sethandleEndDateChange","add","subcategory","setSubCategory","checked","setChecked","memberchecked","setMemberchecked","checkOnSelectAllMembers","setcheckOnSelectAllMembers","checkOnSelectAllGroup","setcheckOnSelectAllGroup","group_members","setGroup_members","groupname_membersname","setGroupname_membersname","formvalue","setFormvalue","formValidation","setFormValidation","open","setOpen","timeErr","setTimeErr","toErr","settoErr","categories_listing","set_categories_listing","loaded","setLoaded","dateErr","setdateErr","endDateErr","setEndDateErr","slider","setSlider","phoneNumber","setPhoneNumber","files","setFiles","deleteFiles","setDeleteFiles","data","setData","window","location","href","split","default_val","set_default_val","editorValue","setEditorValue","handleChange","e","formdata","formvalidation","value","target","name","found","find","element","console","log","category_name","handleDateChange","selecteddate","currentDate","selectedEndDate1","currentDateTime","getTime","selectedDateTime","handleEndDateChange","selectedenddate","startDate","handleTimeChange","selectedtime","new_select","time","handleChangeCheck","event","handleSwitchChange","settings","accessibility","infinite","speed","slidesToShow","slidesToScroll","centerMode","focusOnSelect","initialSlide","afterChange","index","length","parent_cat_id","dataToSend","responsive","breakpoint","handleClose","newValue","membername","groupname","forEach","checkvalue","indexOf","push","group_name","concat","mobile_no","join","handleGroupToggle","groupMembers","group_member_list","currentIndex","newChecked","selectedmember","splice","remomeitem","handleMemberToggle","removeLoginUser","toString","removeUndefinedIndex","undefined","i","temp","handleAllMembersToggle","handleAllGroupMembersToggle","members","item","ryminder_id","SendToBusiness","dataTosend","is_page","edit_page","temp_subcategory","get_category","filter","is_message_center","count","ele","validate","isError","endDate","handleToTagvalue","handleReset","recurring","recurring_type","recurring_frequency","user_list","group_list","attachment","handleToSubmit","FormFields11","temp_final","getPeriod_type","sendAttachment","deleteAttachment","unmatch","d1","d2","secondsDiff","millisecondDiff","secDiff","Math","floor","minutesDiff","seconds","hoursDiff","minutes","daysDiff","hours","weeksDiff","days","yearsDiff","date1","date2","getFullYear","monthsDiff","years","months","getMonth","numbers","newCheckedMem","newCheckedGroup","recr_rymindr_id","qr_code","parseInt","start_date","newEndDate","addDays","copy","Number","setDate","getDate","variant","handleToopen","deleteImage","file","image_name","deleteThat","a","removeIndex","map","getFiles","inputfile","file_Array","files1","extn","etn","low","toLowerCase","handleChangeEditor","goBack","key","category_image","option","newVal","getArray","user_id_arr","group_id_arr","getNewList","getNewGroupList","params","marginLeft","editor","getData","extension_arr","extension","file_name","base64","mapStateToProps","rymidr","mapDispatchToProps","dispatch","propTypes","func","isRequired","bool","getcategories","string","array","any"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,OAAnC,EAA4CC,QAA5C,EAAsDC,WAAtD,QAAyE,oBAAzE;AACA,SACIC,GADJ,EAEIC,MAFJ,EAGIC,QAHJ,EAIIC,gBAJJ,EAKIC,IALJ,EAMIC,QANJ,EAOIC,KAPJ,EAQIC,MARJ,EASIC,SATJ,EAUIC,UAVJ,EAWIC,UAXJ,QAYO,mBAZP;AAaA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,WAAtC,QAAyD,kBAAzD;AACA,SAASC,UAAT,EAAqBC,uBAArB,EAA8CC,UAA9C,QAAgE,sBAAhE;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SACIC,aADJ,EAEIC,gBAFJ,EAGIC,oBAHJ,EAIIC,SAJJ,EAKIC,gBALJ,EAMIC,kBANJ,EAOIC,gBAPJ,EAQIC,WARJ,QASO,+BATP;AAUA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,0BAAnC;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,eAAP,MAA4B,0CAA5B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AAEA,OAAOC,qBAAP,MAAkC,mCAAlC;AACA,OAAOC,OAAP,MAAoB,8CAApB;AAEA,MAAMC,SAAS,GAAGjB,UAAU,CAAEkB,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GAD+B;AAIrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADN;AAEHC,IAAAA,SAAS,EAAE,QAFR;AAGHC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC,SAHvB;AAIHC,IAAAA,QAAQ,EAAE;AAJP,GAJ8B;AAUrCC,EAAAA,UAAU,EAAE;AACRL,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcK,OAAd,CAAsBC,IADrB;AAERC,IAAAA,UAAU,EAAEf,KAAK,CAACQ,OAAN,CAAcK,OAAd,CAAsBG,KAF1B;AAGRC,IAAAA,MAAM,EAAE,EAHA;AAIRC,IAAAA,KAAK,EAAE,EAJC;AAKRC,IAAAA,YAAY,EAAE,EALN;AAMRf,IAAAA,OAAO,EAAE,CAND;AAORgB,IAAAA,KAAK,EAAE,MAPC;AAQRC,IAAAA,SAAS,EAAE,CAAC,CARJ;AASRC,IAAAA,WAAW,EAAE;AATL,GAVyB;AAqBrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,QAAQ,EAAE,GADJ;AAENC,IAAAA,UAAU,EAAE,QAFN;AAGNC,IAAAA,YAAY,EAAE,UAHR;AAINC,IAAAA,QAAQ,EAAE;AAJJ;AArB2B,CAAZ,CAAD,CAA5B;AA4BA,MAAMC,cAAc,GAAG7C,MAAM,CAACvB,UAAD,CAAN,CAAmB,CAAC;AAAEwC,EAAAA;AAAF,CAAD,MAAgB;AACtD6B,EAAAA,QAAQ,EAAE,EAD4C;AAEtDtB,EAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcK,OAAd,CAAsBiB,IAFyB;AAGtDC,EAAAA,aAAa,EAAE,WAHuC;AAItDC,EAAAA,UAAU,EAAE;AAJ0C,CAAhB,CAAnB,CAAvB;AAMA,MAAMC,UAAU,GAAGlD,MAAM,CAACvB,UAAD,CAAN,CAAmB,CAAC;AAAEwC,EAAAA;AAAF,CAAD,MAAgB;AAClD6B,EAAAA,QAAQ,EAAE,EADwC;AAElDtB,EAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBI,OAFwB;AAGlDQ,EAAAA,SAAS,EAAE,EAHuC;AAIlDa,EAAAA,YAAY,EAAE,EAJoC;AAKlDC,EAAAA,MAAM,EAAE,SAL0C;AAMlDb,EAAAA,WAAW,EAAE,EANqC;AAOlDc,EAAAA,OAAO,EAAE;AAPyC,CAAhB,CAAnB,CAAnB;AAUA,MAAMC,mBAAmB,GAAGtD,MAAM,CAAC6C,cAAD,CAAN,CAAuB,CAAC;AAAE5B,EAAAA;AAAF,CAAD,MAAgB;AAC/DO,EAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBI;AADqC,CAAhB,CAAvB,CAA5B;AAIA,MAAMyB,WAAW,GAAGvD,MAAM,CAAC1B,KAAD,CAAN,CAAc;AAC9B+C,EAAAA,OAAO,EAAE;AADqB,CAAd,CAApB;AAGA,MAAMmC,cAAc,GAAGxD,MAAM,CAAChC,GAAD,CAAN,CAAY,OAAO;AACtCuD,EAAAA,SAAS,EAAE,QAD2B;AAEtC8B,EAAAA,OAAO,EAAE,cAF6B;AAItChC,EAAAA,OAAO,EAAE,EAJ6B;AAKtCe,EAAAA,YAAY,EAAE,EALwB;AAMtC,WAAS;AACLiB,IAAAA,OAAO,EAAE,cADJ;AAELnB,IAAAA,MAAM,EAAE,EAFH;AAGLC,IAAAA,KAAK,EAAE;AAHF;AAN6B,CAAP,CAAZ,CAAvB;AAaA,MAAMsB,SAAS,GAAGzD,MAAM,CAACvB,UAAD,CAAN,CAAmB,CAAC;AAAEwC,EAAAA;AAAF,CAAD,MAAgB;AACjDO,EAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBI,OADuB;AAEjDgB,EAAAA,QAAQ,EAAE;AAFuC,CAAhB,CAAnB,CAAlB;AAKA,MAAMY,UAAU,GAAG1D,MAAM,CAAC5B,IAAD,CAAN,CAAa,CAAC;AAAE6C,EAAAA;AAAF,CAAD,MAAgB;AAC5C0C,EAAAA,WAAW,EAAE,OAD+B;AAE5CC,EAAAA,YAAY,EAAE,OAF8B;AAG5C,GAAC3C,KAAK,CAAC4C,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BH,IAAAA,WAAW,EAAE,MADe;AAE5BC,IAAAA,YAAY,EAAE;AAFc,GAHY;AAQ5C,GAAC3C,KAAK,CAAC4C,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BH,IAAAA,WAAW,EAAE;AADe;AARY,CAAhB,CAAb,CAAnB;AAaA,MAAMI,SAAS,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,SAApB,EAA+B,QAA/B,CAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,UAAU,EAAE,EADG;AAEfC,EAAAA,YAAY,EAAE,EAFC;AAGfC,EAAAA,IAAI,EAAE,EAHS;AAIfC,EAAAA,YAAY,EAAE,IAJC;AAKfC,EAAAA,gBAAgB,EAAE,EALH;AAMfC,EAAAA,wBAAwB,EAAE,EANX;AAOfC,EAAAA,WAAW,EAAE,EAPE;AAQfC,EAAAA,YAAY,EAAE,EARC;AASfC,EAAAA,UAAU,EAAE,EATG;AAUfC,EAAAA,YAAY,EAAE,EAVC;AAWfC,EAAAA,SAAS,EAAE,EAXI;AAYfC,EAAAA,OAAO,EAAE,EAZM;AAafC,EAAAA,SAAS,EAAE,EAbI;AAcfC,EAAAA,gBAAgB,EAAE,EAdH;AAefC,EAAAA,mBAAmB,EAAE,EAfN;AAgBfC,EAAAA,sBAAsB,EAAE,EAhBT;AAiBfC,EAAAA,cAAc,EAAE,EAjBD;AAkBfC,EAAAA,WAAW,EAAE,IAlBE;AAmBfC,EAAAA,SAAS,EAAE,EAnBI;AAoBfC,EAAAA,YAAY,EAAE;AApBC,CAAnB;;AAuBA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAMC,OAAO,GAAGvE,SAAS,EAAzB;AAEA,QAAM;AACFwE,IAAAA,eADE;AAEFC,IAAAA,KAFE;AAGFC,IAAAA,UAHE;AAIFC,IAAAA,aAJE;AAKFhG,IAAAA,gBALE;AAMFD,IAAAA,SANE;AAOFkG,IAAAA,MAPE;AAQFC,IAAAA,aARE;AASFrG,IAAAA,gBATE;AAUFD,IAAAA,aAVE;AAWFK,IAAAA,kBAXE;AAYFkG,IAAAA,eAZE;AAaFC,IAAAA,OAbE;AAcFC,IAAAA,UAdE;AAeFC,IAAAA,eAfE;AAgBFC,IAAAA,cAhBE;AAiBFrG,IAAAA,gBAjBE;AAkBFC,IAAAA;AAlBE,MAmBFwF,KAnBJ;AAoBA,QAAM;AAAEV,IAAAA,OAAF;AAAWuB,IAAAA,aAAX;AAA0BC,IAAAA,UAA1B;AAAsCC,IAAAA;AAAtC,MAAoDC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAA1D;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrH,QAAQ,CAAC;AAC/BsH,IAAAA,QAAQ,EAAE,IADqB;AAE/BC,IAAAA,MAAM,EAAE,IAFuB;AAG/BC,IAAAA,cAAc,EAAE;AAHe,GAAD,CAAlC;AAKA,QAAMC,OAAO,GAAGlI,UAAU,EAA1B;AACA,QAAM;AAAEoF,IAAAA,UAAF;AAAc+C,IAAAA,SAAd;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA,QAAnC;AAA6CC,IAAAA;AAA7C,MAAoDrI,SAAS,EAAnE;AAEA,QAAMsI,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,QAAM,CAACC,YAAD,EAAeC,mBAAf,IAAsCjI,QAAQ,CAACiB,MAAM,CAAC,IAAI8G,IAAJ,EAAD,CAAN,CAAmBG,MAAnB,CAA0B,YAA1B,CAAD,CAApD;AACA,QAAM,CAACC,YAAD,EAAeC,mBAAf,IAAsCpI,QAAQ,CAACiB,MAAM,CAAC,IAAI8G,IAAJ,EAAD,CAAN,CAAmBG,MAAnB,CAA0B,kBAA1B,CAAD,CAApD,CAlC2B,CAmC3B;;AACA,QAAM,CAACG,eAAD,EAAkBC,sBAAlB,IAA4CtI,QAAQ,CAACiB,MAAM,CAAC,IAAI8G,IAAJ,EAAD,EAAa,YAAb,CAAN,CAAiCQ,GAAjC,CAAqC,CAArC,EAAwC,MAAxC,CAAD,CAA1D;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCzI,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAAC0I,OAAD,EAAUC,UAAV,IAAwB3I,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC4I,aAAD,EAAgBC,gBAAhB,IAAoC7I,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC8I,uBAAD,EAA0BC,0BAA1B,IAAwD/I,QAAQ,CAAC,KAAD,CAAtE;AACA,QAAM,CAACgJ,qBAAD,EAAwBC,wBAAxB,IAAoDjJ,QAAQ,CAAC,KAAD,CAAlE;AAEA,QAAM,CAACkJ,aAAD,EAAgBC,gBAAhB,IAAoCnJ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACoJ,qBAAD,EAAwBC,wBAAxB,IAAoDrJ,QAAQ,CAAC,EAAD,CAAlE;AACA,QAAM,CAACsJ,SAAD,EAAYC,YAAZ,IAA4BvJ,QAAQ,CAAC0E,UAAD,CAA1C;AACA,QAAM,CAAC8E,cAAD,EAAiBC,iBAAjB,IAAsCzJ,QAAQ,CAAC0E,UAAD,CAApD;AACA,QAAM,CAACgF,IAAD,EAAOC,OAAP,IAAkB3J,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC4J,OAAD,EAAUC,UAAV,IAAwB7J,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC8J,KAAD,EAAQC,QAAR,IAAoB/J,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACgK,kBAAD,EAAqBC,sBAArB,IAA+CjK,QAAQ,CAAC,EAAD,CAA7D;AACA,QAAM,CAACkK,MAAD,EAASC,SAAT,IAAsBnK,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACoK,OAAD,EAAUC,UAAV,IAAwBrK,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsK,UAAD,EAAaC,aAAb,IAA8BvK,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACwK,MAAD,EAASC,SAAT,IAAsBzK,QAAQ,CAAC,IAAD,CAApC;AAEA,QAAM,CAAC0K,WAAD,EAAcC,cAAd,IAAgC3K,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC4K,KAAD,EAAQC,QAAR,IAAoB7K,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC8K,WAAD,EAAcC,cAAd,IAAgC/K,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgL,IAAD,EAAOC,OAAP,IAAkBjL,QAAQ,CAACkL,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,IAA3B,EAAiC,CAAjC,CAAD,CAAhC;AACA,QAAM,CAACC,WAAD,EAAcC,eAAd,IAAiCvL,QAAQ,CAAC,CAAD,CAA/C;AACA,QAAM,CAACwL,WAAD,EAAcC,cAAd,IAAgCzL,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAM0L,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAMC,QAAQ,GAAG,EAAC,GAAGtC;AAAJ,KAAjB;AACA,UAAMuC,cAAc,GAAG,EAAC,GAAGrC;AAAJ,KAAvB;AACA,UAAMsC,KAAK,GAAGH,CAAC,CAACI,MAAF,CAASD,KAAvB;AACA,UAAME,IAAI,GAAGL,CAAC,CAACI,MAAF,CAASC,IAAtB;;AAEA,QAAIA,IAAI,KAAK,cAAb,EAA6B;AACzB,YAAMC,KAAK,GAAG5F,aAAa,CAAC6F,IAAd,CAAoBC,OAAD,IAAaA,OAAO,CAACtE,EAAR,KAAeiE,KAA/C,CAAd;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B/C,SAA3B;AACAsC,MAAAA,QAAQ,CAACxG,YAAT,GAAwB6G,KAAK,CAACK,aAA9B;AACAV,MAAAA,QAAQ,CAACjG,cAAT,GAA0BmG,KAA1B;AACAD,MAAAA,cAAc,CAAClG,cAAf,GAAgC,EAAhC;AACA8D,MAAAA,iBAAiB,CAACoC,cAAD,CAAjB;AACH,KAPD,MAOO,IAAIG,IAAI,KAAK,MAAb,EAAqB;AACxBH,MAAAA,cAAc,CAAChH,IAAf,GAAsB,EAAtB;AACA4E,MAAAA,iBAAiB,CAACoC,cAAD,CAAjB;AACAD,MAAAA,QAAQ,CAACI,IAAD,CAAR,GAAiBF,KAAjB;AACH,KAJM,MAIA,IAAIE,IAAI,KAAK,wBAAb,EAAuC;AAC1CH,MAAAA,cAAc,CAACnG,sBAAf,GAAwC,EAAxC;AACA+D,MAAAA,iBAAiB,CAACoC,cAAD,CAAjB;AACAD,MAAAA,QAAQ,CAACI,IAAD,CAAR,GAAiBF,KAAjB;AACH,KAJM,MAIA;AACHF,MAAAA,QAAQ,CAACI,IAAD,CAAR,GAAiBF,KAAjB;AACH;;AACDvC,IAAAA,YAAY,CAACqC,QAAD,CAAZ;AACH,GAzBD;;AA2BA,QAAMW,gBAAgB,GAAIZ,CAAD,IAAO;AAC5B,UAAME,cAAc,GAAG,EAAC,GAAGrC;AAAJ,KAAvB;AAEA,UAAM1B,IAAI,GAAG,IAAIC,IAAJ,CAAS4D,CAAT,CAAb;AACA,UAAMa,YAAY,GAAGvL,MAAM,CAAC6G,IAAD,CAAN,CAAaI,MAAb,CAAoB,YAApB,CAArB;AACA,UAAMuE,WAAW,GAAGxL,MAAM,CAAC,IAAI8G,IAAJ,EAAD,CAAN,CAAmBG,MAAnB,CAA0B,YAA1B,CAApB;AACA,UAAMwE,gBAAgB,GAAGzL,MAAM,CAACoH,eAAD,CAAN,CAAwBH,MAAxB,CAA+B,YAA/B,CAAzB;AACA,UAAMyE,eAAe,GAAG1L,MAAM,CAAC,IAAI8G,IAAJ,GAAW6E,OAAX,EAAD,CAAN,CAA6B1E,MAA7B,CAAoC,kBAApC,CAAxB;AAEA,UAAM2E,gBAAgB,GAAGL,YAAY,GAAG,GAAf,GAAqBvL,MAAM,CAAC,IAAI8G,IAAJ,CAASI,YAAT,EAAuByE,OAAvB,EAAD,CAAN,CAAyC1E,MAAzC,CAAgD,OAAhD,CAA9C;;AAEA,QAAIuE,WAAW,IAAID,YAAnB,EAAiC;AAC7BnC,MAAAA,UAAU,CAAC,EAAD,CAAV;AACApC,MAAAA,mBAAmB,CAACuE,YAAD,CAAnB,CAF6B,CAG7B;;AACAjD,MAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAe1E,QAAAA,YAAY,EAAE4H;AAA7B,OAAD,CAAZ,CAJ6B,CAK7B;AACA;;AACA,UAAIC,WAAW,IAAID,YAAf,IAA+BK,gBAAgB,GAAGF,eAAtD,EAAuE;AACnE9C,QAAAA,UAAU,CAAC,oDAAD,CAAV;AACAgC,QAAAA,cAAc,CAAC3G,YAAf,GAA8B,oDAA9B;AACH,OAHD,MAGO;AACH2E,QAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ,KAbD,MAaO;AACHQ,MAAAA,UAAU,CAAC,oDAAD,CAAV;AACH;;AACD,QAAIjD,KAAK,CAACI,cAAV,EAA0B;AACtB,UAAIkF,gBAAgB,GAAGF,YAAvB,EAAqC;AACjCJ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA9B,QAAAA,aAAa,CAAC,kDAAD,CAAb;AACAtC,QAAAA,mBAAmB,CAACuE,YAAD,CAAnB;AACH,OAJD,MAIO,IAAIE,gBAAgB,IAAIF,YAAxB,EAAsC;AACzCjC,QAAAA,aAAa,CAAC,0CAAD,CAAb;AACAtC,QAAAA,mBAAmB,CAACuE,YAAD,CAAnB;AACH,OAHM,MAGA;AACHjC,QAAAA,aAAa,CAAC,EAAD,CAAb;AACAtC,QAAAA,mBAAmB,CAACuE,YAAD,CAAnB;AACH;AACJ;AACJ,GAxCD;;AA0CA,QAAMM,mBAAmB,GAAInB,CAAD,IAAO;AAC/B,UAAM7D,IAAI,GAAG,IAAIC,IAAJ,CAAS4D,CAAT,CAAb;AACA,UAAMoB,eAAe,GAAG9L,MAAM,CAAC6G,IAAD,CAAN,CAAaI,MAAb,CAAoB,YAApB,CAAxB;AACA,UAAMuE,WAAW,GAAGxL,MAAM,CAAC,IAAI8G,IAAJ,EAAD,CAAN,CAAmBG,MAAnB,CAA0B,YAA1B,CAApB;AACA,UAAM8E,SAAS,GAAG/L,MAAM,CAAC+G,YAAD,CAAN,CAAqBE,MAArB,CAA4B,YAA5B,CAAlB;AACAkE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BW,SAA5B;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCU,eAAlC;;AACA,QAAIN,WAAW,IAAIM,eAAnB,EAAoC;AAChCxC,MAAAA,aAAa,CAAC,oDAAD,CAAb;AACAjC,MAAAA,sBAAsB,CAACyE,eAAD,CAAtB;AACH,KAHD,MAGO,IAAIC,SAAS,IAAID,eAAjB,EAAkC;AACrCxC,MAAAA,aAAa,CAAC,0CAAD,CAAb;AACAjC,MAAAA,sBAAsB,CAACyE,eAAD,CAAtB;AACH,KAHM,MAGA;AACHxC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAjC,MAAAA,sBAAsB,CAACyE,eAAD,CAAtB;AACAxD,MAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAe9D,QAAAA,gBAAgB,EAAEuH;AAAjC,OAAD,CAAZ;AACH;AACJ,GAlBD;;AAoBA,QAAME,gBAAgB,GAAItB,CAAD,IAAO;AAC5B,UAAM7D,IAAI,GAAG,IAAIC,IAAJ,CAAS4D,CAAT,CAAb;AACA,UAAMuB,YAAY,GAAGjM,MAAM,CAAC6G,IAAD,CAA3B;AAEA,UAAM0E,YAAY,GAAGvL,MAAM,CAAC,IAAI8G,IAAJ,CAASmF,YAAT,EAAuBN,OAAvB,EAAD,CAAN,CAAyC1E,MAAzC,CAAgD,kBAAhD,CAArB;AACA,UAAMuE,WAAW,GAAGxL,MAAM,CAAC,IAAI8G,IAAJ,GAAW6E,OAAX,EAAD,CAAN,CAA6B1E,MAA7B,CAAoC,kBAApC,CAApB;AAEA,UAAMiF,UAAU,GAAGlM,MAAM,CAAC+G,YAAD,CAAN,CAAqBE,MAArB,CAA4B,YAA5B,IAA4C,GAA5C,GAAkDjH,MAAM,CAAC,IAAI8G,IAAJ,CAAS4D,CAAT,EAAYiB,OAAZ,EAAD,CAAN,CAA8B1E,MAA9B,CAAqC,OAArC,CAArE;;AAEA,QAAIuE,WAAW,IAAIU,UAAnB,EAA+B;AAC3B,YAAMC,IAAI,GAAGnM,MAAM,CAAC,IAAI8G,IAAJ,CAAS4D,CAAT,EAAYiB,OAAZ,EAAD,CAAN,CAA8B1E,MAA9B,CAAqC,OAArC,CAAb;AACA2B,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAzB,MAAAA,mBAAmB,CAAC+E,UAAD,CAAnB;AACA5D,MAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAepE,QAAAA,YAAY,EAAEiI;AAA7B,OAAD,CAAZ;AACH,KALD,MAKO;AACHtD,MAAAA,UAAU,CAAC,oDAAD,CAAV;AACAzB,MAAAA,mBAAmB,CAAC+E,UAAD,CAAnB;AACA5D,MAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAepE,QAAAA,YAAY,EAAEiI;AAA7B,OAAD,CAAZ;AACH;AACJ,GAnBD;;AAqBA,QAAME,iBAAiB,GAAIC,KAAD,IAAW;AACjCjG,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAW,OAACkG,KAAK,CAACvB,MAAN,CAAaC,IAAd,GAAqBsB,KAAK,CAACvB,MAAN,CAAarD;AAA7C,KAAD,CAAR;AACAa,IAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAe,OAACgE,KAAK,CAACvB,MAAN,CAAaC,IAAd,GAAqBsB,KAAK,CAACvB,MAAN,CAAarD;AAAjD,KAAD,CAAZ;AACH,GAHD;;AAIA,QAAM6E,kBAAkB,GAAID,KAAD,IAAW;AAClCjG,IAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAW,OAACkG,KAAK,CAACvB,MAAN,CAAaC,IAAd,GAAqBsB,KAAK,CAACvB,MAAN,CAAarD;AAA7C,KAAD,CAAR;AACH,GAFD;;AAGA,QAAM8E,QAAQ,GAAG;AACbC,IAAAA,aAAa,EAAE,IADF;AAEbC,IAAAA,QAAQ,EAAE,IAFG;AAGbC,IAAAA,KAAK,EAAE,GAHM;AAIbC,IAAAA,YAAY,EAAE,CAJD;AAKbC,IAAAA,cAAc,EAAE,CALH;AAMbC,IAAAA,UAAU,EAAE,IANC;AAObC,IAAAA,aAAa,EAAE,IAPF;AAQbC,IAAAA,YAAY,EAAExF,WARD;AASbyF,IAAAA,WAAW,EAAGC,KAAD,IAAW;AACpB,UAAIlE,kBAAkB,CAACmE,MAAnB,GAA4B,CAAhC,EAAmC;AAC/B,cAAMvC,QAAQ,GAAG,EAAC,GAAGtC;AAAJ,SAAjB;AACAb,QAAAA,cAAc,CAACyF,KAAD,CAAd;AACA,cAAME,aAAa,GAAGpE,kBAAkB,CAACkE,KAAD,CAAlB,CAA0BrG,EAAhD;AAEA+D,QAAAA,QAAQ,CAAC3G,WAAT,GAAuBmJ,aAAvB;AACAxC,QAAAA,QAAQ,CAACjG,cAAT,GAA0B,EAA1B;AACAiG,QAAAA,QAAQ,CAACxG,YAAT,GAAwB,EAAxB;AACAmE,QAAAA,YAAY,CAACqC,QAAD,CAAZ;AACA,cAAMyC,UAAU,GAAG;AACf/I,UAAAA,OADe;AAEfL,UAAAA,WAAW,EAAEmJ;AAFE,SAAnB;AAKA/N,QAAAA,gBAAgB,CAACgO,UAAD,CAAhB;AACH;AACJ,KA1BY;AA2BbC,IAAAA,UAAU,EAAE,CAAC;AACLC,MAAAA,UAAU,EAAE,IADP;AAELf,MAAAA,QAAQ,EAAE;AACNI,QAAAA,YAAY,EAAE;AADR;AAFL,KAAD,EAMR;AACIW,MAAAA,UAAU,EAAE,IADhB;AAEIf,MAAAA,QAAQ,EAAE;AACNI,QAAAA,YAAY,EAAE;AADR;AAFd,KANQ,EAYR;AACIW,MAAAA,UAAU,EAAE,GADhB;AAEIf,MAAAA,QAAQ,EAAE;AACNI,QAAAA,YAAY,EAAE;AADR;AAFd,KAZQ;AA3BC,GAAjB;;AAgDA,QAAMY,WAAW,GAAIC,QAAD,IAAc;AAC9B9E,IAAAA,OAAO,CAAC8E,QAAD,CAAP;AACA,UAAMC,UAAU,GAAG,EAAnB;AACA,UAAMC,SAAS,GAAG,EAAlB;;AACA,QAAIrI,MAAM,CAAC6H,MAAP,GAAgB,CAApB,EAAuB;AACnB7H,MAAAA,MAAM,CAACsI,OAAP,CAAgBzC,OAAD,IAAa;AACxB,cAAM0C,UAAU,GAAGnG,OAAO,CAACoG,OAAR,CAAgB3C,OAAO,CAACxE,QAAxB,CAAnB;;AACA,YAAIkH,UAAU,KAAK,CAAC,CAApB,EAAuB;AACnBF,UAAAA,SAAS,CAACI,IAAV,CAAe5C,OAAO,CAAC6C,UAAvB;AACH,SAJuB,CAKxB;AACA;AACA;;AACH,OARD;AASH;;AAED,QAAIzI,aAAa,CAAC4H,MAAd,GAAuB,CAA3B,EAA8B;AAC1B5H,MAAAA,aAAa,CAACqI,OAAd,CAAuBzC,OAAD,IAAa;AAC/B,cAAM0C,UAAU,GAAGjG,aAAa,CAACkG,OAAd,CAAsB3C,OAAO,CAAC7G,OAA9B,CAAnB;;AACA,YAAIuJ,UAAU,KAAK,CAAC,CAApB,EAAuB;AACnB,cAAI1C,OAAO,CAAC7G,OAAR,IAAmBA,OAAvB,EAAgC;AAC5BoJ,YAAAA,UAAU,CAACK,IAAX,CAAgB,KAAhB;AACH,WAFD,MAEO;AACHL,YAAAA,UAAU,CAACK,IAAX,CAAiB,GAAE5C,OAAO,CAACrF,UAAW,IAAGqF,OAAO,CAACpF,SAAU,EAA3D;AACH;AACJ,SAND,MAMO,IAAIoF,OAAO,CAAC7G,OAAR,IAAmBoC,SAAvB,EAAkC;AACrC,cAAIyE,OAAO,CAAC7G,OAAR,IAAmBA,OAAvB,EAAgC;AAC5BoJ,YAAAA,UAAU,CAACK,IAAX,CAAiB,KAAjB;AACH,WAFD,MAEO;AACHL,YAAAA,UAAU,CAACK,IAAX,CAAiB,GAAE5C,OAAO,CAACrF,UAAW,IAAGqF,OAAO,CAACpF,SAAU,EAA3D;AACH;AACJ;;AACDgD,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,OAhBD;;AAiBA,UAAI2E,UAAU,IAAI,EAAlB,EAAsB;AAClBA,QAAAA,UAAU,CAACK,IAAX,CAAgB,KAAhB;AACH;;AAED1F,MAAAA,wBAAwB,CAACsF,SAAS,CAACM,MAAV,CAAiBP,UAAjB,CAAD,CAAxB;;AACA,UAAIhG,OAAO,CAACyF,MAAR,IAAkB,CAAlB,IAAuBvF,aAAa,CAACuF,MAAd,IAAwB,CAAnD,EAAsD;AAClD9E,QAAAA,wBAAwB,CAAC,EAAD,CAAxB;AACH;;AACD,YAAMgF,UAAU,GAAG;AACfa,QAAAA,SAAS,EAAExE,WAAW,CAACyE,IAAZ;AADI,OAAnB;;AAGA,UAAIzE,WAAW,CAACyD,MAAZ,GAAqB,CAAzB,EAA4B;AACxB7N,QAAAA,kBAAkB,CAAC+N,UAAD,CAAlB;AACH;;AAED,UAAII,QAAJ,EAAc,CACV;AACH;AACJ;AACJ,GArDD;;AAuDA,QAAMW,iBAAiB,GAAItD,KAAD,IAAW;AACjC;AACA7C,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAmD,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B3D,OAA3B;AACA,UAAM2G,YAAY,GAAGvD,KAAK,CAACwD,iBAA3B;AACA,UAAMC,YAAY,GAAG7G,OAAO,CAACoG,OAAR,CAAgBhD,KAAK,CAACnE,QAAtB,CAArB;AACA,UAAM6H,UAAU,GAAG,CAAC,GAAG9G,OAAJ,CAAnB;AACA,UAAM+G,cAAc,GAAG,CAAC,GAAGvG,aAAJ,CAAvB;;AAEA,QAAIqG,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACrBC,MAAAA,UAAU,CAACT,IAAX,CAAgBjD,KAAK,CAACnE,QAAtB;AACA0H,MAAAA,YAAY,CAACT,OAAb,CAAsBzC,OAAD,IAAa;AAC9BsD,QAAAA,cAAc,CAACV,IAAf,CAAoB5C,OAAO,CAAC7G,OAA5B;AACH,OAFD;AAGH,KALD,MAKO;AACHkK,MAAAA,UAAU,CAACE,MAAX,CAAkBH,YAAlB,EAAgC,CAAhC;AACAF,MAAAA,YAAY,CAACT,OAAb,CAAsBzC,OAAD,IAAa;AAC9B,cAAMwD,UAAU,GAAGF,cAAc,CAACX,OAAf,CAAuB3C,OAAO,CAAC7G,OAA/B,CAAnB;AACAmK,QAAAA,cAAc,CAACC,MAAf,CAAsBC,UAAtB,EAAkC,CAAlC;AACH,OAHD;AAIH;;AACDhH,IAAAA,UAAU,CAAC6G,UAAD,CAAV;AACArG,IAAAA,gBAAgB,CAACsG,cAAD,CAAhB;AACH,GAvBD;;AAyBA,QAAMG,kBAAkB,GAAI9D,KAAD,IAAW;AAClC,UAAMyD,YAAY,GAAG3G,aAAa,CAACkG,OAAd,CAAsBhD,KAAK,CAACxG,OAA5B,CAArB;AACA,UAAMkK,UAAU,GAAG,CAAC,GAAG5G,aAAJ,CAAnB;;AACA,QAAIjB,QAAQ,IAAI,GAAhB,EAAqB;AACjB6H,MAAAA,UAAU,CAACT,IAAX,CAAgBpH,QAAhB;AACH;;AACD,QAAID,SAAS,IAAI,GAAjB,EAAsB;AAClB8H,MAAAA,UAAU,CAACT,IAAX,CAAgBrH,SAAhB;AACH;;AAED,QAAI6H,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACrBC,MAAAA,UAAU,CAACT,IAAX,CAAgBjD,KAAK,CAACxG,OAAtB;AACH,KAFD,MAEO;AACHkK,MAAAA,UAAU,CAACE,MAAX,CAAkBH,YAAlB,EAAgC,CAAhC;AACH;;AAED,UAAMM,eAAe,GAAGL,UAAU,CAACV,OAAX,CAAmBxJ,OAAO,CAACwK,QAAR,EAAnB,CAAxB;AACA,UAAMC,oBAAoB,GAAGP,UAAU,CAACV,OAAX,CAAmBkB,SAAnB,CAA7B;;AAEA,QAAIH,eAAe,GAAG,CAAC,CAAvB,EAA0B;AACtBL,MAAAA,UAAU,CAACE,MAAX,CAAkBG,eAAlB,EAAmC,CAAnC;AACH;;AACD,QAAIE,oBAAoB,GAAG,CAAC,CAA5B,EAA+B;AAC3B,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,UAAU,CAACrB,MAA/B,EAAuC8B,CAAC,EAAxC,EAA4C;AACxC,YAAIT,UAAU,CAACS,CAAD,CAAV,IAAiBD,SAArB,EAAgC;AAC5BR,UAAAA,UAAU,CAACE,MAAX,CAAkBF,UAAU,CAACV,OAAX,CAAmBkB,SAAnB,CAAlB,EAAiD,CAAjD;AACAC,UAAAA,CAAC;AACJ;AACJ;;AACD,UAAIT,UAAU,CAACrB,MAAX,GAAoB,CAAxB,EAA2B;AACvBqB,QAAAA,UAAU,CAACT,IAAX,CAAgBzJ,OAAhB;AACA,YAAI4K,IAAI,GAAG,EAAX,CAFuB,CAGvB;AACH;AACJ;;AAEDrH,IAAAA,gBAAgB,CAAC2G,UAAD,CAAhB;AACAnG,IAAAA,wBAAwB,CAAC6G,IAAD,CAAxB;AAEA,UAAMvB,SAAS,GAAG,EAAlB;AACA,UAAMD,UAAU,GAAG,EAAnB;;AAEA,QAAI5C,KAAK,IAAI,CAAb,EAAgB;AACZvF,MAAAA,aAAa,CAACqI,OAAd,CAAuBzC,OAAD,IAAa;AAC/BuC,QAAAA,UAAU,CAACK,IAAX,CAAgB5C,OAAO,CAACrF,UAAR,KAAuB,EAAvB,GAA6B,GAAEqF,OAAO,CAACrF,UAAW,IAAGqF,OAAO,CAACpF,SAAU,EAAvE,GAA2EoF,OAAO,CAAC+C,SAAnG;AAEAM,QAAAA,UAAU,CAACT,IAAX,CAAgB5C,OAAO,CAAC7G,OAAxB;AACH,OAJD;AAKAyD,MAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACAF,MAAAA,gBAAgB,CAAC2G,UAAD,CAAhB;AACH,KARD,MAQO,IAAI1D,KAAK,IAAI,CAAb,EAAgB;AACnBxF,MAAAA,MAAM,CAACsI,OAAP,CAAgBzC,OAAD,IAAa;AACxBwC,QAAAA,SAAS,CAACI,IAAV,CAAe5C,OAAO,CAAC6C,UAAvB;AACAQ,QAAAA,UAAU,CAACT,IAAX,CAAgB5C,OAAO,CAACxE,QAAxB;AACH,OAHD;AAIAsB,MAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACAN,MAAAA,UAAU,CAAC6G,UAAD,CAAV;AACH,KAPM,MAOA,IAAI1D,KAAK,IAAI,CAAb,EAAgB;AACnB/C,MAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACAF,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH,KAHM,MAGA,IAAIiD,KAAK,IAAI,CAAb,EAAgB;AACnB7C,MAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAN,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH,KAHM,MAGA;AACHI,MAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACH;;AACDM,IAAAA,wBAAwB,CAACsF,SAAS,CAACM,MAAV,CAAiBP,UAAjB,CAAD,CAAxB;AACAtC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCjD,qBAArC;AACH,GApED;;AAsEA,QAAM+G,sBAAsB,GAAIrE,KAAD,IAAW;AACtC,UAAM0D,UAAU,GAAG,CAAC,GAAG1D,KAAJ,CAAnB;AACAjD,IAAAA,gBAAgB,CAAC2G,UAAD,CAAhB;AACApD,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BzD,aAA9B;AACH,GAJD;;AAMA,QAAMwH,2BAA2B,GAAItE,KAAD,IAAW;AAC3C,UAAM0D,UAAU,GAAG,CAAC,GAAG1D,KAAJ,CAAnB;AACAnD,IAAAA,UAAU,CAAC6G,UAAD,CAAV;AACApD,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB3D,OAAvB;AACA,QAAI2H,OAAO,GAAG,EAAd;AACA,UAAMhB,YAAY,GAAG/I,MAAM,CAACsI,OAAP,CAAgB0B,IAAD,IAAU;AAC1CD,MAAAA,OAAO,GAAGA,OAAO,GAAG,GAAV,GAAgBC,IAAI,CAACpH,aAA/B;AACH,KAFoB,CAArB;AAGAC,IAAAA,gBAAgB,CAACkH,OAAD,CAAhB;AACAjE,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBgE,OAAxB;AACH,GAVD;;AAYA,QAAMlF,QAAQ,GAAG1L,WAAW,EAA5B,CA7Y2B,CA6YK;;AAChCK,EAAAA,SAAS,CAAC,MAAM;AACZsM,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoClB,QAAQ,CAAC/D,KAA7C,EADY,CAEZ;;AACA,QAAI+D,QAAQ,CAAC/D,KAAb,EAAoB;AAChBa,MAAAA,mBAAmB,CAACkD,QAAQ,CAAC/D,KAAT,CAAeY,YAAhB,CAAnB;AACH,KAFD,MAEO;AACHC,MAAAA,mBAAmB,CAAC,IAAIF,IAAJ,EAAD,CAAnB;AACH,KAPW,CAQZ;;;AAEA,UAAMsG,UAAU,GAAG;AACfkC,MAAAA,WAAW,EAAE5L,UADE;AAEfM,MAAAA,WAAW,EAAE,EAFE;AAGfK,MAAAA;AAHe,KAAnB;AAKAU,IAAAA,KAAK,CAAC7F,oBAAN,CAA2BkO,UAA3B;AAEAjO,IAAAA,SAAS,CAAC;AAAEkF,MAAAA;AAAF,KAAD,CAAT;AACA,UAAMkL,cAAc,GAAG;AACnBlL,MAAAA,OADmB;AAEnBuB,MAAAA;AAFmB,KAAvB;AAKA3G,IAAAA,gBAAgB,CAACsQ,cAAD,CAAhB;AACA,UAAMC,UAAU,GAAG;AACfnL,MAAAA,OADe;AAEfX,MAAAA,UAAU,EAAEA,UAFG;AAGf+L,MAAAA,OAAO,EAAE,SAHM;AAIfC,MAAAA,SAAS,EAAE;AAJI,KAAnB;AAMApQ,IAAAA,gBAAgB,CAACkQ,UAAD,CAAhB,CA9BY,CA+BZ;AACH,GAhCQ,EAgCN,EAhCM,CAAT;AAkCA3Q,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM8Q,gBAAgB,GAAGtH,SAAS,CAACrE,WAAnC,CADY,CAEZ;AACA;AACA;AACH,GALQ,EAKN,CAACuF,MAAD,CALM,CAAT;AAOA1K,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIsG,UAAU,CAAC+H,MAAX,GAAoB,CAAxB,EAA2B;AACvB,UAAIvH,cAAc,IAAI,IAAtB,EAA4B;AACxB,cAAMiK,YAAY,GAAGzK,UAAU,CAAC0K,MAAX,CAAmBR,IAAD,IAAUA,IAAI,CAACS,iBAAL,KAA2B,CAAvD,CAArB;AAEA,YAAIC,KAAK,GAAG,CAAZ;AACA5K,QAAAA,UAAU,CAACwI,OAAX,CAAoBqC,GAAD,IAAS;AACxB,cAAIA,GAAG,CAACpJ,EAAJ,IAAUjB,cAAc,CAAC3B,WAA7B,EAA0C;AACtCsG,YAAAA,eAAe,CAACyF,KAAD,CAAf;AACA7G,YAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AACD,YAAE6G,KAAF;AACH,SAND;AAQA/G,QAAAA,sBAAsB,CAAC4G,YAAD,CAAtB;AACH;AACJ;AACJ,GAlBQ,EAkBN,CAACzK,UAAD,EAAaQ,cAAb,CAlBM,CAAT;;AAmBA,QAAMsK,QAAQ,GAAG,MAAM;AACnB,UAAMrF,cAAc,GAAG,EAAC,GAAGrC;AAAJ,KAAvB;AACA,QAAI2H,OAAO,GAAG,KAAd;AACA,UAAMC,OAAO,GAAGnQ,MAAM,CAACoH,eAAD,CAAN,CAAwBH,MAAxB,CAA+B,YAA/B,CAAhB;AAEAkE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBrE,YAAtB,EAAoC,IAApC,EAA0CK,eAA1C;;AAEA,QAAI,CAACiB,SAAS,CAAC3D,cAAf,EAA+B;AAC3BwL,MAAAA,OAAO,GAAG,IAAV;AACAtF,MAAAA,cAAc,CAAClG,cAAf,GAAgC,8BAAhC;AACA8D,MAAAA,iBAAiB,CAACoC,cAAD,CAAjB;AACH;;AAED,QAAIzE,KAAK,CAACI,cAAV,EAA0B;AACtB,UAAIQ,YAAY,GAAGoJ,OAAnB,EAA4B;AACxBD,QAAAA,OAAO,GAAG,IAAV;AACA5G,QAAAA,aAAa,CAAC,0CAAD,CAAb;AACH;AACJ;;AAED,QAAI,CAACjB,SAAS,CAACpE,YAAf,EAA6B,CACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AACD,QAAI,CAACoE,SAAS,CAACzE,IAAf,EAAqB;AACjBsM,MAAAA,OAAO,GAAG,IAAV;AACAtF,MAAAA,cAAc,CAAChH,IAAf,GAAsB,sBAAtB;AACA4E,MAAAA,iBAAiB,CAACoC,cAAD,CAAjB;AACH,KAJD,MAIO,IAAIvC,SAAS,CAACzE,IAAV,CAAesJ,MAAf,GAAwB,IAA5B,EAAkC;AACrCgD,MAAAA,OAAO,GAAG,IAAV;AACAtF,MAAAA,cAAc,CAAChH,IAAf,GAAsB,iDAAtB;AACA4E,MAAAA,iBAAiB,CAACoC,cAAD,CAAjB;AACH;;AACD,QAAIzB,OAAO,KAAK,EAAhB,EAAoB;AAChB+G,MAAAA,OAAO,GAAG,IAAV;AACA9G,MAAAA,UAAU,CAAC,oDAAD,CAAV;AACH;;AACD,QAAIT,OAAO,KAAK,EAAhB,EAAoB;AAChBuH,MAAAA,OAAO,GAAG,IAAV;AACAtH,MAAAA,UAAU,CAAC,oDAAD,CAAV;AACH;;AACD,QAAIT,qBAAqB,CAAC+E,MAAtB,IAAgC,CAApC,EAAuC;AACnCgD,MAAAA,OAAO,GAAG,IAAV;AACApH,MAAAA,QAAQ,CAAC,iCAAD,CAAR;AACH,KAjDkB,CAkDnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAI3C,KAAK,CAACI,cAAV,EAA0B;AACtB,UAAI8C,UAAU,KAAK,EAAnB,EAAuB;AACnB6G,QAAAA,OAAO,GAAG,IAAV;AACA5G,QAAAA,aAAa,CAACD,UAAD,CAAb;AACH;;AACD,UAAI,CAAChB,SAAS,CAAC5D,sBAAf,EAAuC;AACnCyL,QAAAA,OAAO,GAAG,IAAV;AACAtF,QAAAA,cAAc,CAACnG,sBAAf,GAAwC,0BAAxC;AACA+D,QAAAA,iBAAiB,CAACoC,cAAD,CAAjB;AACH;AACJ;;AACD,WAAOsF,OAAP;AACH,GA/FD;;AAiGA,QAAME,gBAAgB,GAAIvF,KAAD,IAAW;AAChCnB,IAAAA,cAAc,CAACmB,KAAD,CAAd;AACH,GAFD;;AAGA,QAAMwF,WAAW,GAAG,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAM9B,UAAU,GAAG,CAAC,GAAG9G,OAAJ,CAAnB;;AAEA,QAAI9B,cAAc,IAAI,IAAtB,EAA4B;AACxB,YAAMgF,QAAQ,GAAG,EAAC,GAAGtC;AAAJ,OAAjB;AACAsC,MAAAA,QAAQ,CAAC/G,IAAT,GAAgB+B,cAAc,CAAC/B,IAA/B;AACA+G,MAAAA,QAAQ,CAAC3G,WAAT,GAAuB2B,cAAc,CAAC3B,WAAtC;AACA2G,MAAAA,QAAQ,CAACjH,UAAT,GAAsBiC,cAAc,CAACjC,UAArC,CAJwB,CAKxB;;AAEA,YAAMmH,KAAK,GAAGlF,cAAc,CAACjB,cAA7B;;AACA,UAAIU,aAAa,IAAI,IAArB,EAA2B;AACvB,cAAM4F,KAAK,GAAG5F,aAAa,CAAC6F,IAAd,CAAoBC,OAAD,IAAaA,OAAO,CAACtE,EAAR,KAAeiE,KAA/C,CAAd;AACAF,QAAAA,QAAQ,CAACxG,YAAT,GAAwBwB,cAAc,CAAC0F,aAAvC;AAEAV,QAAAA,QAAQ,CAACjG,cAAT,GAA0BmG,KAA1B;AACH,OAbuB,CAexB;AACA;;;AAEA,UAAIlF,cAAc,CAAC2K,SAAf,CAAyBC,cAA7B,EAA6C;AACzCpK,QAAAA,KAAK,CAACI,cAAN,GAAuB,IAAvB,CADyC,CAEzC;;AACAH,QAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWG,UAAAA,MAAM,EAAE;AAAnB,SAAD,CAAR;AACAqE,QAAAA,QAAQ,CAAClG,sBAAT,GAAkCkB,cAAc,CAAC2K,SAAf,CAAyBC,cAA3D;AACA5F,QAAAA,QAAQ,CAACnG,mBAAT,GAA+BmB,cAAc,CAAC2K,SAAf,CAAyBE,mBAAxD;AACH;;AACD,UAAI7K,cAAc,CAAC8K,SAAnB,EAA8B;AAC1B,cAAMhD,UAAU,GAAG,EAAnB;AACA,cAAMC,SAAS,GAAG,EAAlB;AAEA,cAAMa,UAAU,GAAG,CAAC,GAAG9G,OAAJ,CAAnB;AACA9B,QAAAA,cAAc,CAAC8K,SAAf,CAAyB9C,OAAzB,CAAkCqC,GAAD,IAAS;AACtC,cAAI1K,aAAa,CAAC4H,MAAd,GAAuB,CAA3B,EAA8B;AAC1B5H,YAAAA,aAAa,CAACqI,OAAd,CAAuBzC,OAAD,IAAa;AAC/B,kBAAIA,OAAO,CAAC7G,OAAR,IAAmB2L,GAAG,CAAC3L,OAA3B,EAAoC;AAChC;AACA;AACA;AACAoJ,gBAAAA,UAAU,CAACK,IAAX,CAAiB,GAAE5C,OAAO,CAACrF,UAAW,IAAGqF,OAAO,CAACpF,SAAU,EAA3D,EAJgC,CAKhC;AACH;AACJ,aARD;AASH;;AAEDyI,UAAAA,UAAU,CAACT,IAAX,CAAgBkC,GAAG,CAAC3L,OAApB;AACAuD,UAAAA,gBAAgB,CAAC2G,UAAD,CAAhB;AACH,SAfD;AAiBA5I,QAAAA,cAAc,CAAC+K,UAAf,CAA0B/C,OAA1B,CAAmCqC,GAAD,IAAS;AACvC,cAAI3K,MAAM,CAAC6H,MAAP,GAAgB,CAApB,EAAuB;AACnB7H,YAAAA,MAAM,CAACsI,OAAP,CAAgBzC,OAAD,IAAa;AACxB,kBAAIA,OAAO,CAACxE,QAAR,IAAoBsJ,GAAG,CAACtJ,QAA5B,EAAsC;AAClCgH,gBAAAA,SAAS,CAACI,IAAV,CAAe5C,OAAO,CAAC6C,UAAvB;AACH;AACJ,aAJD;AAKH;;AACDQ,UAAAA,UAAU,CAACT,IAAX,CAAgBkC,GAAG,CAACtJ,QAApB;AACAgB,UAAAA,UAAU,CAAC6G,UAAD,CAAV;AACH,SAVD;AAYAnG,QAAAA,wBAAwB,CAACsF,SAAS,CAACM,MAAV,CAAiBP,UAAjB,CAAD,CAAxB;AACH;;AACD,YAAMvB,UAAU,GAAGlM,MAAM,CAAC2F,cAAc,CAAC1B,YAAhB,CAAN,CAAoCgD,MAApC,CAA2C,kBAA3C,CAAnB;AACAE,MAAAA,mBAAmB,CAAC+E,UAAD,CAAnB,CA9DwB,CA+DxB;AACA;;AACAlF,MAAAA,mBAAmB,CAACrB,cAAc,CAAChC,YAAhB,CAAnB;AACAwD,MAAAA,mBAAmB,CAACxB,cAAc,CAAChC,YAAf,GAA8B,GAA9B,GAAoCgC,cAAc,CAAC1B,YAApD,CAAnB;AACA2F,MAAAA,QAAQ,CAACjE,cAAc,CAACgL,UAAhB,CAAR;AAEArI,MAAAA,YAAY,CAACqC,QAAD,CAAZ;AACH;AACJ,GAlFD;;AAmFA,QAAMiG,cAAc,GAAG,MAAM;AACzB,QAAIX,QAAQ,EAAZ,EAAgB,OAAO,KAAP;AAChB,UAAMY,YAAY,GAAG,EAAC,GAAGxI;AAAJ,KAArB;AACAwI,IAAAA,YAAY,CAAC/M,gBAAb,GAAgC2D,OAAO,CAACyG,IAAR,EAAhC;AACA2C,IAAAA,YAAY,CAAC9M,wBAAb,GAAwCkE,aAAxC;AACA4I,IAAAA,YAAY,CAACxM,OAAb,GAAuBA,OAAvB;AACAwM,IAAAA,YAAY,CAACvM,SAAb,GAAyBuB,UAAzB;AAEA,UAAMkG,SAAS,GAAG/L,MAAM,CAAC+G,YAAD,CAAN,CAAqBE,MAArB,CAA4B,YAA5B,CAAlB;AACA,UAAMkJ,OAAO,GAAGnQ,MAAM,CAACoH,eAAD,CAAN,CAAwBH,MAAxB,CAA+B,YAA/B,CAAhB;AAEA4J,IAAAA,YAAY,CAAClN,YAAb,GAA4BoD,YAA5B;AACA8J,IAAAA,YAAY,CAACtM,gBAAb,GAAgC4L,OAAhC;AAEAU,IAAAA,YAAY,CAAClM,WAAb,GAA2BwB,KAAK,CAACI,cAAjC;AAEA,QAAIuK,UAAU,GAAG5J,YAAY,CAACkD,KAAb,CAAmB,GAAnB,CAAjB,CAhByB,CAiBzB;;AAEAyG,IAAAA,YAAY,CAAC5M,YAAb,GAA4B6M,UAAU,CAAC,CAAD,CAAtC;AAEAD,IAAAA,YAAY,CAAC3M,UAAb,GACIqB,eAAe,KAAK,IAApB,GAA2BoC,aAAa,CAACuG,IAAd,KAAuB,GAAvB,GAA6B3I,eAAe,CAAClB,OAAxE,GAAkFsD,aAAa,CAACuG,IAAd,EADtF;;AAEA,QAAI/H,KAAK,CAACI,cAAV,EAA0B;AACtB4E,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BW,SAA7B;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B+E,OAA3B;AACAU,MAAAA,YAAY,CAACrM,mBAAb,GAAmCuM,cAAc,CAAChK,YAAD,EAAeoJ,OAAf,EAAwBU,YAAY,CAACpM,sBAArC,CAAjD;AACH,KAJD,MAIO;AACH,aAAOoM,YAAY,CAACrM,mBAApB;AACA,aAAOqM,YAAY,CAACtM,gBAApB;AACA,aAAOsM,YAAY,CAACpM,sBAApB;AACH;;AACD,QAAIkB,cAAc,CAAC4K,cAAf,IAAiC,IAArC,EAA2C;AACvCM,MAAAA,YAAY,CAAChM,YAAb,GAA4B,KAA5B;AACH,KAFD,MAEO;AACHgM,MAAAA,YAAY,CAAChM,YAAb,GAA4B,IAA5B;AACH;;AACD,UAAMmM,cAAc,GAAGrH,KAAvB;AACA,UAAMsH,gBAAgB,GAAGpH,WAAzB;AACA,UAAMqH,OAAO,GAAG3L,eAAe,GAAGA,eAAe,CAAC0I,SAAnB,GAA+B,EAA9D,CAvCyB,CAyCzB;;AACA9C,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B4F,cAA9B;AAEA7F,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC6F,gBAAlC;AACA9F,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8ByF,YAA9B;AACAtR,IAAAA,WAAW,CAACsR,YAAD,EAAerK,OAAf,EAAwBwK,cAAxB,EAAwCC,gBAAxC,CAAX,CA9CyB,CAgDzB;AACH,GAjDD;;AAmDA,QAAMF,cAAc,GAAG,CAACI,EAAD,EAAKC,EAAL,EAASb,cAAT,KAA4B;AAC/C,UAAMc,WAAW,GAAG,CAACF,EAAD,EAAKC,EAAL,KAAY;AAC5B,UAAIE,eAAe,GAAGF,EAAE,GAAGD,EAA3B;AACA,UAAII,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACL,EAAE,GAAGD,EAAN,IAAY,IAAvB,CAAd;AACA,aAAOI,OAAP;AACH,KAJD;;AAMA,UAAMG,WAAW,GAAG,CAACP,EAAD,EAAKC,EAAL,KAAY;AAC5B,UAAIO,OAAO,GAAGN,WAAW,CAACF,EAAD,EAAKC,EAAL,CAAzB;AACA,UAAIM,WAAW,GAAGF,IAAI,CAACC,KAAL,CAAWE,OAAO,GAAG,EAArB,CAAlB;AACA,aAAOD,WAAP;AACH,KAJD;;AAMA,UAAME,SAAS,GAAG,CAACT,EAAD,EAAKC,EAAL,KAAY;AAC1B,UAAIS,OAAO,GAAGH,WAAW,CAACP,EAAD,EAAKC,EAAL,CAAzB;AACA,UAAIQ,SAAS,GAAGJ,IAAI,CAACC,KAAL,CAAWI,OAAO,GAAG,EAArB,CAAhB;AACA,aAAOD,SAAP;AACH,KAJD;;AAMA,UAAME,QAAQ,GAAG,CAACX,EAAD,EAAKC,EAAL,KAAY;AACzB,UAAIW,KAAK,GAAGH,SAAS,CAACT,EAAD,EAAKC,EAAL,CAArB;AACA,UAAIU,QAAQ,GAAGN,IAAI,CAACC,KAAL,CAAWM,KAAK,GAAG,EAAnB,CAAf;AACA,aAAOD,QAAP;AACH,KAJD;;AAKA,UAAME,SAAS,GAAG,CAACb,EAAD,EAAKC,EAAL,KAAY;AAC1B,UAAIa,IAAI,GAAGH,QAAQ,CAACX,EAAD,EAAKC,EAAL,CAAnB;AACA,UAAIY,SAAS,GAAGR,IAAI,CAACC,KAAL,CAAWQ,IAAI,GAAG,CAAlB,CAAhB;AACA,aAAOD,SAAP;AACH,KAJD;;AAKA,UAAME,SAAS,GAAG,CAACf,EAAD,EAAKC,EAAL,KAAY;AAC1B,UAAIe,KAAK,GAAG,IAAIrL,IAAJ,CAASqK,EAAT,CAAZ;AACA,UAAIiB,KAAK,GAAG,IAAItL,IAAJ,CAASsK,EAAT,CAAZ;AACA,UAAIc,SAAS,GAAGE,KAAK,CAACC,WAAN,KAAsBF,KAAK,CAACE,WAAN,EAAtC;AACA,aAAOH,SAAP;AACH,KALD;;AAMA,UAAMI,UAAU,GAAG,CAACnB,EAAD,EAAKC,EAAL,KAAY;AAC3B,UAAIe,KAAK,GAAG,IAAIrL,IAAJ,CAASqK,EAAT,CAAZ;AACA,UAAIiB,KAAK,GAAG,IAAItL,IAAJ,CAASsK,EAAT,CAAZ;AACA,UAAImB,KAAK,GAAGL,SAAS,CAACf,EAAD,EAAKC,EAAL,CAArB;AACA,UAAIoB,MAAM,GAAGD,KAAK,GAAG,EAAR,IAAcH,KAAK,CAACK,QAAN,KAAmBN,KAAK,CAACM,QAAN,EAAjC,CAAb;AACA,aAAOD,MAAP;AACH,KAND;;AAQA,QAAIE,OAAO,GAAG,EAAd;;AACA,QAAInC,cAAc,IAAI,OAAtB,EAA+B;AAC3BmC,MAAAA,OAAO,GAAGZ,QAAQ,CAAC,IAAIhL,IAAJ,CAASqK,EAAT,EAAaxF,OAAb,EAAD,EAAyB,IAAI7E,IAAJ,CAASsK,EAAT,EAAazF,OAAb,EAAzB,CAAlB;AACH,KAFD,MAEO,IAAI4E,cAAc,IAAI,QAAtB,EAAgC;AACnCmC,MAAAA,OAAO,GAAGV,SAAS,CAAC,IAAIlL,IAAJ,CAASqK,EAAT,EAAaxF,OAAb,EAAD,EAAyB,IAAI7E,IAAJ,CAASsK,EAAT,EAAazF,OAAb,EAAzB,CAAnB;AACH,KAFM,MAEA,IAAI4E,cAAc,IAAI,SAAtB,EAAiC;AACpCmC,MAAAA,OAAO,GAAGJ,UAAU,CAAC,IAAIxL,IAAJ,CAASqK,EAAT,EAAaxF,OAAb,EAAD,EAAyB,IAAI7E,IAAJ,CAASsK,EAAT,EAAazF,OAAb,EAAzB,CAApB;AACH,KAFM,MAEA,IAAI4E,cAAc,IAAI,QAAtB,EAAgC;AACnCmC,MAAAA,OAAO,GAAGR,SAAS,CAAC,IAAIpL,IAAJ,CAASqK,EAAT,EAAaxF,OAAb,EAAD,EAAyB,IAAI7E,IAAJ,CAASsK,EAAT,EAAazF,OAAb,EAAzB,CAAnB;AACH;;AACD,WAAO+G,OAAP;AACH,GAtDD;;AAwDA5T,EAAAA,OAAO,CAAC,MAAM;AACV,UAAMyP,UAAU,GAAG,CAAC,GAAG9G,OAAJ,CAAnB;;AACA,QAAI9B,cAAc,IAAI,IAAtB,EAA4B;AACxB,UAAIA,cAAc,CAAC8K,SAAnB,EAA8B;AAC1B,cAAMhD,UAAU,GAAG,EAAnB;AACA,cAAMC,SAAS,GAAG,EAAlB,CAF0B,CAI1B;;AACA,YAAIiF,aAAa,GAAG,CAAC,GAAGhL,aAAJ,CAApB;AAEAhC,QAAAA,cAAc,CAAC8K,SAAf,CAAyB9C,OAAzB,CAAkCqC,GAAD,IAAS;AACtC,cAAI1K,aAAa,CAAC4H,MAAd,GAAuB,CAA3B,EAA8B;AAC1B5H,YAAAA,aAAa,CAACqI,OAAd,CAAuBzC,OAAD,IAAa;AAC/B,kBAAIA,OAAO,CAAC7G,OAAR,IAAmB2L,GAAG,CAAC3L,OAA3B,EAAoC;AAChC;AACA;AACA;AACAoJ,gBAAAA,UAAU,CAACK,IAAX,CAAiB,GAAE5C,OAAO,CAACrF,UAAW,IAAGqF,OAAO,CAACpF,SAAU,EAA3D,EAJgC,CAKhC;AACH;AACJ,aARD;AASH;;AACD,cAAI6M,aAAa,CAAC9E,OAAd,CAAsBmC,GAAG,CAAC3L,OAAJ,CAAYwK,QAAZ,EAAtB,KAAiD,CAAC,CAAtD,EAAyD;AACrD8D,YAAAA,aAAa,CAAC7E,IAAd,CAAmBkC,GAAG,CAAC3L,OAAJ,CAAYwK,QAAZ,EAAnB;AACH,WAdqC,CAetC;;AACH,SAhBD;AAiBAjH,QAAAA,gBAAgB,CAAC+K,aAAD,CAAhB;AAEA,YAAIC,eAAe,GAAG,CAAC,GAAGnL,OAAJ,CAAtB;AACA9B,QAAAA,cAAc,CAAC+K,UAAf,CAA0B/C,OAA1B,CAAmCqC,GAAD,IAAS;AACvC,cAAI3K,MAAM,CAAC6H,MAAP,GAAgB,CAApB,EAAuB;AACnB7H,YAAAA,MAAM,CAACsI,OAAP,CAAgBzC,OAAD,IAAa;AACxB,kBAAIA,OAAO,CAACxE,QAAR,IAAoBsJ,GAAG,CAACtJ,QAA5B,EAAsC;AAClCgH,gBAAAA,SAAS,CAACI,IAAV,CAAe5C,OAAO,CAAC6C,UAAvB;AACH;AACJ,aAJD;AAKH;;AACD,cAAI6E,eAAe,CAAC/E,OAAhB,CAAwBmC,GAAG,CAACtJ,QAA5B,KAAyC,CAAC,CAA9C,EAAiD;AAC7CkM,YAAAA,eAAe,CAAC9E,IAAhB,CAAqBkC,GAAG,CAACtJ,QAAzB;AACH;AACJ,SAXD;AAaAgB,QAAAA,UAAU,CAACkL,eAAD,CAAV;;AACA,YAAInF,UAAU,IAAI,EAAlB,EAAsB;AAClBA,UAAAA,UAAU,CAACK,IAAX,CAAgB,KAAhB;AACH;;AAED1F,QAAAA,wBAAwB,CAACsF,SAAS,CAACM,MAAV,CAAiBP,UAAjB,CAAD,CAAxB;AACH;AACJ;AACJ,GAnDM,EAmDJ,CAAC9H,cAAD,EAAiBL,aAAjB,EAAgCD,MAAhC,CAnDI,CAAP;AAqDAvG,EAAAA,OAAO,CAAC,MAAM;AACV,UAAMyP,UAAU,GAAG,CAAC,GAAG9G,OAAJ,CAAnB;;AACA,QAAI9B,cAAc,IAAI,IAAtB,EAA4B;AACxB,YAAMgF,QAAQ,GAAG,EAAC,GAAGtC;AAAJ,OAAjB;AACAsC,MAAAA,QAAQ,CAAC/G,IAAT,GAAgB+B,cAAc,CAAC/B,IAA/B;AACA+G,MAAAA,QAAQ,CAAC3G,WAAT,GAAuB2G,QAAQ,CAAC3G,WAAT,GAAuB2G,QAAQ,CAAC3G,WAAhC,GAA8C2B,cAAc,CAAC3B,WAApF;;AACA,UAAI2B,cAAc,CAACkN,eAAf,KAAmC,IAAvC,EAA6C;AACzClI,QAAAA,QAAQ,CAACjH,UAAT,GAAsBiC,cAAc,CAACkN,eAArC;AACH,OAFD,MAEO;AACHlI,QAAAA,QAAQ,CAACjH,UAAT,GAAsBiC,cAAc,CAACjC,UAArC;AACH,OARuB,CASxB;;;AAEA,YAAMmH,KAAK,GAAGlF,cAAc,CAACjB,cAA7B;AACAiG,MAAAA,QAAQ,CAACjG,cAAT,GAA0BiB,cAAc,CAACjB,cAAzC,CAZwB,CAcxB;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAEA,UAAIiB,cAAc,CAAC2K,SAAf,CAAyBC,cAA7B,EAA6C;AACzCpK,QAAAA,KAAK,CAACI,cAAN,GAAuB,IAAvB,CADyC,CAEzC;;AACAH,QAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWG,UAAAA,MAAM,EAAE;AAAnB,SAAD,CAAR;AACAqE,QAAAA,QAAQ,CAAClG,sBAAT,GAAkCkB,cAAc,CAAC2K,SAAf,CAAyBC,cAA3D;AACA5F,QAAAA,QAAQ,CAACnG,mBAAT,GAA+BmB,cAAc,CAAC2K,SAAf,CAAyBE,mBAAxD;AACH;;AACD,UAAI7K,cAAc,CAACmN,OAAf,KAA2B,EAA/B,EAAmC;AAC/B1M,QAAAA,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWvB,UAAAA,SAAS,EAAE;AAAtB,SAAD,CAAR;AACH,OAlCuB,CAmCxB;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;;;AACA,YAAMsH,UAAU,GAAGlM,MAAM,CAAC2F,cAAc,CAAC1B,YAAhB,CAAN,CAAoCgD,MAApC,CAA2C,kBAA3C,CAAnB;AACAE,MAAAA,mBAAmB,CAAC+E,UAAD,CAAnB,CAtFwB,CAuFxB;AACA;;AAEAf,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCzF,cAAhC;AACAqB,MAAAA,mBAAmB,CAACrB,cAAc,CAAChC,YAAhB,CAAnB;;AAEA,UAAIgC,cAAc,CAAC2K,SAAf,IAA4B3K,cAAc,CAAC2K,SAAf,CAAyBC,cAAzD,EAAyE;AACrE,YAAI0B,IAAI,GAAG,CAAX;;AACA,YAAItM,cAAc,CAAC2K,SAAf,CAAyBC,cAAzB,IAA2C,OAA/C,EAAwD;AACpD0B,UAAAA,IAAI,GAAGc,QAAQ,CAACpN,cAAc,CAAC2K,SAAf,CAAyBE,mBAA1B,CAAf;AACH,SAFD,MAEO,IAAI7K,cAAc,CAAC2K,SAAf,CAAyBC,cAAzB,IAA2C,QAA/C,EAAyD;AAC5D0B,UAAAA,IAAI,GAAGc,QAAQ,CAACpN,cAAc,CAAC2K,SAAf,CAAyBE,mBAA1B,CAAR,GAAyD,CAAhE;AACH,SAFM,MAEA,IAAI7K,cAAc,CAAC2K,SAAf,CAAyBC,cAAzB,IAA2C,SAA/C,EAA0D;AAC7D0B,UAAAA,IAAI,GAAGc,QAAQ,CAACpN,cAAc,CAAC2K,SAAf,CAAyBE,mBAA1B,CAAR,GAAyD,EAAhE;AACH,SAFM,MAEA,IAAI7K,cAAc,CAAC2K,SAAf,CAAyBC,cAAzB,IAA2C,QAA/C,EAAyD;AAC5D0B,UAAAA,IAAI,GAAGc,QAAQ,CAACpN,cAAc,CAAC2K,SAAf,CAAyBE,mBAA1B,CAAR,GAAyD,GAAhE;AACH;;AACDrF,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB6G,IAAtB;AACA,cAAMpL,IAAI,GAAG,IAAIC,IAAJ,CAASnB,cAAc,CAACqN,UAAxB,CAAb;AACA,cAAMC,UAAU,GAAGjT,MAAM,CAACkT,OAAO,CAACrM,IAAD,EAAOoL,IAAP,CAAR,CAAN,CAA4BhL,MAA5B,CAAmC,YAAnC,CAAnB;AAEAI,QAAAA,sBAAsB,CAAC4L,UAAD,CAAtB;AACH;;AAED,eAASC,OAAT,CAAiBrM,IAAjB,EAAuBoL,IAAvB,EAA6B;AACzB,cAAMkB,IAAI,GAAG,IAAIrM,IAAJ,CAASsM,MAAM,CAACvM,IAAD,CAAf,CAAb;AACAsM,QAAAA,IAAI,CAACE,OAAL,CAAaxM,IAAI,CAACyM,OAAL,KAAiBrB,IAA9B;AACA,eAAOkB,IAAP;AACH,OAnHuB,CAqHxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAhM,MAAAA,mBAAmB,CAACxB,cAAc,CAAChC,YAAf,GAA8B,GAA9B,GAAoCgC,cAAc,CAAC1B,YAApD,CAAnB;AACA2F,MAAAA,QAAQ,CAACjE,cAAc,CAACgL,UAAhB,CAAR;AAEArI,MAAAA,YAAY,CAACqC,QAAD,CAAZ;AACH;AACJ,GA9IM,EA8IJ,CAAChF,cAAD,EAAiBL,aAAjB,EAAgCD,MAAhC,CA9II,CAAP;AA+IAvG,EAAAA,OAAO,CAAC,MAAM;AACVoG,IAAAA,KAAK,IAAID,eAAe,CAACC,KAAD,EAAQ;AAAEqO,MAAAA,OAAO,EAAE;AAAX,KAAR,CAAxB;AACH,GAFM,EAEJ,CAACrO,KAAD,CAFI,CAAP,CAh7B2B,CAo7B3B;AACA;AACA;AACA;;AAEA,QAAMsO,YAAY,GAAG,MAAM;AACvB9K,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAGA5J,EAAAA,OAAO,CAAC,MAAM;AACVqM,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BvB,WAA9B;AACH,GAFM,EAEJ,CAACA,WAAD,CAFI,CAAP;;AAIA,QAAM4J,WAAW,GAAG,CAACxG,KAAD,EAAQyG,IAAR,KAAiB;AACjC,QAAIA,IAAI,IAAIA,IAAI,CAACC,UAAjB,EAA6B;AACzB,UAAIC,UAAU,GAAGjK,KAAK,CAACkG,MAAN,CAAcgE,CAAD,IAAOA,CAAC,CAACF,UAAF,IAAgBD,IAAI,CAACC,UAAzC,CAAjB;AACA7J,MAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiB,GAAG+J,UAApB,CAAD,CAAd;AACA,UAAIE,WAAW,GAAGnK,KAAK,CAClBoK,GADa,CACT,UAAS1E,IAAT,EAAe;AAChB,eAAOA,IAAI,CAACsE,UAAZ;AACH,OAHa,EAIb9F,OAJa,CAIL6F,IAAI,CAACC,UAJA,CAAlB;AAKAhK,MAAAA,KAAK,CAAC8E,MAAN,CAAaqF,WAAb,EAA0B,CAA1B;AACH,KATD,MASO,IAAIJ,IAAI,IAAIA,IAAI,CAAC3I,IAAjB,EAAuB;AAC1B,UAAI+I,WAAW,GAAGnK,KAAK,CAClBoK,GADa,CACT,UAAS1E,IAAT,EAAe;AAChB,eAAOA,IAAI,CAACtE,IAAZ;AACH,OAHa,EAIb8C,OAJa,CAIL6F,IAAI,CAAC3I,IAJA,CAAlB;AAKApB,MAAAA,KAAK,CAAC8E,MAAN,CAAaqF,WAAb,EAA0B,CAA1B;AACH;;AACD,QAAInK,KAAK,CAACuD,MAAN,IAAgB,CAApB,EAAuB;AACnBtD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACAwB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBzB,KAAxB;AACH;AACJ,GAxBD;;AA0BA,QAAMqK,QAAQ,GAAIC,SAAD,IAAe;AAC5B9I,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B6I,SAA7B;AACA,UAAMC,UAAU,GAAG,CAAC,GAAGvK,KAAJ,CAAnB;AACAsK,IAAAA,SAAS,CAACF,GAAV,CAAeI,MAAD,IAAY;AACtB,UAAIA,MAAM,CAACR,UAAP,IAAqB5E,SAAzB,EAAoC;AAChC,YAAIqF,IAAI,GAAGD,MAAM,CAACR,UAAP,CAAkBvJ,KAAlB,CAAwB,GAAxB,CAAX;AACA,YAAIiK,GAAG,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,MAA9B,EAAsC,KAAtC,CAAV;AAEA,YAAIC,GAAG,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQG,WAAR,EAAV;AAEA5K,QAAAA,KAAK,CAACmE,IAAN,CAAWqG,MAAX;AACH,OAPD,MAOO;AACH,YAAIC,IAAI,GAAGD,MAAM,CAACpJ,IAAP,CAAYX,KAAZ,CAAkB,GAAlB,CAAX;AACA,YAAIiK,GAAG,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,MAA9B,EAAsC,KAAtC,CAAV;AAEA,YAAIC,GAAG,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQG,WAAR,EAAV;AAEA5K,QAAAA,KAAK,CAACmE,IAAN,CAAWqG,MAAX;AACH;AACJ,KAhBD;AAiBAhJ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBzB,KAAzB;AACAC,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACH,GAtBD;;AAwBA,QAAM6K,kBAAkB,GAAIzK,IAAD,IAAU;AACjC;AACAzB,IAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAezE,MAAAA,IAAI,EAAEmG;AAArB,KAAD,CAAZ;AACH,GAHD;;AAIA,sBAAS,uDAEL,oBACA,uBADA;AACwB,IAAA,KAAK,EAAKnK,WADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAiBA,oBACA,qBADA;AACsB,IAAA,IAAI,EAAK6I,IAD/B;AAEA,IAAA,OAAO,EAAK8E,WAFZ;AAGA,IAAA,SAAS,EAAKlI,MAHd;AAIA,IAAA,UAAU,EAAKC,aAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKA,oBACA,OADA;AACQ,IAAA,SAAS,EAAKD,MADtB;AAEA,IAAA,UAAU,EAAKC,aAFf;AAGA,IAAA,aAAa,EAAK6I,iBAHlB;AAIA,IAAA,OAAO,EAAK1G,OAJZ;AAKA,IAAA,kBAAkB,EAAKkH,kBALvB;AAMA,IAAA,sBAAsB,EAAKO,sBAN3B;AAOA,IAAA,2BAA2B,EAAKC,2BAPhC;AAQA,IAAA,aAAa,EAAKxH,aARlB;AASA,IAAA,gBAAgB,EAAKyI,gBATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,MAjBA,oBAiCwB,oBACxB,IADwB;AACnB,IAAA,SAAS,EAAG,gBADO;AAExB,IAAA,SAAS,MAFe;AAEd,IAAA,KAAK,EACX;AAAExN,MAAAA,YAAY,EAAE;AAAhB,KAHoB;AAIxB,IAAA,UAAU,EAAG,QAJW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKxB,oBACA,IADA;AACK,IAAA,IAAI,MADT;AACU,IAAA,EAAE,EAAK,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBACA,cADA;AACe,IAAA,OAAO,EAAG,IADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBACA,UADA;AACW,IAAA,KAAK,EAAG,SADnB;AAEA,IAAA,OAAO,EACH,MAAM4D,OAAO,CAACiO,MAAR,EAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIA,oBACA,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CAFA,wBAUK,oBAAE,mBAAF;AAAsB,IAAA,SAAS,EAAG,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVL,MAFA,MALwB,WAjCxB,oBA6DO,oBACP,WADO;AACK,IAAA,SAAS,EAAG,8BADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEP,oBACA,IADA;AACK,IAAA,SAAS,EAAG,iBADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AACI,IAAA,SAAS,EAAG,gBADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEItP,UAAU,CAAC+H,MAAX,GAAoB,CAApB,IAAyBjE,MAAzB,gBAAoC,oBAChC,MADgC;AACzB,IAAA,GAAG,EACLM,MAAD,IAAYC,SAAS,CAACD,MAAD;AAFO,KAEQgD,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAG5BpH,UAAU,CAAC4O,GAAX,CAAe,CAAC1E,IAAD,EAAOqF,GAAP,KAAe;AAC1B,WAAOrF,IAAI,CAACS,iBAAL,IAA0B,CAA1B,gBAAgC,oBACnC,cADmC;AACpB,MAAA,GAAG,EAAK4E,GADY;AAEnC,MAAA,IAAI,EAAKrF,IAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGnC;AACI,MAAA,GAAG,EAAKA,IAAI,CAACsF,cADjB;AAEA,MAAA,SAAS,EAAG,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHmC,eAMnC,oBACA,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACctF,IAAI,CAAChE,aADnB,MANmC,MAAhC,GAUH,EAVJ;AAYH,GAbD,CAH4B,MAApC,gBAmBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBV,MAFA,eA6BA,oBACA,UADA;AACW,IAAA,SAAS,MADpB;AACqB,IAAA,OAAO,EAAK,CADjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBACA,IADA;AACK,IAAA,IAAI,MADT;AACU,IAAA,EAAE,EAAK,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBACA,SADA;AACU,IAAA,EAAE,EAAG,0BADf;AAEA,IAAA,MAAM,MAFN;AAEO,IAAA,KAAK,EAAG,cAFf;AAGA,IAAA,KAAK,EAAKhD,SAAS,CAAC3D,cAHpB;AAIA,IAAA,SAAS,MAJT;AAIU,IAAA,QAAQ,EAAK+F,YAJvB;AAKA,IAAA,IAAI,EAAG,cALP;AAMA,IAAA,OAAO,EAAG,UANV;AAOA,IAAA,KAAK,EAAI,CAAC,CAAClC,cAAc,CAAC7D,cAP1B;AAQA,IAAA,UAAU,EAAK6D,cAAc,CAAC7D,cAR9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUIU,aAAa,CAAC8H,MAAd,GAAuB,CAAvB,GACA9H,aAAa,CAAC2O,GAAd,CAAkB,CAACa,MAAD,EAASF,GAAT,kBAAmB,oBACjC,QADiC;AACxB,IAAA,GAAG,EAAKA,GADgB;AAEjC,IAAA,KAAK,EAAKE,MAAM,CAAChO,EAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEPgO,MAAM,CAACvJ,aAFA,MAArC,CADA,GAMI7F,OAAO,iBAAI,oBAAE,eAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBnB,MAFA,MAFA,oBAuBO,oBACP,IADO;AACF,IAAA,IAAI,MADF;AACG,IAAA,EAAE,EAAK,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEP,oBACA,UADA;AACW,IAAA,KAAK,EAAG,UADnB;AAEA,IAAA,YAAY,EAAG,UAFf;AAGA,IAAA,KAAK,EAAKuB,YAHV;AAIA,IAAA,QAAQ,EAAKuE,gBAJb;AAKA,IAAA,oBAAoB,MALpB;AAKqB,IAAA,MAAM,EAAG,YAL9B;AAMA,IAAA,SAAS,MANT;AAMU,IAAA,IAAI,EAAG,cANjB;AAOA,IAAA,KAAK,EAAI,CAAC,CAACnC,OAPX;AAQA,IAAA,UAAU,EAAKA,OARf;AASA,IAAA,WAAW,EAAK,IAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFO,MAvBP,oBAoCO,oBACP,IADO;AACF,IAAA,IAAI,MADF;AACG,IAAA,EAAE,EAAK,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEP,oBACA,UADA;AACW,IAAA,YAAY,EAAG,UAD1B;AAEA,IAAA,KAAK,EAAG,UAFR;AAGA,IAAA,KAAK,EAAKjC,YAHV;AAIA,IAAA,QAAQ,EAAK8E,gBAJb;AAKA,IAAA,SAAS,MALT;AAKU,IAAA,IAAI,EAAK,KALnB;AAMA,IAAA,KAAK,EAAI,CAAC,CAACrD,OANX;AAOA,IAAA,UAAU,EAAKA,OAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFO,MApCP,OA+CSwC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCjD,qBAAtC,CA/CT,oBA+CwE,oBACxE,IADwE;AACnE,IAAA,IAAI,MAD+D;AAC9D,IAAA,EAAE,EAAK,CADuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAExE,oBACA,YADA;AACa,IAAA,QAAQ,MADrB;AACsB,IAAA,SAAS,EAAK,CADpC;AAEA,IAAA,EAAE,EAAG,aAFL;AAGA,IAAA,qBAAqB,EAAK,KAH1B;AAIA,IAAA,OAAO,EAAKA,qBAJZ;AAKA,IAAA,QAAQ,MALR;AAKS,IAAA,KAAK,EAAKA,qBALnB;AAMA,IAAA,QAAQ,MANR;AAMS,IAAA,QAAQ,EACb,CAACkE,KAAD,EAAQmB,QAAR,KAAqB;AACjBrC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BoC,QAA1B;AACA,YAAMqH,MAAM,GAAGrH,QAAQ,CAACqB,QAAT,EAAf;AACA,YAAMiG,QAAQ,GAAGD,MAAM,CAACzK,KAAP,CAAa,GAAb,CAAjB;AAEA,YAAM2K,WAAW,GAAG,EAApB;AACA,YAAMC,YAAY,GAAG,EAArB;;AACA,WAAK,IAAIhG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8F,QAAQ,CAAC5H,MAA7B,EAAqC8B,CAAC,EAAtC,EAA0C;AACtC,cAAMiG,UAAU,GAAG3P,aAAa,CAAC2F,IAAd,CACd+E,GAAD,IAASA,GAAG,CAACnK,UAAJ,GAAiB,GAAjB,GAAuBmK,GAAG,CAAClK,SAA3B,IAAwCgP,QAAQ,CAAC9F,CAAD,CAD1C,CAAnB;AAGA7D,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB0J,QAAxB;AACA3J,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B6J,UAA1B;;AAEA,YAAIA,UAAJ,EAAgB;AACZ,cAAIA,UAAU,IAAIlG,SAAlB,EAA6B,CAAE,CAA/B,MAAqC;AACjCgG,YAAAA,WAAW,CAACjH,IAAZ,CAAiBmH,UAAU,CAAC5Q,OAA5B;AACAyD,YAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACH,WAJW,CAMZ;;AACH,SAPD,MAOO;AACH;AACA,gBAAMoN,eAAe,GAAG7P,MAAM,CAAC4F,IAAP,CAAa+E,GAAD,IAASA,GAAG,CAACjC,UAAJ,IAAkB+G,QAAQ,CAAC9F,CAAD,CAA/C,CAAxB;AACA7D,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B8J,eAA/B;AACA/J,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB/F,MAAtB;AACA8F,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB0J,QAAxB;;AACA,cAAII,eAAe,IAAInG,SAAvB,EAAkC,CAAE,CAApC,MAA0C;AACtCiG,YAAAA,YAAY,CAAClH,IAAb,CAAkBoH,eAAe,CAACxO,QAAlC;AACAsB,YAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACH;AACJ;;AACDmD,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B2J,WAA3B;AACA5J,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B4J,YAA5B;AACH;;AACD5M,MAAAA,wBAAwB,CAACoF,QAAD,CAAxB,CAnCiB,CAqCjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA5F,MAAAA,gBAAgB,CAACmN,WAAD,CAAhB;AACArN,MAAAA,UAAU,CAACsN,YAAD,CAAV;AACA7J,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBoC,QAAxB;AACArC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BzD,aAA7B;AACH,KA5DL;AA8DA,IAAA,WAAW,EACNwN,MAAD,iBAAc,oBACV,SADU,oBACIA,MADJ;AAEV,MAAA,OAAO,EAAG,UAFA;AAGV,MAAA,KAAK,EAAG,IAHE;AAIV,MAAA,QAAQ,EAAK3B,YAJH;AAKV,MAAA,OAAO,EAAKA,YALF;AAMV,MAAA,KAAK,EAAI,CAAC,CAAC3K,KAND;AAOV,MAAA,UAAU,EAAKA,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA/DlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFwE,MA/CxE,OA6HI1C,KAAK,CAACI,cAAN,iBAA0B,oBACtB,IADsB;AACjB,IAAA,IAAI,MADa;AACZ,IAAA,EAAE,EAAK,CADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEtB,oBACA,SADA;AACU,IAAA,EAAE,EAAG,0BADf;AAEA,IAAA,MAAM,MAFN;AAEO,IAAA,KAAK,EAAG,QAFf;AAGA,IAAA,KAAK,EAAK8B,SAAS,CAAC5D,sBAHpB;AAIA,IAAA,SAAS,MAJT;AAIU,IAAA,QAAQ,EAAKgG,YAJvB;AAKA,IAAA,OAAO,EAAG,UALV;AAMA,IAAA,IAAI,EAAG,wBANP;AAOA,IAAA,KAAK,EAAI,CAAC,CAAClC,cAAc,CAAC9D,sBAP1B;AAQA,IAAA,UAAU,EAAK8D,cAAc,CAAC9D,sBAR9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUIjB,SAAS,CAACuQ,GAAV,CAAea,MAAD,iBAAc,oBACxB,QADwB;AACf,IAAA,GAAG,EAAKA,MADO;AAExB,IAAA,KAAK,EAAKA,MAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEDA,MAFC,MAA5B,CAVJ,MAFsB,MA7H9B,eAoJA,oBACA,IADA;AACK,IAAA,IAAI,MADT;AACU,IAAA,EAAE,EAAK,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEIzO,KAAK,CAACI,cAAN;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACA,UADA;AACW,IAAA,KAAK,EAAG,cADnB;AAEA,IAAA,YAAY,EAAG,UAFf;AAGA,IAAA,KAAK,EAAKa,eAHV;AAIA,IAAA,QAAQ,EAAKyE,mBAJb;AAKA,IAAA,oBAAoB,MALpB;AAKqB,IAAA,MAAM,EAAG,YAL9B;AAMA,IAAA,SAAS,MANT;AAMU,IAAA,IAAI,EAAG,kBANjB;AAOA,IAAA,KAAK,EAAI,CAAC,CAACxC,UAPX;AAQA,IAAA,UAAU,EAAKA,UARf;AASA,IAAA,WAAW,EAAK,IAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfR,oBA2BE,oBACF,gBADE;AACe,IAAA,KAAK,EAClB;AAAEhI,MAAAA,QAAQ,EAAE,QAAZ;AAAsB+T,MAAAA,UAAU,EAAE,CAAlC;AAAqCrT,MAAAA,SAAS,EAAE;AAAhD,KAFF;AAGF,IAAA,OAAO,eAAK,oBACR,MADQ;AAER,MAAA,OAAO,EAAKoE,KAAK,CAACI,cAFV;AAGR,MAAA,QAAQ,EAAK+F,kBAHL;AAIR,MAAA,IAAI,EAAG,gBAJC;AAKR,MAAA,KAAK,EAAG,SALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHV;AAWF,IAAA,KAAK,EAAG,WAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,CApJA,oBA6LO,oBACP,IADO;AACF,IAAA,IAAI,MADF;AACG,IAAA,EAAE,EAAK,EADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEP,oBACA,QADA;AACS,IAAA,MAAM,EAAKhM,cADpB;AAEA,IAAA,MAAM,EAAKD,MAFX;AAGA,IAAA,IAAI,EAAKgI,SAAS,CAACzE,IAHnB;AAIA,IAAA,IAAI,EAAG,MAJP;AAKA,IAAA,OAAO,EACFyR,MAAD,IAAY;AACR;AACAlK,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCiK,MAAvC;AACH,KATL;AAWA,IAAA,QAAQ,EACJ,CAAChJ,KAAD,EAAQgJ,MAAR,KAAmB;AACf,YAAMtL,IAAI,GAAGsL,MAAM,CAACC,OAAP,EAAb;AACAnK,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BrB,IAA5B;AACAyK,MAAAA,kBAAkB,CAACzK,IAAD,CAAlB;AACH,KAhBL,CAkBA;AACA;AAEA;AACA;AACA;AACA;AAxBA;AA0BA,IAAA,OAAO,EACH,CAACsC,KAAD,EAAQgJ,MAAR,KAAmB;AACflK,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBiK,MAAtB;AACH,KA7BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFO,WA7LP,eA+OA,oBACA,IADA;AACK,IAAA,IAAI,MADT;AACU,IAAA,EAAE,EAAK,EADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBACA,GADA;AACI,IAAA,OAAO,EAAG,MADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAUA,oBACA,gBADA;AACiB,IAAA,SAAS,EAAG,aAD7B;AAEA,IAAA,OAAO,eAAK,oBACR,UADQ;AAER,MAAA,QAAQ,MAFA;AAGR,MAAA,MAAM,EAAKrB,QAHH;AAIR,MAAA,OAAO,EACFtJ,CAAD,IAAQA,CAAC,CAACI,MAAF,CAASD,KAAT,GAAiB,IALrB;AAMR,MAAA,SAAS,EAAG,aANJ;AAOR,MAAA,KAAK,EACD;AAAE/H,QAAAA,OAAO,EAAE;AAAX,OARI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFZ;AAaA,IAAA,KAAK,eAAK,oBACN,UADM;AACK,MAAA,OAAO,EAAG,WADf;AAEN,MAAA,SAAS,EAAG,MAFN;AAGN,MAAA,KAAK,EACD;AAAEsS,QAAAA,UAAU,EAAE;AAAd,OAJE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKN,oBACA,UADA;AACW,MAAA,KAAK,EACZ;AAAExS,QAAAA,YAAY,EAAE,CAAC,CAAjB;AAAoBZ,QAAAA,WAAW,EAAE;AAAjC,OAFJ;AAGA,MAAA,KAAK,EAAG,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALM,kBAbV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVA,MAFA,oBAqCM,oBACN,GADM;AACF,IAAA,UAAU,EAAG,QADX;AAEN,IAAA,OAAO,EAAG,MAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAGF2H,KAAK,IACLA,KAAK,CAACoK,GAAN,CAAU,CAACL,IAAD,EAAOzG,KAAP,KAAiB;AACvB;AACA,QAAIyG,IAAI,CAACC,UAAL,IAAmB5E,SAAvB,EAAkC;AAC9B,YAAMwG,aAAa,GAAG7B,IAAI,CAACC,UAAL,CAAgBvJ,KAAhB,CAAsB,GAAtB,CAAtB;AACA,YAAMoL,SAAS,GAAGD,aAAa,CAAC,CAAD,CAA/B;;AAEA,UAAIC,SAAS,IAAI,MAAb,IAAuBA,SAAS,IAAI,KAApC,IAA6CA,SAAS,IAAI,KAA1D,IAAmEA,SAAS,IAAI,KAApF,EAA2F;AACvF,4BAAS,oBACL,UADK;AACM,UAAA,OAAO,EAAG,WADhB;AAEL,UAAA,SAAS,EAAG,GAFP;AAGL,UAAA,GAAG,EAAKvI,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIL;AACI,UAAA,GAAG,EAAKyG,IAAI,CAAC+B,SADjB;AAEA,UAAA,KAAK,EAAG,IAFR;AAGA,UAAA,MAAM,EAAG,IAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJK,OAOe,GAPf,oBAOqB,oBAC1B,GAD0B;AACtB,UAAA,SAAS,EAAKzQ,OAAO,CAAC/C,QADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACeyR,IAAI,CAACC,UADpB,MAPrB,EAQ8D,GAR9D,oBAQmE,oBACxE,UADwE;AAC7D,UAAA,OAAO,EACd,MAAMF,WAAW,CAACxG,KAAD,EAAQyG,IAAR,CAFmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UARnE,MAAT;AAcH,OAfD,MAeO,IAAI8B,SAAS,IAAI,KAAjB,EAAwB;AAC3B,4BAAS,oBACL,UADK;AACM,UAAA,OAAO,EAAG,WADhB;AAEL,UAAA,SAAS,EAAG,GAFP;AAGL,UAAA,GAAG,EAAKvI,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIL,oBACA,OADA;AACQ,UAAA,SAAS,EAAKjI,OAAO,CAAC1D,UAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJK,OAMDoS,IAAI,CAACC,UANJ,EAMgB,GANhB,oBAMqB,oBAC1B,UAD0B;AACf,UAAA,OAAO,EACd,MAAMF,WAAW,CAACxG,KAAD,EAAQyG,IAAR,CAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANrB,MAAT;AAYH,OAbM,MAaA,IAAI8B,SAAS,IAAI,KAAjB,EAAwB;AAC3B,4BAAS,oBACL,UADK;AACM,UAAA,OAAO,EAAG,WADhB;AAEL,UAAA,SAAS,EAAG,GAFP;AAGL,UAAA,GAAG,EAAKvI,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIL,oBACA,QADA;AACS,UAAA,SAAS,EAAKjI,OAAO,CAAC1D,UAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJK,OAMDoS,IAAI,CAACC,UANJ,EAMgB,GANhB,oBAMqB,oBAC1B,UAD0B;AACf,UAAA,OAAO,EACd,MAAMF,WAAW,CAACxG,KAAD,EAAQyG,IAAR,CAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANrB,MAAT;AAYH,OAbM,MAaA,IAAI8B,SAAS,IAAI,KAAb,IAAsBA,SAAS,IAAI,MAAnC,IAA6CA,SAAS,IAAI,KAA9D,EAAqE;AACxE,4BAAS,oBACL,UADK;AACM,UAAA,OAAO,EAAG,WADhB;AAEL,UAAA,SAAS,EAAG,GAFP;AAGL,UAAA,GAAG,EAAKvI,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIL,oBACA,WADA;AACY,UAAA,SAAS,EAAKjI,OAAO,CAAC1D,UADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJK,OAMDoS,IAAI,CAACC,UANJ,EAMgB,GANhB,oBAMqB,oBAC1B,UAD0B;AACf,UAAA,OAAO,EACd,MAAMF,WAAW,CAACxG,KAAD,EAAQyG,IAAR,CAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANrB,MAAT;AAYH,OAbM,MAaA;AACH,4BAAS,oBACL,UADK;AACM,UAAA,OAAO,EAAG,WADhB;AAEL,UAAA,SAAS,EAAG,GAFP;AAGL,UAAA,GAAG,EAAKzG,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIL,oBACA,WADA;AACY,UAAA,SAAS,EAAKjI,OAAO,CAAC1D,UADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJK,OAMDoS,IAAI,CAACC,UANJ,EAMgB,GANhB,oBAMqB,oBAC1B,UAD0B;AACf,UAAA,OAAO,EACd,MAAMF,WAAW,CAACxG,KAAD,EAAQyG,IAAR,CAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANrB,MAAT;AAYH;AACJ,KAxED,MAwEO;AACH,YAAM6B,aAAa,GAAG7B,IAAI,CAAC3I,IAAL,CAAUX,KAAV,CAAgB,GAAhB,CAAtB;AACA,YAAMoL,SAAS,GAAGD,aAAa,CAAC,CAAD,CAA/B;;AACA,UAAIC,SAAS,IAAI,MAAb,IAAuBA,SAAS,IAAI,KAApC,IAA6CA,SAAS,IAAI,KAA1D,IAAmEA,SAAS,IAAI,KAApF,EAA2F;AACvF,4BAAS,oBACL,UADK;AACM,UAAA,OAAO,EAAG,WADhB;AAEL,UAAA,SAAS,EAAG,GAFP;AAGL,UAAA,GAAG,EAAKvI,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIL;AACI,UAAA,GAAG,EAAKyG,IAAI,CAACgC,MADjB;AAEA,UAAA,KAAK,EAAG,IAFR;AAGA,UAAA,MAAM,EAAG,IAHT;AAIA,UAAA,SAAS,EAAK1Q,OAAO,CAAC1D,UAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJK,EASF,GATE,oBASG,oBACR,GADQ;AACJ,UAAA,SAAS,EAAK0D,OAAO,CAAC/C,QADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACiCyR,IAAI,CAAC3I,IADtC,MATH,EAUwD,GAVxD,oBAU6D,oBAClE,UADkE;AACvD,UAAA,OAAO,EACd,MAAM0I,WAAW,CAACxG,KAAD,EAAQyG,IAAR,CAF6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAV7D,MAAT;AAgBH,OAjBD,MAiBO,IAAI8B,SAAS,IAAI,KAAjB,EAAwB;AAC3B,4BAAS,oBACL,UADK;AACM,UAAA,OAAO,EAAG,WADhB;AAEL,UAAA,SAAS,EAAG,GAFP;AAGL,UAAA,GAAG,EAAKvI,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIL,oBACA,OADA;AACQ,UAAA,SAAS,EAAKjI,OAAO,CAAC1D,UAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJK,OAMDoS,IAAI,CAAC3I,IANJ,EAMU,GANV,oBAMe,oBACpB,UADoB;AACT,UAAA,OAAO,EACd,MAAM0I,WAAW,CAACxG,KAAD,EAAQyG,IAAR,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANf,MAAT;AAYH,OAbM,MAaA,IAAI8B,SAAS,IAAI,KAAjB,EAAwB;AAC3B,4BAAS,oBACL,UADK;AACM,UAAA,OAAO,EAAG,WADhB;AAEL,UAAA,SAAS,EAAG,GAFP;AAGL,UAAA,GAAG,EAAKvI,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIL,oBACA,QADA;AACS,UAAA,SAAS,EAAKjI,OAAO,CAAC1D,UAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJK,OAMDoS,IAAI,CAAC3I,IANJ,EAMU,GANV,oBAMe,oBACpB,UADoB;AACT,UAAA,OAAO,EACd,MAAM0I,WAAW,CAACxG,KAAD,EAAQyG,IAAR,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANf,MAAT;AAYH,OAbM,MAaA,IAAI8B,SAAS,IAAI,KAAb,IAAsBA,SAAS,IAAI,MAAnC,IAA6CA,SAAS,IAAI,KAA9D,EAAqE;AACxE,4BAAS,oBACL,UADK;AACM,UAAA,OAAO,EAAG,WADhB;AAEL,UAAA,SAAS,EAAG,GAFP;AAGL,UAAA,GAAG,EAAKvI,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIL,oBACA,WADA;AACY,UAAA,SAAS,EAAKjI,OAAO,CAAC1D,UADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJK,OAMDoS,IAAI,CAAC3I,IANJ,EAMU,GANV,oBAMe,oBACpB,UADoB;AACT,UAAA,OAAO,EACd,MAAM0I,WAAW,CAACxG,KAAD,EAAQyG,IAAR,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANf,MAAT;AAYH,OAbM,MAaA;AACH,4BAAS,oBACL,UADK;AACM,UAAA,OAAO,EAAG,WADhB;AAEL,UAAA,SAAS,EAAG,GAFP;AAGL,UAAA,GAAG,EAAKzG,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIL,oBACA,WADA;AACY,UAAA,SAAS,EAAKjI,OAAO,CAAC1D,UADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJK,OAMDoS,IAAI,CAAC3I,IANJ,EAMU,GANV,oBAMe,oBACpB,UADoB;AACT,UAAA,OAAO,EACd,MAAM0I,WAAW,CAACxG,KAAD,EAAQyG,IAAR,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANf,MAAT;AAYH;AACJ;AACJ,GApJD,CAJE,MArCN,MA/OA,oBA+aO,oBACP,IADO;AACF,IAAA,IAAI,MADF;AACG,IAAA,EAAE,EAAK,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/aP,oBAibG,oBACH,IADG;AACE,IAAA,IAAI,MADN;AACO,IAAA,EAAE,EAAK,CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEH,oBACA,GADA;AACI,IAAA,OAAO,EAAG,MADd;AAEA,IAAA,cAAc,EAAG,UAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGA,oBACA,MADA;AACO,IAAA,OAAO,EAAK9C,cADnB;AAEA,IAAA,OAAO,EAAG,WAFV;AAGA,IAAA,KAAK,EAAG,SAHR;AAIA,IAAA,IAAI,EAAG,OAJP;AAKA,IAAA,SAAS,eAAK,oBAAE,IAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALd;AAMA,IAAA,QAAQ,EAAKpL,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOEA,OAAO,iBAAI,oBAAE,eAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPb,oBAHA,MAFG,MAjbH,MA7BA,MAFO,MA7DP,MAFK,MAAT;AAsiBH,CA5hDD;;AA6hDA,MAAMmQ,eAAe,GAAIxP,KAAD,IAAW;AAC/B,SAAO;AACHX,IAAAA,OAAO,EAAEW,KAAK,CAACyP,MAAN,CAAapQ,OADnB;AAEHN,IAAAA,KAAK,EAAEiB,KAAK,CAACyP,MAAN,CAAa1Q,KAFjB;AAGHC,IAAAA,UAAU,EAAEgB,KAAK,CAACyP,MAAN,CAAazQ,UAHtB;AAIHC,IAAAA,aAAa,EAAEe,KAAK,CAACyP,MAAN,CAAaxQ,aAJzB;AAKHC,IAAAA,MAAM,EAAEc,KAAK,CAACyP,MAAN,CAAavQ,MALlB;AAMHC,IAAAA,aAAa,EAAEa,KAAK,CAACyP,MAAN,CAAatQ,aANzB;AAOHK,IAAAA,cAAc,EAAEQ,KAAK,CAACyP,MAAN,CAAajQ,cAP1B;AAQHJ,IAAAA,eAAe,EAAEY,KAAK,CAACyP,MAAN,CAAarQ,eAR3B;AASHG,IAAAA,eAAe,EAAES,KAAK,CAACyP,MAAN,CAAalQ;AAT3B,GAAP;AAWH,CAZD;;AAcA,MAAMmQ,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACH5W,IAAAA,oBAAoB,EAAG6K,IAAD,IAAU+L,QAAQ,CAAC5W,oBAAoB,CAAC6K,IAAD,CAArB,CADrC;AAEHxK,IAAAA,WAAW,EAAE,CAACwK,IAAD,EAAOvD,OAAP,EAAgBwK,cAAhB,EAAgCC,gBAAhC,KACT6E,QAAQ,CAACvW,WAAW,CAACwK,IAAD,EAAOvD,OAAP,EAAgBwK,cAAhB,EAAgCC,gBAAhC,CAAZ,CAHT;AAIH3R,IAAAA,gBAAgB,EAAGyK,IAAD,IAAU+L,QAAQ,CAACxW,gBAAgB,CAACyK,IAAD,CAAjB,CAJjC;AAKH3K,IAAAA,gBAAgB,EAAG2K,IAAD,IAAU+L,QAAQ,CAAC1W,gBAAgB,CAAC2K,IAAD,CAAjB,CALjC;AAMH5K,IAAAA,SAAS,EAAG4K,IAAD,IAAU+L,QAAQ,CAAC3W,SAAS,CAAC4K,IAAD,CAAV,CAN1B;AAOH9K,IAAAA,gBAAgB,EAAG8K,IAAD,IAAU+L,QAAQ,CAAC7W,gBAAgB,CAAC8K,IAAD,CAAjB,CAPjC;AAQH/K,IAAAA,aAAa,EAAE,CAAC+K,IAAD,EAAOmH,OAAP,EAAgB1K,OAAhB,EAAyBwK,cAAzB,KACX8E,QAAQ,CAAC9W,aAAa,CAAC+K,IAAD,EAAOmH,OAAP,EAAgB1K,OAAhB,EAAyBwK,cAAzB,CAAd,CATT;AAUH3R,IAAAA,kBAAkB,EAAG0K,IAAD,IAAU+L,QAAQ,CAACzW,kBAAkB,CAAC0K,IAAD,CAAnB;AAVnC,GAAP;AAYH,CAbD;;AAeAjF,WAAW,CAACiR,SAAZ,GAAwB;AACpB9Q,EAAAA,eAAe,EAAEpF,SAAS,CAACmW,IAAV,CAAeC,UADZ;AAEpBzQ,EAAAA,OAAO,EAAE3F,SAAS,CAACqW,IAAV,CAAeD,UAFJ;AAGpBE,EAAAA,aAAa,EAAEtW,SAAS,CAACmW,IAAV,CAAeC,UAHV;AAIpB/Q,EAAAA,KAAK,EAAErF,SAAS,CAACuW,MAAV,CAAiBH,UAJJ;AAKpB9Q,EAAAA,UAAU,EAAEtF,SAAS,CAACwW,KAAV,CAAgBJ,UALR;AAMpB7Q,EAAAA,aAAa,EAAEvF,SAAS,CAACwW,KAAV,CAAgBJ,UANX;AAOpB7W,EAAAA,gBAAgB,EAAES,SAAS,CAACmW,IAAV,CAAeC,UAPb;AAQpB9W,EAAAA,SAAS,EAAEU,SAAS,CAACmW,IAAV,CAAeC,UARN;AASpB5Q,EAAAA,MAAM,EAAExF,SAAS,CAACwW,KAAV,CAAgBJ,UATJ;AAUpB3Q,EAAAA,aAAa,EAAEzF,SAAS,CAACwW,KAAV,CAAgBJ,UAVX;AAWpBhX,EAAAA,gBAAgB,EAAEY,SAAS,CAACmW,IAAV,CAAeC,UAXb;AAYpBjX,EAAAA,aAAa,EAAEa,SAAS,CAACmW,IAAV,CAAeC,UAZV;AAapB5W,EAAAA,kBAAkB,EAAEQ,SAAS,CAACmW,IAAV,CAAeC,UAbf;AAcpB1Q,EAAAA,eAAe,EAAE1F,SAAS,CAACyW,GAAV,CAAcL,UAdX;AAepBvQ,EAAAA,eAAe,EAAE7F,SAAS,CAACyW,GAAV,CAAcL,UAfX;AAgBpBtQ,EAAAA,cAAc,EAAE9F,SAAS,CAACyW,GAAV,CAAcL,UAhBV;AAiBpB3W,EAAAA,gBAAgB,EAAEO,SAAS,CAACmW,IAAV,CAAeC,UAjBb;AAkBpB1W,EAAAA,WAAW,EAAEM,SAAS,CAACmW,IAAV,CAAeC;AAlBR,CAAxB;AAqBA,eAAelW,OAAO,CAAC4V,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C5V,YAAY,CAAC6E,WAAD,CAAzD,CAAf","sourcesContent":["import { Attachment, Replay, Send, Headset, Videocam, Description } from '@material-ui/icons';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    FormControlLabel,\n    Grid,\n    MenuItem,\n    Paper,\n    Switch,\n    TextField,\n    Typography,\n    IconButton,\n} from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\n\nimport { Link, useHistory, useParams, useLocation } from 'react-router-dom';\nimport { DatePicker, MuiPickersUtilsProvider, TimePicker } from '@material-ui/pickers';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport {\n    createRymindr,\n    getBusinessUsers,\n    getCategoriesRymindr,\n    getGroups,\n    getSubCategories,\n    inviteAndAddMobile,\n    getRymidrDetails,\n    editRymindr,\n} from '../../../store/actions/rymidr';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularSpinner from '../../../component/CircularSpinner/index';\n// import ConfirmationDialogRaw from './Modal'\nimport MomentUtils from '@date-io/moment';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\n// import Tabmenu from './Modal/Memberlist'\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { withSnackbar } from 'notistack';\nimport FileBase64 from 'react-file-base64';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport ckEditorConfig from '../../../helper/ckEditorConfig';\n\nimport ConfirmationDialogRaw from '../../Bookings/EventBooking/Modal';\nimport Tabmenu from '../../Bookings/EventBooking/Modal/Memberlist';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        position: 'relative',\n    },\n    iconAttach: {\n        color: theme.palette.primary.dark,\n        background: theme.palette.primary.light,\n        height: 32,\n        width: 32,\n        borderRadius: 60,\n        padding: 5,\n        float: 'left',\n        marginTop: -5,\n        marginRight: '10px',\n    },\n    fileName: {\n        maxWidth: 140,\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n    },\n}));\nconst TypoHeadStyled = styled(Typography)(({ theme }) => ({\n    fontSize: 24,\n    color: theme.palette.primary.main,\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n}));\nconst TypoStyled = styled(Typography)(({ theme }) => ({\n    fontSize: 16,\n    color: theme.palette.text.primary,\n    marginTop: 10,\n    marginBottom: 20,\n    cursor: 'pointer',\n    marginRight: 30,\n    display: 'flex',\n}));\n\nconst TypoHeadInnerStyled = styled(TypoHeadStyled)(({ theme }) => ({\n    color: theme.palette.text.primary,\n}));\n\nconst PaperStyled = styled(Paper)({\n    padding: '10px 15px',\n});\nconst SlideBoxStyled = styled(Box)(() => ({\n    textAlign: 'center',\n    display: 'inline-block',\n\n    padding: 20,\n    borderRadius: 10,\n    '& img': {\n        display: 'inline-block',\n        height: 75,\n        width: 75,\n    },\n}));\n\nconst SlideType = styled(Typography)(({ theme }) => ({\n    color: theme.palette.text.primary,\n    fontSize: 16,\n}));\n\nconst GridStyled = styled(Grid)(({ theme }) => ({\n    paddingLeft: '10rem',\n    paddingRight: '10rem',\n    [theme.breakpoints.down('md')]: {\n        paddingLeft: '8rem',\n        paddingRight: '8rem',\n    },\n\n    [theme.breakpoints.down('sm')]: {\n        paddingLeft: '2rem',\n    },\n}));\n\nconst Recurring = ['Daily', 'Weekly', 'Monthly', 'Yearly'];\n\n// const FormFields = {\n//   rymindr_date: '2020-05-02',\n//   note: 'test',\n//   is_shareable: true,\n//   rymindr_to_group: '125,126',\n//   rymindr_group_members_to: '2892,2954,2',\n//   category_id: '1',\n//   rymindr_time: '12:38',\n//   rymindr_to: '3032,2924,2892',\n//   rymindr_type: 'Energy (Gas & Electric)',\n//   qiscus_id: '14805940',\n//   user_id: '2891',\n//   user_name: 'demo data H',\n//   subcategory_id: '22',\n//   appointment: true,\n//   is_qrcode: true,\n//   no_of_time: '',\n// };\n\nconst FormFields = {\n    rymindr_id: '',\n    rymindr_date: '',\n    note: '',\n    is_shareable: true,\n    rymindr_to_group: '',\n    rymindr_group_members_to: '',\n    category_id: '',\n    rymindr_time: '',\n    rymindr_to: '',\n    rymindr_type: '',\n    qiscus_id: '',\n    user_id: '',\n    user_name: '',\n    rymindr_end_date: '',\n    rymindr_period_type: '',\n    rymindr_recurring_type: '',\n    subcategory_id: '',\n    appointment: true,\n    is_qrcode: '',\n    is_recurring: '',\n};\n\nconst EditRymindr = (props) => {\n    const classes = useStyles();\n\n    const {\n        enqueueSnackbar,\n        error,\n        categories,\n        subcategories,\n        getSubCategories,\n        getGroups,\n        groups,\n        businessusers,\n        getBusinessUsers,\n        createRymindr,\n        inviteAndAddMobile,\n        matched_contact,\n        loading,\n        DetailView,\n        success_message,\n        rymindrDetails,\n        getRymidrDetails,\n        editRymindr,\n    } = props;\n    const { user_id, business_code, first_name, last_name } = JSON.parse(localStorage.getItem('userData'));\n    const [state, setState] = useState({\n        checkedB: true,\n        switch: true,\n        switchrecuring: false,\n    });\n    const history = useHistory();\n    const { rymindr_id, member_id, group_id, get_name, id } = useParams();\n\n    const date = new Date();\n    const [selectedDate, sethandleDateChange] = useState(moment(new Date()).format('YYYY-MM-DD'));\n    const [selectedTime, sethandleTimeChange] = useState(moment(new Date()).format('YYYY-MM-DD HH:mm'));\n    //const [selectedEndDate, sethandleEndDateChange] = useState(moment(new Date()).format('YYYY-MM-DD'))\n    const [selectedEndDate, sethandleEndDateChange] = useState(moment(new Date(), 'YYYY-MM-DD').add(1, 'days'));\n    const [subcategory, setSubCategory] = useState(0);\n    const [checked, setChecked] = useState([]);\n    const [memberchecked, setMemberchecked] = useState([]);\n    const [checkOnSelectAllMembers, setcheckOnSelectAllMembers] = useState(false);\n    const [checkOnSelectAllGroup, setcheckOnSelectAllGroup] = useState(false);\n\n    const [group_members, setGroup_members] = useState('');\n    const [groupname_membersname, setGroupname_membersname] = useState([]);\n    const [formvalue, setFormvalue] = useState(FormFields);\n    const [formValidation, setFormValidation] = useState(FormFields);\n    const [open, setOpen] = useState(false);\n    const [timeErr, setTimeErr] = useState('');\n    const [toErr, settoErr] = useState('');\n\n    const [categories_listing, set_categories_listing] = useState([]);\n    const [loaded, setLoaded] = useState(false);\n    const [dateErr, setdateErr] = useState('');\n    const [endDateErr, setEndDateErr] = useState('');\n    const [slider, setSlider] = useState(null);\n\n    const [phoneNumber, setPhoneNumber] = useState([]);\n    const [files, setFiles] = useState([]);\n    const [deleteFiles, setDeleteFiles] = useState([]);\n    const [data, setData] = useState(window.location.href.split('/:')[1]);\n    const [default_val, set_default_val] = useState(0);\n    const [editorValue, setEditorValue] = useState(null);\n\n    const handleChange = (e) => {\n        const formdata = {...formvalue };\n        const formvalidation = {...formValidation };\n        const value = e.target.value;\n        const name = e.target.name;\n\n        if (name === 'rymindr_type') {\n            const found = subcategories.find((element) => element.id === value);\n            console.log('form before', formvalue);\n            formdata.rymindr_type = found.category_name;\n            formdata.subcategory_id = value;\n            formvalidation.subcategory_id = '';\n            setFormValidation(formvalidation);\n        } else if (name === 'note') {\n            formvalidation.note = '';\n            setFormValidation(formvalidation);\n            formdata[name] = value;\n        } else if (name === 'rymindr_recurring_type') {\n            formvalidation.rymindr_recurring_type = '';\n            setFormValidation(formvalidation);\n            formdata[name] = value;\n        } else {\n            formdata[name] = value;\n        }\n        setFormvalue(formdata);\n    };\n\n    const handleDateChange = (e) => {\n        const formvalidation = {...formValidation };\n\n        const date = new Date(e);\n        const selecteddate = moment(date).format('YYYY-MM-DD');\n        const currentDate = moment(new Date()).format('YYYY-MM-DD');\n        const selectedEndDate1 = moment(selectedEndDate).format('YYYY-MM-DD');\n        const currentDateTime = moment(new Date().getTime()).format('YYYY-MM-DD HH:mm');\n\n        const selectedDateTime = selecteddate + ' ' + moment(new Date(selectedTime).getTime()).format('HH:mm');\n\n        if (currentDate <= selecteddate) {\n            setdateErr('');\n            sethandleDateChange(selecteddate);\n            // console.log('selectedDate--',selectedDate)\n            setFormvalue({...formvalue, rymindr_date: selecteddate });\n            // const new_select = moment(date).format('YYYY-MM-DD HH:mm')\n            // sethandleTimeChange(new_select)\n            if (currentDate == selecteddate && selectedDateTime < currentDateTime) {\n                setTimeErr('You can not choose a time before the current time.');\n                formvalidation.rymindr_time = 'You can not choose a time before the current time.';\n            } else {\n                setTimeErr('');\n            }\n        } else {\n            setdateErr('You can not choose a date before the current date.');\n        }\n        if (state.switchrecuring) {\n            if (selectedEndDate1 < selecteddate) {\n                console.log('err--');\n                setEndDateErr('You can not choose a date before the start date.');\n                sethandleDateChange(selecteddate);\n            } else if (selectedEndDate1 == selecteddate) {\n                setEndDateErr('End date must be greater than start date');\n                sethandleDateChange(selecteddate);\n            } else {\n                setEndDateErr('');\n                sethandleDateChange(selecteddate);\n            }\n        }\n    };\n\n    const handleEndDateChange = (e) => {\n        const date = new Date(e);\n        const selectedenddate = moment(date).format('YYYY-MM-DD');\n        const currentDate = moment(new Date()).format('YYYY-MM-DD');\n        const startDate = moment(selectedDate).format('YYYY-MM-DD');\n        console.log('startDate===', startDate);\n        console.log('selectedenddate===', selectedenddate);\n        if (currentDate >= selectedenddate) {\n            setEndDateErr('You can not choose a date before the current date.');\n            sethandleEndDateChange(selectedenddate);\n        } else if (startDate >= selectedenddate) {\n            setEndDateErr('End date must be greater than start date');\n            sethandleEndDateChange(selectedenddate);\n        } else {\n            setEndDateErr('');\n            sethandleEndDateChange(selectedenddate);\n            setFormvalue({...formvalue, rymindr_end_date: selectedenddate });\n        }\n    };\n\n    const handleTimeChange = (e) => {\n        const date = new Date(e);\n        const selectedtime = moment(date);\n\n        const selecteddate = moment(new Date(selectedtime).getTime()).format('YYYY-MM-DD HH:mm');\n        const currentDate = moment(new Date().getTime()).format('YYYY-MM-DD HH:mm');\n\n        const new_select = moment(selectedDate).format('YYYY-MM-DD') + ' ' + moment(new Date(e).getTime()).format('HH:mm');\n\n        if (currentDate <= new_select) {\n            const time = moment(new Date(e).getTime()).format('HH:mm');\n            setTimeErr('');\n            sethandleTimeChange(new_select);\n            setFormvalue({...formvalue, rymindr_time: new_select });\n        } else {\n            setTimeErr('You can not choose a time before the current time.');\n            sethandleTimeChange(new_select);\n            setFormvalue({...formvalue, rymindr_time: new_select });\n        }\n    };\n\n    const handleChangeCheck = (event) => {\n        setState({...state, [event.target.name]: event.target.checked });\n        setFormvalue({...formvalue, [event.target.name]: event.target.checked });\n    };\n    const handleSwitchChange = (event) => {\n        setState({...state, [event.target.name]: event.target.checked });\n    };\n    const settings = {\n        accessibility: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 7,\n        slidesToScroll: 1,\n        centerMode: true,\n        focusOnSelect: true,\n        initialSlide: subcategory,\n        afterChange: (index) => {\n            if (categories_listing.length > 0) {\n                const formdata = {...formvalue };\n                setSubCategory(index);\n                const parent_cat_id = categories_listing[index].id;\n\n                formdata.category_id = parent_cat_id;\n                formdata.subcategory_id = '';\n                formdata.rymindr_type = '';\n                setFormvalue(formdata);\n                const dataToSend = {\n                    user_id,\n                    category_id: parent_cat_id,\n                };\n\n                getSubCategories(dataToSend);\n            }\n        },\n        responsive: [{\n                breakpoint: 1400,\n                settings: {\n                    slidesToShow: 5,\n                },\n            },\n            {\n                breakpoint: 1200,\n                settings: {\n                    slidesToShow: 4,\n                },\n            },\n            {\n                breakpoint: 960,\n                settings: {\n                    slidesToShow: 3,\n                },\n            },\n        ],\n    };\n\n    const handleClose = (newValue) => {\n        setOpen(newValue);\n        const membername = [];\n        const groupname = [];\n        if (groups.length > 0) {\n            groups.forEach((element) => {\n                const checkvalue = checked.indexOf(element.group_id);\n                if (checkvalue !== -1) {\n                    groupname.push(element.group_name);\n                }\n                // else if (element.group_id == group_id) {\n                //   groupname.push(element.group_name);\n                // }\n            });\n        }\n\n        if (businessusers.length > 0) {\n            businessusers.forEach((element) => {\n                const checkvalue = memberchecked.indexOf(element.user_id);\n                if (checkvalue !== -1) {\n                    if (element.user_id == user_id) {\n                        membername.push('You');\n                    } else {\n                        membername.push(`${element.first_name} ${element.last_name}`);\n                    }\n                } else if (element.user_id == member_id) {\n                    if (element.user_id == user_id) {\n                        membername.push(`You`);\n                    } else {\n                        membername.push(`${element.first_name} ${element.last_name}`);\n                    }\n                }\n                settoErr('');\n            });\n            if (membername == '') {\n                membername.push('You');\n            }\n\n            setGroupname_membersname(groupname.concat(membername));\n            if (checked.length == 0 && memberchecked.length == 0) {\n                setGroupname_membersname([]);\n            }\n            const dataToSend = {\n                mobile_no: phoneNumber.join(),\n            };\n            if (phoneNumber.length > 0) {\n                inviteAndAddMobile(dataToSend);\n            }\n\n            if (newValue) {\n                // setValue(newValue);\n            }\n        }\n    };\n\n    const handleGroupToggle = (value) => {\n        //console.log('value====',value);\n        setcheckOnSelectAllGroup(false);\n        console.log('checked====', checked);\n        const groupMembers = value.group_member_list;\n        const currentIndex = checked.indexOf(value.group_id);\n        const newChecked = [...checked];\n        const selectedmember = [...group_members];\n\n        if (currentIndex === -1) {\n            newChecked.push(value.group_id);\n            groupMembers.forEach((element) => {\n                selectedmember.push(element.user_id);\n            });\n        } else {\n            newChecked.splice(currentIndex, 1);\n            groupMembers.forEach((element) => {\n                const remomeitem = selectedmember.indexOf(element.user_id);\n                selectedmember.splice(remomeitem, 1);\n            });\n        }\n        setChecked(newChecked);\n        setGroup_members(selectedmember);\n    };\n\n    const handleMemberToggle = (value) => {\n        const currentIndex = memberchecked.indexOf(value.user_id);\n        const newChecked = [...memberchecked];\n        if (group_id != '0') {\n            newChecked.push(group_id);\n        }\n        if (member_id != '0') {\n            newChecked.push(member_id);\n        }\n\n        if (currentIndex === -1) {\n            newChecked.push(value.user_id);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        const removeLoginUser = newChecked.indexOf(user_id.toString());\n        const removeUndefinedIndex = newChecked.indexOf(undefined);\n\n        if (removeLoginUser > -1) {\n            newChecked.splice(removeLoginUser, 1);\n        }\n        if (removeUndefinedIndex > -1) {\n            for (var i = 0; i < newChecked.length; i++) {\n                if (newChecked[i] == undefined) {\n                    newChecked.splice(newChecked.indexOf(undefined), 1);\n                    i--;\n                }\n            }\n            if (newChecked.length < 1) {\n                newChecked.push(user_id);\n                var temp = [];\n                //temp.push('You')\n            }\n        }\n\n        setMemberchecked(newChecked);\n        setGroupname_membersname(temp);\n\n        const groupname = [];\n        const membername = [];\n\n        if (value == 0) {\n            businessusers.forEach((element) => {\n                membername.push(element.first_name !== '' ? `${element.first_name} ${element.last_name}` : element.mobile_no);\n\n                newChecked.push(element.user_id);\n            });\n            setcheckOnSelectAllMembers(true);\n            setMemberchecked(newChecked);\n        } else if (value == 1) {\n            groups.forEach((element) => {\n                groupname.push(element.group_name);\n                newChecked.push(element.group_id);\n            });\n            setcheckOnSelectAllGroup(true);\n            setChecked(newChecked);\n        } else if (value == 3) {\n            setcheckOnSelectAllMembers(false);\n            setMemberchecked([]);\n        } else if (value == 4) {\n            setcheckOnSelectAllGroup(false);\n            setChecked([]);\n        } else {\n            setcheckOnSelectAllMembers(false);\n        }\n        setGroupname_membersname(groupname.concat(membername));\n        console.log('groupname_membersname', groupname_membersname);\n    };\n\n    const handleAllMembersToggle = (value) => {\n        const newChecked = [...value];\n        setMemberchecked(newChecked);\n        console.log('memberchecked-', memberchecked);\n    };\n\n    const handleAllGroupMembersToggle = (value) => {\n        const newChecked = [...value];\n        setChecked(newChecked);\n        console.log('checked', checked);\n        let members = '';\n        const groupMembers = groups.forEach((item) => {\n            members = members + ',' + item.group_members;\n        });\n        setGroup_members(members);\n        console.log('members-', members);\n    };\n\n    const location = useLocation(); // FOR SELECTED DATE FROM CALENDAR\n    useEffect(() => {\n        console.log('location.state======', location.state);\n        // SELECTED VALUE FROM CALENDAR\n        if (location.state) {\n            sethandleDateChange(location.state.selectedDate);\n        } else {\n            sethandleDateChange(new Date());\n        }\n        // SELECTED VALUE FROM CALENDAR\n\n        const dataToSend = {\n            ryminder_id: rymindr_id,\n            category_id: '',\n            user_id,\n        };\n        props.getCategoriesRymindr(dataToSend);\n\n        getGroups({ user_id });\n        const SendToBusiness = {\n            user_id,\n            business_code,\n        };\n\n        getBusinessUsers(SendToBusiness);\n        const dataTosend = {\n            user_id,\n            rymindr_id: rymindr_id,\n            is_page: 'history',\n            edit_page: 1,\n        };\n        getRymidrDetails(dataTosend);\n        /// ///////////////////////////////////////\n    }, []);\n\n    useEffect(() => {\n        const temp_subcategory = formvalue.category_id;\n        // if(slider && temp_subcategory) {\n        //   slider.slickGoTo(temp_subcategory);\n        // }\n    }, [slider]);\n\n    useEffect(() => {\n        // let get_category = []\n        if (categories.length > 0) {\n            if (rymindrDetails != null) {\n                const get_category = categories.filter((item) => item.is_message_center === 0);\n\n                let count = 0;\n                categories.forEach((ele) => {\n                    if (ele.id == rymindrDetails.category_id) {\n                        set_default_val(count);\n                        setLoaded(true);\n                    }\n                    ++count;\n                });\n\n                set_categories_listing(get_category);\n            }\n        }\n    }, [categories, rymindrDetails]);\n    const validate = () => {\n        const formvalidation = {...formValidation };\n        let isError = false;\n        const endDate = moment(selectedEndDate).format('YYYY-MM-DD');\n\n        console.log('Date--', selectedDate, '/n', selectedEndDate);\n\n        if (!formvalue.subcategory_id) {\n            isError = true;\n            formvalidation.subcategory_id = 'Please select a sub category';\n            setFormValidation(formvalidation);\n        }\n\n        if (state.switchrecuring) {\n            if (selectedDate > endDate) {\n                isError = true;\n                setEndDateErr('End date must be greater than start date');\n            }\n        }\n\n        if (!formvalue.rymindr_time) {\n            // var now = moment(new Date().getTime()).format('HH:mm');\n            // if (now.toString() > formvalue.rymindr_time.toString()) {\n            //   isError = true;\n            //   setTimeErr('You can not choose a time before the current time.');\n            // } else {\n            //   setTimeErr('');\n            // }\n        }\n        if (!formvalue.note) {\n            isError = true;\n            formvalidation.note = 'Please write rymindr';\n            setFormValidation(formvalidation);\n        } else if (formvalue.note.length > 1500) {\n            isError = true;\n            formvalidation.note = 'Rymindr should not be more than 1500 characters';\n            setFormValidation(formvalidation);\n        }\n        if (dateErr !== '') {\n            isError = true;\n            setdateErr('You can not choose a date before the current date.');\n        }\n        if (timeErr !== '') {\n            isError = true;\n            setTimeErr('You can not choose a time before the current time.');\n        }\n        if (groupname_membersname.length == 0) {\n            isError = true;\n            settoErr('This field should not be empty.');\n        }\n        // if (state.switchrecuring) {\n        //   if (formvalue.rymindr_recurring_type == 'Daily') {\n        //     if ((!formvalue.rymindr_period_type) || !(parseInt(formvalue.rymindr_period_type) > 1 && parseInt(formvalue.rymindr_period_type) <= 2000)) {\n        //       isError = true\n        //       formvalidation.rymindr_period_type = 'This should not be zero or blank or more than 2000'\n        //       setFormValidation(formvalidation)\n        //     }\n        //   } else if (formvalue.rymindr_recurring_type == 'Weekly') {\n        //     if ((!formvalue.rymindr_period_type) || !(parseInt(formvalue.rymindr_period_type) > 1 && parseInt(formvalue.rymindr_period_type) <= 500)) {\n        //       isError = true\n        //       formvalidation.rymindr_period_type = 'This should not be zero or blank or more than 500'\n        //       setFormValidation(formvalidation)\n        //     }\n        //   } else if (formvalue.rymindr_recurring_type == 'Monthly') {\n        //     if ((!formvalue.rymindr_period_type) || !(parseInt(formvalue.rymindr_period_type) > 1 && parseInt(formvalue.rymindr_period_type) <= 500)) {\n        //       isError = true\n        //       formvalidation.rymindr_period_type = 'This should not be zero or blank or more than 500'\n        //       setFormValidation(formvalidation)\n        //     }\n        //   } else if (formvalue.rymindr_recurring_type == 'Yearly') {\n        //     if ((!formvalue.rymindr_period_type) || !(parseInt(formvalue.rymindr_period_type) > 1 && parseInt(formvalue.rymindr_period_type) <= 15)) {\n        //       isError = true\n        //       formvalidation.rymindr_period_type = 'This should not be zero or blank or more than 15'\n        //       setFormValidation(formvalidation)\n        //     }\n        //   }\n\n        //   if (!formvalue.rymindr_recurring_type) {\n        //     isError = true\n        //     formvalidation.rymindr_recurring_type = 'Please select the period'\n        //     setFormValidation(formvalidation)\n        //   }\n        // }\n        if (state.switchrecuring) {\n            if (endDateErr !== '') {\n                isError = true;\n                setEndDateErr(endDateErr);\n            }\n            if (!formvalue.rymindr_recurring_type) {\n                isError = true;\n                formvalidation.rymindr_recurring_type = 'Please select the period';\n                setFormValidation(formvalidation);\n            }\n        }\n        return isError;\n    };\n\n    const handleToTagvalue = (value) => {\n        setPhoneNumber(value);\n    };\n    const handleReset = () => {\n        // setFormvalue(FormFields)\n        // sethandleDateChange(new Date())\n        // sethandleTimeChange(date.getTime())\n        // setGroupname_membersname([])\n        // setMemberchecked([])\n        // setChecked([])\n        // setcheckOnSelectAllMembers(false)\n        // setcheckOnSelectAllGroup(false)\n        const newChecked = [...checked];\n\n        if (rymindrDetails != null) {\n            const formdata = {...formvalue };\n            formdata.note = rymindrDetails.note;\n            formdata.category_id = rymindrDetails.category_id;\n            formdata.rymindr_id = rymindrDetails.rymindr_id;\n            // moment(new Date()).format('YYYY-MM-DD HH:mm')\n\n            const value = rymindrDetails.subcategory_id;\n            if (subcategories != null) {\n                const found = subcategories.find((element) => element.id === value);\n                formdata.rymindr_type = rymindrDetails.category_name;\n\n                formdata.subcategory_id = value;\n            }\n\n            // formvalidation.subcategory_id = '';\n            // setFormValidation(formvalidation);\n\n            if (rymindrDetails.recurring.recurring_type) {\n                state.switchrecuring = true;\n                // setState(state)\n                setState({...state, switch: true });\n                formdata.rymindr_recurring_type = rymindrDetails.recurring.recurring_type;\n                formdata.rymindr_period_type = rymindrDetails.recurring.recurring_frequency;\n            }\n            if (rymindrDetails.user_list) {\n                const membername = [];\n                const groupname = [];\n\n                const newChecked = [...checked];\n                rymindrDetails.user_list.forEach((ele) => {\n                    if (businessusers.length > 0) {\n                        businessusers.forEach((element) => {\n                            if (element.user_id == ele.user_id) {\n                                // if(element.user_id == user_id){\n                                //   membername.push(`You`);\n                                // }else{\n                                membername.push(`${element.first_name} ${element.last_name}`);\n                                // }\n                            }\n                        });\n                    }\n\n                    newChecked.push(ele.user_id);\n                    setMemberchecked(newChecked);\n                });\n\n                rymindrDetails.group_list.forEach((ele) => {\n                    if (groups.length > 0) {\n                        groups.forEach((element) => {\n                            if (element.group_id == ele.group_id) {\n                                groupname.push(element.group_name);\n                            }\n                        });\n                    }\n                    newChecked.push(ele.group_id);\n                    setChecked(newChecked);\n                });\n\n                setGroupname_membersname(groupname.concat(membername));\n            }\n            const new_select = moment(rymindrDetails.rymindr_time).format('YYYY-MM-DD HH:mm');\n            sethandleTimeChange(new_select);\n            // sethandleTimeChange(moment((new Date(rymindrDetails.rymindr_date)).getTime()).format('HH:mm'))\n            // debugger\n            sethandleDateChange(rymindrDetails.rymindr_date);\n            sethandleTimeChange(rymindrDetails.rymindr_date + ' ' + rymindrDetails.rymindr_time);\n            setFiles(rymindrDetails.attachment);\n\n            setFormvalue(formdata);\n        }\n    };\n    const handleToSubmit = () => {\n        if (validate()) return false;\n        const FormFields11 = {...formvalue };\n        FormFields11.rymindr_to_group = checked.join();\n        FormFields11.rymindr_group_members_to = group_members;\n        FormFields11.user_id = user_id;\n        FormFields11.user_name = first_name;\n\n        const startDate = moment(selectedDate).format('YYYY-MM-DD');\n        const endDate = moment(selectedEndDate).format('YYYY-MM-DD');\n\n        FormFields11.rymindr_date = selectedDate;\n        FormFields11.rymindr_end_date = endDate;\n\n        FormFields11.appointment = state.switchrecuring;\n\n        let temp_final = selectedTime.split(' ');\n        // let temp_time = temp_final[1].slice(0, -3);\n\n        FormFields11.rymindr_time = temp_final[1];\n\n        FormFields11.rymindr_to =\n            matched_contact !== null ? memberchecked.join() + ',' + matched_contact.user_id : memberchecked.join();\n        if (state.switchrecuring) {\n            console.log('startDate====', startDate);\n            console.log('endDate====', endDate);\n            FormFields11.rymindr_period_type = getPeriod_type(selectedDate, endDate, FormFields11.rymindr_recurring_type);\n        } else {\n            delete FormFields11.rymindr_period_type;\n            delete FormFields11.rymindr_end_date;\n            delete FormFields11.rymindr_recurring_type;\n        }\n        if (rymindrDetails.recurring_type == null) {\n            FormFields11.is_recurring = false;\n        } else {\n            FormFields11.is_recurring = true;\n        }\n        const sendAttachment = files;\n        const deleteAttachment = deleteFiles;\n        const unmatch = matched_contact ? matched_contact.mobile_no : '';\n\n        // console.warn('hello recuring', FormFields11, history, sendAttachment);\n        console.log('sendAttachment', sendAttachment);\n\n        console.log('deleteAttachment==', deleteAttachment);\n        console.log('FormFields11==', FormFields11);\n        editRymindr(FormFields11, history, sendAttachment, deleteAttachment);\n\n        //createRymindr(FormFields11, unmatch, history, sendAttachment);\n    };\n\n    const getPeriod_type = (d1, d2, recurring_type) => {\n        const secondsDiff = (d1, d2) => {\n            let millisecondDiff = d2 - d1;\n            let secDiff = Math.floor((d2 - d1) / 1000);\n            return secDiff;\n        };\n\n        const minutesDiff = (d1, d2) => {\n            let seconds = secondsDiff(d1, d2);\n            let minutesDiff = Math.floor(seconds / 60);\n            return minutesDiff;\n        };\n\n        const hoursDiff = (d1, d2) => {\n            let minutes = minutesDiff(d1, d2);\n            let hoursDiff = Math.floor(minutes / 60);\n            return hoursDiff;\n        };\n\n        const daysDiff = (d1, d2) => {\n            let hours = hoursDiff(d1, d2);\n            let daysDiff = Math.floor(hours / 24);\n            return daysDiff;\n        };\n        const weeksDiff = (d1, d2) => {\n            let days = daysDiff(d1, d2);\n            let weeksDiff = Math.floor(days / 7);\n            return weeksDiff;\n        };\n        const yearsDiff = (d1, d2) => {\n            let date1 = new Date(d1);\n            let date2 = new Date(d2);\n            let yearsDiff = date2.getFullYear() - date1.getFullYear();\n            return yearsDiff;\n        };\n        const monthsDiff = (d1, d2) => {\n            let date1 = new Date(d1);\n            let date2 = new Date(d2);\n            let years = yearsDiff(d1, d2);\n            let months = years * 12 + (date2.getMonth() - date1.getMonth());\n            return months;\n        };\n\n        let numbers = '';\n        if (recurring_type == 'Daily') {\n            numbers = daysDiff(new Date(d1).getTime(), new Date(d2).getTime());\n        } else if (recurring_type == 'Weekly') {\n            numbers = weeksDiff(new Date(d1).getTime(), new Date(d2).getTime());\n        } else if (recurring_type == 'Monthly') {\n            numbers = monthsDiff(new Date(d1).getTime(), new Date(d2).getTime());\n        } else if (recurring_type == 'Yearly') {\n            numbers = yearsDiff(new Date(d1).getTime(), new Date(d2).getTime());\n        }\n        return numbers;\n    };\n\n    useMemo(() => {\n        const newChecked = [...checked];\n        if (rymindrDetails != null) {\n            if (rymindrDetails.user_list) {\n                const membername = [];\n                const groupname = [];\n\n                //const newChecked = [...checked];\n                let newCheckedMem = [...memberchecked];\n\n                rymindrDetails.user_list.forEach((ele) => {\n                    if (businessusers.length > 0) {\n                        businessusers.forEach((element) => {\n                            if (element.user_id == ele.user_id) {\n                                // if(element.user_id == user_id){\n                                //   membername.push(`You`);\n                                // }else{\n                                membername.push(`${element.first_name} ${element.last_name}`);\n                                // }\n                            }\n                        });\n                    }\n                    if (newCheckedMem.indexOf(ele.user_id.toString()) == -1) {\n                        newCheckedMem.push(ele.user_id.toString());\n                    }\n                    // newChecked.push(parseInt(ele.user_id));\n                });\n                setMemberchecked(newCheckedMem);\n\n                let newCheckedGroup = [...checked];\n                rymindrDetails.group_list.forEach((ele) => {\n                    if (groups.length > 0) {\n                        groups.forEach((element) => {\n                            if (element.group_id == ele.group_id) {\n                                groupname.push(element.group_name);\n                            }\n                        });\n                    }\n                    if (newCheckedGroup.indexOf(ele.group_id) == -1) {\n                        newCheckedGroup.push(ele.group_id);\n                    }\n                });\n\n                setChecked(newCheckedGroup);\n                if (membername == '') {\n                    membername.push('You');\n                }\n\n                setGroupname_membersname(groupname.concat(membername));\n            }\n        }\n    }, [rymindrDetails, businessusers, groups]);\n\n    useMemo(() => {\n        const newChecked = [...checked];\n        if (rymindrDetails != null) {\n            const formdata = {...formvalue };\n            formdata.note = rymindrDetails.note;\n            formdata.category_id = formdata.category_id ? formdata.category_id : rymindrDetails.category_id;\n            if (rymindrDetails.recr_rymindr_id !== null) {\n                formdata.rymindr_id = rymindrDetails.recr_rymindr_id;\n            } else {\n                formdata.rymindr_id = rymindrDetails.rymindr_id;\n            }\n            // moment(new Date()).format('YYYY-MM-DD HH:mm')\n\n            const value = rymindrDetails.subcategory_id;\n            formdata.subcategory_id = rymindrDetails.subcategory_id;\n\n            // if (subcategories != null) {\n            //   const found = subcategories.find((element) => element.id === value)\n            //   // formdata.rymindr_type = rymindrDetails.category_name\n            //   formdata.rymindr_type = rymindrDetails.rymindr_type\n\n            //   formdata.subcategory_id = value\n            // }\n\n            // formvalidation.subcategory_id = '';\n            // setFormValidation(formvalidation);\n\n            if (rymindrDetails.recurring.recurring_type) {\n                state.switchrecuring = true;\n                // setState(state)\n                setState({...state, switch: true });\n                formdata.rymindr_recurring_type = rymindrDetails.recurring.recurring_type;\n                formdata.rymindr_period_type = rymindrDetails.recurring.recurring_frequency;\n            }\n            if (rymindrDetails.qr_code !== '') {\n                setState({...state, is_qrcode: true });\n            }\n            // if (rymindrDetails.user_list) {\n            //   const membername = []\n            //   const groupname = []\n\n            //const newChecked = [...checked];\n            //   let newCheckedMem =[...memberchecked];\n\n            //   (rymindrDetails.user_list).forEach(ele => {\n            //     if (businessusers.length > 0) {\n            //       businessusers.forEach((element) => {\n            //         if (element.user_id == ele.user_id) {\n            //           // if(element.user_id == user_id){\n            //           //   membername.push(`You`);\n            //           // }else{\n            //           membername.push(`${element.first_name} ${element.last_name}`)\n            //           // }\n            //         }\n            //       })\n            //     }\n            //     if(newCheckedMem.indexOf(ele.user_id.toString()) == -1) {\n            //       newCheckedMem.push((ele.user_id).toString())\n            //     }\n            //     // newChecked.push(parseInt(ele.user_id));\n\n            //   });\n            //   setMemberchecked(newCheckedMem)\n\n            //   let newCheckedGroup =[...checked];\n            //   (rymindrDetails.group_list).forEach(ele => {\n            //     if (groups.length > 0) {\n            //       groups.forEach((element) => {\n            //         if (element.group_id == ele.group_id) {\n            //           groupname.push(element.group_name)\n            //         }\n            //       })\n            //     }\n            //     if(newCheckedGroup.indexOf(ele.group_id) == -1) {\n            //       newCheckedGroup.push(ele.group_id)\n            //     }\n\n            //   })\n\n            //   setChecked(newCheckedGroup)\n\n            //   if(membername == '') {\n            //     membername.push('You')\n            //   }\n\n            //   setGroupname_membersname(groupname.concat(membername))\n            // }\n            const new_select = moment(rymindrDetails.rymindr_time).format('YYYY-MM-DD HH:mm');\n            sethandleTimeChange(new_select);\n            // sethandleTimeChange(moment((new Date(rymindrDetails.rymindr_date)).getTime()).format('HH:mm'))\n            // debugger\n\n            console.log('rymindrDetails==', rymindrDetails);\n            sethandleDateChange(rymindrDetails.rymindr_date);\n\n            if (rymindrDetails.recurring && rymindrDetails.recurring.recurring_type) {\n                let days = 0;\n                if (rymindrDetails.recurring.recurring_type == 'Daily') {\n                    days = parseInt(rymindrDetails.recurring.recurring_frequency);\n                } else if (rymindrDetails.recurring.recurring_type == 'Weekly') {\n                    days = parseInt(rymindrDetails.recurring.recurring_frequency) * 7;\n                } else if (rymindrDetails.recurring.recurring_type == 'Monthly') {\n                    days = parseInt(rymindrDetails.recurring.recurring_frequency) * 30;\n                } else if (rymindrDetails.recurring.recurring_type == 'Yearly') {\n                    days = parseInt(rymindrDetails.recurring.recurring_frequency) * 365;\n                }\n                console.log('days==', days);\n                const date = new Date(rymindrDetails.start_date);\n                const newEndDate = moment(addDays(date, days)).format('YYYY-MM-DD');\n\n                sethandleEndDateChange(newEndDate);\n            }\n\n            function addDays(date, days) {\n                const copy = new Date(Number(date));\n                copy.setDate(date.getDate() + days);\n                return copy;\n            }\n\n            // let type = 'Yearly';\n            // let frequency = 5;\n            // if(type){\n            //   let  days = 0;\n            //   if(type=='Daily'){\n            //     days = parseInt(frequency);\n            //   } else if(type=='Weekly'){\n            //     days = parseInt(frequency)*7;\n            //   } else if(type=='Monthly'){\n            //     days = parseInt(frequency)*30;\n            //   } else if(type=='Yearly'){\n            //     days = parseInt(frequency)*365;\n            //   }\n            //   console.log('days==',days);\n            //   // recurring_frequency: 3\n            //   // recurring_type: \"Weekly\"\n            // }\n\n            sethandleTimeChange(rymindrDetails.rymindr_date + ' ' + rymindrDetails.rymindr_time);\n            setFiles(rymindrDetails.attachment);\n\n            setFormvalue(formdata);\n        }\n    }, [rymindrDetails, businessusers, groups]);\n    useMemo(() => {\n        error && enqueueSnackbar(error, { variant: 'error' });\n    }, [error]);\n\n    // useMemo(() => {\n    //   //alert(success_message);\n    //   success_message && enqueueSnackbar(success_message, { variant: 'success' })\n    // }, [success_message])\n\n    const handleToopen = () => {\n        setOpen(true);\n    };\n    useMemo(() => {\n        console.log('deleteFiles===', deleteFiles);\n    }, [deleteFiles]);\n\n    const deleteImage = (index, file) => {\n        if (file && file.image_name) {\n            let deleteThat = files.filter((a) => a.image_name == file.image_name);\n            setDeleteFiles([...deleteFiles, ...deleteThat]);\n            var removeIndex = files\n                .map(function(item) {\n                    return item.image_name;\n                })\n                .indexOf(file.image_name);\n            files.splice(removeIndex, 1);\n        } else if (file && file.name) {\n            var removeIndex = files\n                .map(function(item) {\n                    return item.name;\n                })\n                .indexOf(file.name);\n            files.splice(removeIndex, 1);\n        }\n        if (files.length == 0) {\n            setFiles([]);\n        } else {\n            setFiles([...files]);\n            console.log('files===', files);\n        }\n    };\n\n    const getFiles = (inputfile) => {\n        console.log('inputfile====', inputfile);\n        const file_Array = [...files];\n        inputfile.map((files1) => {\n            if (files1.image_name != undefined) {\n                var extn = files1.image_name.split('.');\n                var etn = ['docx', 'doc', 'pdf', 'jpg', 'jpeg', 'png'];\n\n                var low = extn[1].toLowerCase();\n\n                files.push(files1);\n            } else {\n                var extn = files1.name.split('.');\n                var etn = ['docx', 'doc', 'pdf', 'jpg', 'jpeg', 'png'];\n\n                var low = extn[1].toLowerCase();\n\n                files.push(files1);\n            }\n        });\n        console.log('files====', files);\n        setFiles([...files]);\n    };\n\n    const handleChangeEditor = (data) => {\n        // setFormValidation(data);\n        setFormvalue({...formvalue, note: data });\n    };\n    return ( <\n        >\n        <\n        MuiPickersUtilsProvider utils = { MomentUtils } > {\n            /* <ConfirmationDialogRaw open={open} onClose={handleClose} groupdata={groups} memberdata={businessusers}>\n                      <Tabmenu\n                        groupdata={groups}\n                        memberdata={businessusers}\n                        handleToggles={handleGroupToggle}\n                        checked={checked}\n                        handleMemberToggle={handleMemberToggle}\n                        memberchecked={memberchecked}\n                        handleToTagvalue={handleToTagvalue}\n                        checkOnSelectAllMembers={checkOnSelectAllMembers}\n                        checkOnSelectAllGroup={checkOnSelectAllGroup}\n                      />\n                    </ConfirmationDialogRaw> */\n        }\n\n        <\n        ConfirmationDialogRaw open = { open }\n        onClose = { handleClose }\n        groupdata = { groups }\n        memberdata = { businessusers } >\n        <\n        Tabmenu groupdata = { groups }\n        memberdata = { businessusers }\n        handleToggles = { handleGroupToggle }\n        checked = { checked }\n        handleMemberToggle = { handleMemberToggle }\n        handleAllMembersToggle = { handleAllMembersToggle }\n        handleAllGroupMembersToggle = { handleAllGroupMembersToggle }\n        memberchecked = { memberchecked }\n        handleToTagvalue = { handleToTagvalue }\n        /> <\n        /ConfirmationDialogRaw> <\n        Grid className = \"main-wrap-head\"\n        container style = {\n            { marginBottom: 20 } }\n        alignItems = \"center\" >\n        <\n        Grid item xs = { 7 } >\n        <\n        TypoHeadStyled variant = \"h4\" >\n        <\n        IconButton color = \"inherit\"\n        onClick = {\n            () => history.goBack() } >\n        <\n        ArrowBack / >\n        <\n        /IconButton>\n        Edit < TypoHeadInnerStyled component = \"span\" > Rymindr < /TypoHeadInnerStyled> <\n        /TypoHeadStyled> <\n        /Grid> {\n            /* <Grid item xs={5}>\n                        <Box display='flex' justifyContent='flex-end'>\n                          <Button variant='contained' color='primary' onClick={handleReset} size='large' startIcon={<Replay />}>\n                            Reset\n                          </Button>\n                        </Box>\n                      </Grid> */\n        } <\n        /Grid> <\n        PaperStyled className = \"main-wrap-body edit-ray-wrap\" >\n        <\n        Grid className = \"article-content\" >\n        <\n        div className = \"slideContainer\" > {\n            categories.length > 0 && loaded ? ( <\n                Slider ref = {\n                    (slider) => setSlider(slider) } {...settings } > {\n                    categories.map((item, key) => {\n                        return item.is_message_center == 0 ? ( <\n                            SlideBoxStyled key = { key }\n                            data = { item } >\n                            <\n                            img src = { item.category_image }\n                            className = \"SlideIcon\" / >\n                            <\n                            SlideType > { item.category_name } < /SlideType> <\n                            /SlideBoxStyled>\n                        ) : (\n                            ''\n                        );\n                    })\n                } <\n                /Slider>\n            ) : ( <\n                div > Loading... < /div>\n            )\n        } <\n        /div>\n\n        <\n        GridStyled container spacing = { 5 } >\n        <\n        Grid item xs = { 4 } >\n        <\n        TextField id = \"outlined-select-currency\"\n        select label = \"Sub Category\"\n        value = { formvalue.subcategory_id }\n        fullWidth onChange = { handleChange }\n        name = \"rymindr_type\"\n        variant = \"outlined\"\n        error = {!!formValidation.subcategory_id }\n        helperText = { formValidation.subcategory_id } >\n        {\n            subcategories.length > 0 ?\n            subcategories.map((option, key) => ( <\n                MenuItem key = { key }\n                value = { option.id } > { option.category_name } <\n                /MenuItem>\n            )) :\n                loading && < CircularSpinner / >\n        } <\n        /TextField> <\n        /Grid> <\n        Grid item xs = { 4 } >\n        <\n        DatePicker label = \"Set Date\"\n        inputVariant = \"outlined\"\n        value = { selectedDate }\n        onChange = { handleDateChange }\n        animateYearScrolling format = \"DD/MM/YYYY\"\n        fullWidth name = \"rymindr_date\"\n        error = {!!dateErr }\n        helperText = { dateErr }\n        disablePast = { true }\n        /> <\n        /Grid> <\n        Grid item xs = { 4 } >\n        <\n        TimePicker inputVariant = \"outlined\"\n        label = \"Set Time\"\n        value = { selectedTime }\n        onChange = { handleTimeChange }\n        fullWidth ampm = { false }\n        error = {!!timeErr }\n        helperText = { timeErr }\n        /> <\n        /Grid> { console.log('groupname_membersname-', groupname_membersname) } <\n        Grid item xs = { 4 } >\n        <\n        Autocomplete multiple limitTags = { 1 }\n        id = \"tags-filled\"\n        filterSelectedOptions = { false }\n        options = { groupname_membersname }\n        freeSolo value = { groupname_membersname }\n        freeSolo onChange = {\n            (event, newValue) => {\n                console.log('newValue++', newValue);\n                const newVal = newValue.toString();\n                const getArray = newVal.split(',');\n\n                const user_id_arr = [];\n                const group_id_arr = [];\n                for (let i = 0; i < getArray.length; i++) {\n                    const getNewList = businessusers.find(\n                        (ele) => ele.first_name + ' ' + ele.last_name == getArray[i]\n                    );\n                    console.log('getArray', getArray);\n                    console.log('getNewList', getNewList);\n\n                    if (getNewList) {\n                        if (getNewList == undefined) {} else {\n                            user_id_arr.push(getNewList.user_id);\n                            setcheckOnSelectAllMembers(false);\n                        }\n\n                        // break;\n                    } else {\n                        // FOR GROUPS\n                        const getNewGroupList = groups.find((ele) => ele.group_name == getArray[i]);\n                        console.log('getNewGroupList', getNewGroupList);\n                        console.log('groups', groups);\n                        console.log('getArray', getArray);\n                        if (getNewGroupList == undefined) {} else {\n                            group_id_arr.push(getNewGroupList.group_id);\n                            setcheckOnSelectAllGroup(false);\n                        }\n                    }\n                    console.log('user_id_arr', user_id_arr);\n                    console.log('group_id_arr', group_id_arr);\n                }\n                setGroupname_membersname(newValue);\n\n                // console.log('user_id_arr',user_id_arr)\n                // const data1 = user_id_arr[0];\n                // const index1 = memberchecked.indexOf(data1);\n                // if (index1 > -1) {\n                //   memberchecked.splice(index1, 1);\n                // }\n                // // newChecked.push(group_id);\n                // const data2 = group_id_arr[0];\n                // const index2 = checked.indexOf(data2);\n                // if (index2 > -1) {\n                //   checked.splice(index2, 1);\n                // }\n                setMemberchecked(user_id_arr);\n                setChecked(group_id_arr);\n                console.log('newValue', newValue);\n                console.log('memberchecked', memberchecked);\n            }\n        }\n        renderInput = {\n            (params) => ( <\n                TextField {...params }\n                variant = \"outlined\"\n                label = \"To\"\n                onChange = { handleToopen }\n                onClick = { handleToopen }\n                error = {!!toErr }\n                helperText = { toErr }\n                />\n            )\n        }\n        /> <\n        /Grid> {\n            state.switchrecuring && ( <\n                Grid item xs = { 4 } >\n                <\n                TextField id = \"outlined-select-currency\"\n                select label = \"Period\"\n                value = { formvalue.rymindr_recurring_type }\n                fullWidth onChange = { handleChange }\n                variant = \"outlined\"\n                name = \"rymindr_recurring_type\"\n                error = {!!formValidation.rymindr_recurring_type }\n                helperText = { formValidation.rymindr_recurring_type } >\n                {\n                    Recurring.map((option) => ( <\n                        MenuItem key = { option }\n                        value = { option } > { option } <\n                        /MenuItem>\n                    ))\n                } <\n                /TextField> <\n                /Grid>\n            )\n        }\n\n        <\n        Grid item xs = { 4 } > {\n            state.switchrecuring && (\n                // <TextField\n                //   id='outlined-select-currency'\n                //   label='No. of Time'\n                //   value={formvalue.rymindr_period_type}\n                //   fullWidth\n                //   name='rymindr_period_type'\n                //   onChange={handleChange}\n                //   variant='outlined'\n                //   error={!!formValidation.rymindr_period_type}\n                //   helperText={formValidation.rymindr_period_type}\n                // />\n\n                <\n                DatePicker label = \"Set End Date\"\n                inputVariant = \"outlined\"\n                value = { selectedEndDate }\n                onChange = { handleEndDateChange }\n                animateYearScrolling format = \"DD/MM/YYYY\"\n                fullWidth name = \"rymindr_end_date\"\n                error = {!!endDateErr }\n                helperText = { endDateErr }\n                disablePast = { true }\n                />\n            )\n        } <\n        FormControlLabel style = {\n            { position: 'static', marginLeft: 6, marginTop: 8 } }\n        control = { <\n            Switch\n            checked = { state.switchrecuring }\n            onChange = { handleSwitchChange }\n            name = \"switchrecuring\"\n            color = \"primary\" /\n            >\n        }\n        label = \"Recurring\" /\n        >\n        <\n        /Grid> <\n        Grid item xs = { 12 } >\n        <\n        CKEditor config = { ckEditorConfig }\n        editor = { Editor }\n        data = { formvalue.note }\n        name = \"note\"\n        onReady = {\n            (editor) => {\n                // You can store the \"editor\" and use when it is needed.\n                console.log('Editor is ready to use!', editor);\n            }\n        }\n        onChange = {\n            (event, editor) => {\n                const data = editor.getData();\n                console.log('datadata====', data);\n                handleChangeEditor(data);\n            }\n        }\n        // onBlur={ ( event, editor ) => {\n        //   const data = editor.getData();\n\n        //   console.log('datadata====',data);\n        //     handleChangeEditor(data)\n        //     console.log( 'Blur.', editor );\n        // } }\n\n        onFocus = {\n            (event, editor) => {\n                console.log('Focus.', editor);\n            }\n        }\n        /> {\n            /* <TextField\n                            id='outlined-multiline-static'\n                            label='What’s the rymindr'\n                            fullWidth\n                            multiline\n                            rows={4}\n                            variant='outlined'\n                            name='note'\n                            value={formvalue.note}\n                            error={!!formValidation.note}\n                            helperText={formValidation.note}\n                            onChange={handleChange}\n                          /> */\n        } <\n        /Grid>\n\n        <\n        Grid item xs = { 12 } >\n        <\n        Box display = \"flex\" > {\n            /*<FormControlLabel\n                              control={\n                                <Checkbox checked={state.is_qrcode} onChange={handleChangeCheck} name='is_qrcode' color='primary' />\n                              }\n                              label='Generate QR code'\n                            /> */\n        }\n\n        <\n        FormControlLabel className = \"attachement\"\n        control = { <\n            FileBase64\n            multiple\n            onDone = { getFiles }\n            onClick = {\n                (e) => (e.target.value = null) }\n            className = \"displayNone\"\n            style = {\n                { display: 'none' } }\n            />\n        }\n        label = { <\n            Typography variant = \"subtitle1\"\n            component = \"span\"\n            style = {\n                { marginLeft: 50 } } >\n            <\n            Attachment style = {\n                { marginBottom: -6, marginRight: 10 } }\n            color = \"primary\" / > Attachments <\n            /Typography>\n        }\n        /> <\n        /Box> <\n        Box alignItems = \"center\"\n        display = \"flex\" > {\n            files &&\n            files.map((file, index) => {\n                // alert(files.length+'----'+index+'----'+file);\n                if (file.image_name != undefined) {\n                    const extension_arr = file.image_name.split('.');\n                    const extension = extension_arr[1];\n\n                    if (extension == 'jpeg' || extension == 'jpg' || extension == 'png' || extension == 'gif') {\n                        return ( <\n                            TypoStyled variant = \"subtitle1\"\n                            component = \"p\"\n                            key = { index } >\n                            <\n                            img src = { file.file_name }\n                            width = \"32\"\n                            height = \"32\" / > { ' ' } <\n                            Box className = { classes.fileName } > { file.image_name } < /Box>{' '} <\n                            CancelIcon onClick = {\n                                () => deleteImage(index, file) }\n                            /> <\n                            /TypoStyled>\n                        );\n                    } else if (extension == 'mp3') {\n                        return ( <\n                            TypoStyled variant = \"subtitle1\"\n                            component = \"p\"\n                            key = { index } >\n                            <\n                            Headset className = { classes.iconAttach }\n                            /> {file.image_name}{' '} <\n                            CancelIcon onClick = {\n                                () => deleteImage(index, file) }\n                            /> <\n                            /TypoStyled>\n                        );\n                    } else if (extension == 'mp4') {\n                        return ( <\n                            TypoStyled variant = \"subtitle1\"\n                            component = \"p\"\n                            key = { index } >\n                            <\n                            Videocam className = { classes.iconAttach }\n                            /> {file.image_name}{' '} <\n                            CancelIcon onClick = {\n                                () => deleteImage(index, file) }\n                            /> <\n                            /TypoStyled>\n                        );\n                    } else if (extension == 'doc' || extension == 'docx' || extension == 'pdf') {\n                        return ( <\n                            TypoStyled variant = \"subtitle1\"\n                            component = \"p\"\n                            key = { index } >\n                            <\n                            Description className = { classes.iconAttach }\n                            /> {file.image_name}{' '} <\n                            CancelIcon onClick = {\n                                () => deleteImage(index, file) }\n                            /> <\n                            /TypoStyled>\n                        );\n                    } else {\n                        return ( <\n                            TypoStyled variant = \"subtitle1\"\n                            component = \"p\"\n                            key = { index } >\n                            <\n                            Description className = { classes.iconAttach }\n                            /> {file.image_name}{' '} <\n                            CancelIcon onClick = {\n                                () => deleteImage(index, file) }\n                            /> <\n                            /TypoStyled>\n                        );\n                    }\n                } else {\n                    const extension_arr = file.name.split('.');\n                    const extension = extension_arr[1];\n                    if (extension == 'jpeg' || extension == 'jpg' || extension == 'png' || extension == 'gif') {\n                        return ( <\n                            TypoStyled variant = \"subtitle1\"\n                            component = \"p\"\n                            key = { index } >\n                            <\n                            img src = { file.base64 }\n                            width = \"32\"\n                            height = \"32\"\n                            className = { classes.iconAttach }\n                            />{' '} <\n                            Box className = { classes.fileName } > { file.name } < /Box>{' '} <\n                            CancelIcon onClick = {\n                                () => deleteImage(index, file) }\n                            /> <\n                            /TypoStyled>\n                        );\n                    } else if (extension == 'mp3') {\n                        return ( <\n                            TypoStyled variant = \"subtitle1\"\n                            component = \"p\"\n                            key = { index } >\n                            <\n                            Headset className = { classes.iconAttach }\n                            /> {file.name}{' '} <\n                            CancelIcon onClick = {\n                                () => deleteImage(index, file) }\n                            /> <\n                            /TypoStyled>\n                        );\n                    } else if (extension == 'mp4') {\n                        return ( <\n                            TypoStyled variant = \"subtitle1\"\n                            component = \"p\"\n                            key = { index } >\n                            <\n                            Videocam className = { classes.iconAttach }\n                            /> {file.name}{' '} <\n                            CancelIcon onClick = {\n                                () => deleteImage(index, file) }\n                            /> <\n                            /TypoStyled>\n                        );\n                    } else if (extension == 'doc' || extension == 'docx' || extension == 'pdf') {\n                        return ( <\n                            TypoStyled variant = \"subtitle1\"\n                            component = \"p\"\n                            key = { index } >\n                            <\n                            Description className = { classes.iconAttach }\n                            /> {file.name}{' '} <\n                            CancelIcon onClick = {\n                                () => deleteImage(index, file) }\n                            /> <\n                            /TypoStyled>\n                        );\n                    } else {\n                        return ( <\n                            TypoStyled variant = \"subtitle1\"\n                            component = \"p\"\n                            key = { index } >\n                            <\n                            Description className = { classes.iconAttach }\n                            /> {file.name}{' '} <\n                            CancelIcon onClick = {\n                                () => deleteImage(index, file) }\n                            /> <\n                            /TypoStyled>\n                        );\n                    }\n                }\n            })\n        } <\n        /Box> <\n        /Grid> <\n        Grid item xs = { 5 }\n        /> <\n        Grid item xs = { 7 } >\n        <\n        Box display = \"flex\"\n        justifyContent = \"flex-end\" >\n        <\n        Button onClick = { handleToSubmit }\n        variant = \"contained\"\n        color = \"primary\"\n        size = \"large\"\n        startIcon = { < Send / > }\n        disabled = { loading } >\n        { loading && < CircularSpinner / > }\n        Update Rymindr <\n        /Button> <\n        /Box> <\n        /Grid> <\n        /GridStyled> <\n        /Grid> <\n        /PaperStyled> <\n        /MuiPickersUtilsProvider> <\n        />\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.rymidr.loading,\n        error: state.rymidr.error,\n        categories: state.rymidr.categories,\n        subcategories: state.rymidr.subcategories,\n        groups: state.rymidr.groups,\n        businessusers: state.rymidr.businessusers,\n        rymindrDetails: state.rymidr.rymindrDetails,\n        matched_contact: state.rymidr.matched_contact,\n        success_message: state.rymidr.success_message,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getCategoriesRymindr: (data) => dispatch(getCategoriesRymindr(data)),\n        editRymindr: (data, history, sendAttachment, deleteAttachment) =>\n            dispatch(editRymindr(data, history, sendAttachment, deleteAttachment)),\n        getRymidrDetails: (data) => dispatch(getRymidrDetails(data)),\n        getSubCategories: (data) => dispatch(getSubCategories(data)),\n        getGroups: (data) => dispatch(getGroups(data)),\n        getBusinessUsers: (data) => dispatch(getBusinessUsers(data)),\n        createRymindr: (data, unmatch, history, sendAttachment) =>\n            dispatch(createRymindr(data, unmatch, history, sendAttachment)),\n        inviteAndAddMobile: (data) => dispatch(inviteAndAddMobile(data)),\n    };\n};\n\nEditRymindr.propTypes = {\n    enqueueSnackbar: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n    getcategories: PropTypes.func.isRequired,\n    error: PropTypes.string.isRequired,\n    categories: PropTypes.array.isRequired,\n    subcategories: PropTypes.array.isRequired,\n    getSubCategories: PropTypes.func.isRequired,\n    getGroups: PropTypes.func.isRequired,\n    groups: PropTypes.array.isRequired,\n    businessusers: PropTypes.array.isRequired,\n    getBusinessUsers: PropTypes.func.isRequired,\n    createRymindr: PropTypes.func.isRequired,\n    inviteAndAddMobile: PropTypes.func.isRequired,\n    matched_contact: PropTypes.any.isRequired,\n    success_message: PropTypes.any.isRequired,\n    rymindrDetails: PropTypes.any.isRequired,\n    getRymidrDetails: PropTypes.func.isRequired,\n    editRymindr: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(EditRymindr));"]},"metadata":{},"sourceType":"module"}