{"ast":null,"code":"/**\r\n * Copyright (c) 2014-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule EmitterSubscription\r\n * @typechecks\r\n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar EventSubscription = require(\"./EventSubscription.js\");\n/**\r\n * EmitterSubscription represents a subscription with listener and context data.\r\n */\n\n\nvar EmitterSubscription = /*#__PURE__*/function (_EventSubscription) {\n  _inheritsLoose(EmitterSubscription, _EventSubscription);\n  /**\r\n   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls\r\n   *   this subscription\r\n   * @param {function} listener - Function to invoke when the specified event is\r\n   *   emitted\r\n   * @param {*} context - Optional context object to use when invoking the\r\n   *   listener\r\n   */\n\n\n  function EmitterSubscription(subscriber, listener, context) {\n    var _this;\n\n    _this = _EventSubscription.call(this, subscriber) || this;\n    _this.listener = listener;\n    _this.context = context;\n    return _this;\n  }\n\n  return EmitterSubscription;\n}(EventSubscription);\n\nmodule.exports = EmitterSubscription;","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/node_modules/fbemitter/lib/EmitterSubscription.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","EventSubscription","require","EmitterSubscription","_EventSubscription","subscriber","listener","context","_this","call","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAAED,EAAAA,QAAQ,CAACE,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAcH,UAAU,CAACC,SAAzB,CAArB;AAA0DF,EAAAA,QAAQ,CAACE,SAAT,CAAmBG,WAAnB,GAAiCL,QAAjC;AAA2CA,EAAAA,QAAQ,CAACM,SAAT,GAAqBL,UAArB;AAAkC;;AAEvL,IAAIM,iBAAiB,GAAGC,OAAO,CAAC,wBAAD,CAA/B;AACA;AACA;AACA;;;AAGA,IAAIC,mBAAmB,GAAG,aAAa,UAAUC,kBAAV,EAA8B;AACnEX,EAAAA,cAAc,CAACU,mBAAD,EAAsBC,kBAAtB,CAAd;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,WAASD,mBAAT,CAA6BE,UAA7B,EAAyCC,QAAzC,EAAmDC,OAAnD,EAA4D;AAC1D,QAAIC,KAAJ;;AAEAA,IAAAA,KAAK,GAAGJ,kBAAkB,CAACK,IAAnB,CAAwB,IAAxB,EAA8BJ,UAA9B,KAA6C,IAArD;AACAG,IAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACAE,IAAAA,KAAK,CAACD,OAAN,GAAgBA,OAAhB;AACA,WAAOC,KAAP;AACD;;AAED,SAAOL,mBAAP;AACD,CArBsC,CAqBrCF,iBArBqC,CAAvC;;AAuBAS,MAAM,CAACC,OAAP,GAAiBR,mBAAjB","sourcesContent":["/**\r\n * Copyright (c) 2014-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule EmitterSubscription\r\n * @typechecks\r\n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar EventSubscription = require(\"./EventSubscription.js\");\n/**\r\n * EmitterSubscription represents a subscription with listener and context data.\r\n */\n\n\nvar EmitterSubscription = /*#__PURE__*/function (_EventSubscription) {\n  _inheritsLoose(EmitterSubscription, _EventSubscription);\n\n  /**\r\n   * @param {EventSubscriptionVendor} subscriber - The subscriber that controls\r\n   *   this subscription\r\n   * @param {function} listener - Function to invoke when the specified event is\r\n   *   emitted\r\n   * @param {*} context - Optional context object to use when invoking the\r\n   *   listener\r\n   */\n  function EmitterSubscription(subscriber, listener, context) {\n    var _this;\n\n    _this = _EventSubscription.call(this, subscriber) || this;\n    _this.listener = listener;\n    _this.context = context;\n    return _this;\n  }\n\n  return EmitterSubscription;\n}(EventSubscription);\n\nmodule.exports = EmitterSubscription;"]},"metadata":{},"sourceType":"script"}