{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  token: null,\n  user: null,\n  error: null,\n  error2: null,\n  loading: false,\n  loginLoading: false,\n  authRedirectPath: '/'\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START2:\n      return { ...state,\n        error: null,\n        error2: null,\n        loginLoading: true\n      };\n\n    case actionTypes.AUTH_START:\n      return { ...state,\n        error: null,\n        error2: null,\n        loading: true\n      };\n\n    case actionTypes.AUTH_SUCCESS:\n      return { ...state,\n        token: action.idToken,\n        user: action.user,\n        error: null,\n        error2: null,\n        loginLoading: false\n      };\n\n    case actionTypes.AUTH_FAIL:\n      console.log('action.error', action.error);\n      return { ...state,\n        error: action.error,\n        error2: null,\n        loginLoading: false\n      };\n\n    case actionTypes.AUTH_LOGOUT:\n      return { ...state,\n        token: null,\n        userId: null,\n        error: null,\n        error2: null\n      };\n    // case actionTypes.ISLOADING:\n    //   return {\n    //     ...state,\n    //     error: null,\n    //     loading: true,\n    //   };\n\n    case actionTypes.AUTHERROR:\n      return { ...state,\n        error2: action.error2,\n        loading: false\n      };\n\n    case actionTypes.EMAIL_VERIFY:\n      return { ...state,\n        loading: false\n      };\n\n    case actionTypes.SIGNUP:\n      return { ...state,\n        register: action.payload,\n        error: null,\n        error2: null,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/store/reducers/auth.js"],"names":["actionTypes","initialState","token","user","error","error2","loading","loginLoading","authRedirectPath","reducer","state","action","type","AUTH_START2","AUTH_START","AUTH_SUCCESS","idToken","AUTH_FAIL","console","log","AUTH_LOGOUT","userId","AUTHERROR","EMAIL_VERIFY","SIGNUP","register","payload"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,IADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,MAAM,EAAE,IAJW;AAKnBC,EAAAA,OAAO,EAAE,KALU;AAMnBC,EAAAA,YAAY,EAAE,KANK;AAOnBC,EAAAA,gBAAgB,EAAE;AAPC,CAArB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,WAAW,CAACa,WAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELN,QAAAA,KAAK,EAAE,IAFF;AAGLC,QAAAA,MAAM,EAAE,IAHH;AAILE,QAAAA,YAAY,EAAE;AAJT,OAAP;;AAMF,SAAKP,WAAW,CAACc,UAAjB;AACE,aAAO,EACL,GAAGJ,KADE;AAELN,QAAAA,KAAK,EAAE,IAFF;AAGLC,QAAAA,MAAM,EAAE,IAHH;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKN,WAAW,CAACe,YAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELR,QAAAA,KAAK,EAAES,MAAM,CAACK,OAFT;AAGLb,QAAAA,IAAI,EAAEQ,MAAM,CAACR,IAHR;AAILC,QAAAA,KAAK,EAAE,IAJF;AAKLC,QAAAA,MAAM,EAAE,IALH;AAMLE,QAAAA,YAAY,EAAE;AANT,OAAP;;AAQF,SAAKP,WAAW,CAACiB,SAAjB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BR,MAAM,CAACP,KAAlC;AACA,aAAO,EACL,GAAGM,KADE;AAELN,QAAAA,KAAK,EAAEO,MAAM,CAACP,KAFT;AAGLC,QAAAA,MAAM,EAAE,IAHH;AAILE,QAAAA,YAAY,EAAE;AAJT,OAAP;;AAMF,SAAKP,WAAW,CAACoB,WAAjB;AACE,aAAO,EACL,GAAGV,KADE;AAELR,QAAAA,KAAK,EAAE,IAFF;AAGLmB,QAAAA,MAAM,EAAE,IAHH;AAILjB,QAAAA,KAAK,EAAE,IAJF;AAKLC,QAAAA,MAAM,EAAE;AALH,OAAP;AAOF;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKL,WAAW,CAACsB,SAAjB;AACE,aAAO,EACL,GAAGZ,KADE;AAELL,QAAAA,MAAM,EAAEM,MAAM,CAACN,MAFV;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKN,WAAW,CAACuB,YAAjB;AACE,aAAO,EACL,GAAGb,KADE;AAELJ,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAKN,WAAW,CAACwB,MAAjB;AACE,aAAO,EACL,GAAGd,KADE;AAELe,QAAAA,QAAQ,EAAEd,MAAM,CAACe,OAFZ;AAGLtB,QAAAA,KAAK,EAAE,IAHF;AAILC,QAAAA,MAAM,EAAE,IAJH;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF;AACE,aAAOI,KAAP;AApEJ;AAsED,CAvED;;AAwEA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  token: null,\n  user: null,\n  error: null,\n  error2: null,\n  loading: false,\n  loginLoading: false,\n  authRedirectPath: '/',\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START2:\n      return {\n        ...state,\n        error: null,\n        error2: null,\n        loginLoading: true,\n      };\n    case actionTypes.AUTH_START:\n      return {\n        ...state,\n        error: null,\n        error2: null,\n        loading: true,\n      };\n    case actionTypes.AUTH_SUCCESS:\n      return {\n        ...state,\n        token: action.idToken,\n        user: action.user,\n        error: null,\n        error2: null,\n        loginLoading: false,\n      };\n    case actionTypes.AUTH_FAIL:\n      console.log('action.error',action.error)\n      return {\n        ...state,\n        error: action.error,\n        error2: null,\n        loginLoading: false,\n      };\n    case actionTypes.AUTH_LOGOUT:\n      return {\n        ...state,\n        token: null,\n        userId: null,\n        error: null,\n        error2: null,\n      };\n    // case actionTypes.ISLOADING:\n    //   return {\n    //     ...state,\n    //     error: null,\n    //     loading: true,\n    //   };\n    case actionTypes.AUTHERROR:\n      return {\n        ...state,\n        error2: action.error2,\n        loading: false,\n      };\n\n    case actionTypes.EMAIL_VERIFY:\n      return {\n        ...state,\n        loading: false,\n      };\n\n    case actionTypes.SIGNUP:\n      return {\n        ...state,\n        register: action.payload,\n        error: null,\n        error2: null,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}