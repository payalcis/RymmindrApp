{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/ExamAttempt/ExamAttempt.js\";\nimport * as actions from '../../store/actions/index';\nimport { Attachment, Replay, Send, Headset, Videocam, Description } from '@material-ui/icons';\nimport { Box, Button, FormControl, Grid, IconButton, InputAdornment, InputLabel, ListItem, Paper, TextField, Typography } from '@material-ui/core';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { styled } from '@material-ui/core/styles';\nimport { withSnackbar } from 'notistack';\nimport { getFormBuilderList } from '../../store/actions/formBuilder';\nimport { ReactFormBuilder, ElementStore, ReactFormGenerator } from 'react-form-builder2';\nimport * as variables from '../../../src/variables';\nimport axios from 'axios';\nconst GridStyled = styled(Grid)({\n  height: '100vh'\n});\nconst PaperStyled = styled(Paper)({\n  width: 1000,\n  textAlign: 'center',\n  padding: 40,\n  borderRadius: 10\n});\nconst TypoStyled = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 20,\n  marginBottom: 30,\n  fontWeight: 'bold'\n}));\nconst LinkStyled = styled(Link)(({\n  theme\n}) => ({\n  color: theme.palette.primary.main,\n  textDecoration: 'none'\n}));\nconst TypoHeadStyledError = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 24,\n  color: 'red',\n  fontWeight: 'bold',\n  textAlign: 'center'\n}));\nconst TypoHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 24,\n  color: theme.palette.primary.main,\n  fontWeight: 'bold',\n  textAlign: 'center'\n}));\nconst ButtonStyled = styled(Button)(({\n  theme\n}) => ({\n  background: '#FFA502'\n}));\nconst FormFields = {\n  email: '',\n  password: ''\n};\n\nconst ExamAttempt = props => {\n  const {\n    getFormBuilderList,\n    enqueueSnackbar\n  } = props;\n  const [showForm, setShowForm] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState('');\n  const [getError, setError] = useState('');\n  const {\n    exam_id,\n    note_id,\n    token\n  } = useParams();\n\n  const _onSubmit = (data, flag) => {\n    let sendData = {\n      form_data: JSON.stringify(data),\n      exam_id: exam_id,\n      notification_id: note_id,\n      flag: flag\n    };\n\n    if (flag == 2) {\n      sendData = {\n        form_data: '',\n        exam_id: exam_id,\n        notification_id: note_id,\n        flag: flag\n      };\n    }\n\n    const Axios = () => {\n      return axios.create({\n        baseURL: 'https://rymindr.com/RymindrApi/api/',\n        headers: {\n          Accept: 'application/vnd.app.v5+json',\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      });\n    };\n\n    const response = Axios().post('/user/exam-form', sendData); //const response = Axios().post('/user/exam-form', { });\n\n    response.then(function (result) {\n      console.log('result====', result);\n\n      if (result.data.status == 1) {\n        enqueueSnackbar(result.data.message, {\n          variant: 'success'\n        });\n        setIsSubmitted(result.data.message);\n      } else {\n        enqueueSnackbar(result.data.message, {\n          variant: 'error'\n        });\n      }\n    }).catch(function (error) {\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    });\n  };\n\n  let _decline = () => {\n    console.log('sdfsfdsf');\n  };\n\n  useEffect(() => {\n    console.log('exam_id====', exam_id);\n    console.log('token====', token);\n\n    const Axios = () => {\n      return axios.create({\n        baseURL: 'https://rymindr.com/RymindrApi/api/',\n        headers: {\n          Accept: 'application/vnd.app.v5+json',\n          Authorization: 'Bearer ' + token\n        }\n      });\n    };\n\n    const response = Axios().post('/user/authenticate', {\n      exam_id: exam_id\n    });\n    response.then(function (result) {\n      console.log('result.data========', result.data);\n\n      if (result.data.status == 1) {\n        let getForm = JSON.parse(result.data.data[0].builder_data).task_data;\n        setShowForm(getForm);\n        console.log('getForm====', getForm);\n      } else {\n        setError(result.data.message);\n        enqueueSnackbar(result.data.message, {\n          variant: 'error'\n        });\n      }\n    }).catch(function (error) {\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n      setError('Something went wrong');\n    });\n  }, [exam_id, token]);\n  return /*#__PURE__*/React.createElement(GridStyled, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: \"loginBg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(PaperStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: 130\n    },\n    src: require('../../assets/images/login_logo.png'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }), \" \", /*#__PURE__*/React.createElement(ListItem, {\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \" \", !isSubmitted ? showForm && showForm.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: \"form_preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ReactFormGenerator, {\n    answer_data: {} //action_name=\"Save\"\n    ,\n    form_action: \"/\",\n    form_method: \"POST\",\n    variables: variables,\n    data: showForm,\n    submitButton: /*#__PURE__*/React.createElement(\"button\", {\n      type: 'submit',\n      className: 'btn btn-primary',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 38\n      }\n    }, \"Submit1 \"),\n    on_change: () => {\n      console.log('onPost');\n    } //onSubmit={_onSubmit}\n    ,\n    onSubmit: data => {\n      _onSubmit(data, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: 'submit',\n    className: 'btn',\n    style: {\n      float: 'right',\n      background: 'rgb(255, 165, 2)',\n      color: '#fff',\n      padding: '8px 22px',\n      fontSize: '0.9375rem'\n    },\n    onClick: () => {\n      _onSubmit(null, 2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, \"Decline \"), \" \"), \" \", \" \") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TypoHeadStyledError, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, \" \", getError, \" \"), \" \") : /*#__PURE__*/React.createElement(TypoHeadStyled, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, \" \", isSubmitted, \" \"), \" \"), \" \"), \" \"), \" \");\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nExamAttempt.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(ExamAttempt));","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/ExamAttempt/ExamAttempt.js"],"names":["actions","Attachment","Replay","Send","Headset","Videocam","Description","Box","Button","FormControl","Grid","IconButton","InputAdornment","InputLabel","ListItem","Paper","TextField","Typography","Link","Redirect","useParams","React","useEffect","useState","PropTypes","connect","styled","withSnackbar","getFormBuilderList","ReactFormBuilder","ElementStore","ReactFormGenerator","variables","axios","GridStyled","height","PaperStyled","width","textAlign","padding","borderRadius","TypoStyled","fontSize","marginTop","marginBottom","fontWeight","LinkStyled","theme","color","palette","primary","main","textDecoration","TypoHeadStyledError","TypoHeadStyled","ButtonStyled","background","FormFields","email","password","ExamAttempt","props","enqueueSnackbar","showForm","setShowForm","isSubmitted","setIsSubmitted","getError","setError","exam_id","note_id","token","_onSubmit","data","flag","sendData","form_data","JSON","stringify","notification_id","Axios","create","baseURL","headers","Accept","Authorization","response","post","then","result","console","log","status","message","variant","catch","error","_decline","getForm","parse","builder_data","task_data","require","length","float","mapStateToProps","state","mapDispatchToProps","dispatch","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import * as actions from '../../store/actions/index';\n\nimport { Attachment, Replay, Send, Headset, Videocam, Description } from '@material-ui/icons';\nimport {\n    Box,\n    Button,\n    FormControl,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    ListItem,\n    Paper,\n    TextField,\n    Typography,\n} from '@material-ui/core';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { styled } from '@material-ui/core/styles';\nimport { withSnackbar } from 'notistack';\nimport { getFormBuilderList } from '../../store/actions/formBuilder';\nimport { ReactFormBuilder, ElementStore, ReactFormGenerator } from 'react-form-builder2';\nimport * as variables from '../../../src/variables';\nimport axios from 'axios';\n\nconst GridStyled = styled(Grid)({\n    height: '100vh',\n});\n\nconst PaperStyled = styled(Paper)({\n    width: 1000,\n    textAlign: 'center',\n    padding: 40,\n    borderRadius: 10,\n});\n\nconst TypoStyled = styled(Typography)(() => ({\n    fontSize: 24,\n    marginTop: 20,\n    marginBottom: 30,\n    fontWeight: 'bold',\n}));\n\nconst LinkStyled = styled(Link)(({ theme }) => ({\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n}));\n\nconst TypoHeadStyledError = styled(Typography)(({ theme }) => ({\n    fontSize: 24,\n    color: 'red',\n    fontWeight: 'bold',\n    textAlign: 'center',\n}));\n\nconst TypoHeadStyled = styled(Typography)(({ theme }) => ({\n    fontSize: 24,\n    color: theme.palette.primary.main,\n    fontWeight: 'bold',\n    textAlign: 'center',\n}));\n\nconst ButtonStyled = styled(Button)(({ theme }) => ({\n    background: '#FFA502',\n}));\nconst FormFields = { email: '', password: '' };\nconst ExamAttempt = (props) => {\n    const { getFormBuilderList, enqueueSnackbar } = props;\n    const [showForm, setShowForm] = useState([]);\n\n    const [isSubmitted, setIsSubmitted] = useState('');\n\n    const [getError, setError] = useState('');\n    const { exam_id, note_id, token } = useParams();\n\n    const _onSubmit = (data, flag) => {\n\n        let sendData = { form_data: JSON.stringify(data), exam_id: exam_id, notification_id: note_id, flag: flag }\n        if (flag == 2) {\n            sendData = { form_data: '', exam_id: exam_id, notification_id: note_id, flag: flag }\n        }\n\n        const Axios = () => {\n            return axios.create({\n                baseURL: 'https://rymindr.com/RymindrApi/api/',\n                headers: {\n                    Accept: 'application/vnd.app.v5+json',\n                    'Content-Type': 'application/json',\n                    Authorization: 'Bearer ' + token,\n                },\n            });\n        };\n\n\n        const response = Axios().post('/user/exam-form', sendData);\n        //const response = Axios().post('/user/exam-form', { });\n        response\n            .then(function(result) {\n                console.log('result====', result);\n                if (result.data.status == 1) {\n                    enqueueSnackbar(result.data.message, { variant: 'success' });\n                    setIsSubmitted(result.data.message);\n                } else {\n                    enqueueSnackbar(result.data.message, { variant: 'error' });\n                }\n            })\n            .catch(function(error) {\n                enqueueSnackbar('Something went wrong', { variant: 'error' });\n            });\n    };\n\n    let _decline = () => {\n        console.log('sdfsfdsf');\n    }\n\n\n    useEffect(() => {\n        console.log('exam_id====', exam_id);\n        console.log('token====', token);\n\n        const Axios = () => {\n            return axios.create({\n                baseURL: 'https://rymindr.com/RymindrApi/api/',\n                headers: {\n                    Accept: 'application/vnd.app.v5+json',\n                    Authorization: 'Bearer ' + token,\n                },\n            });\n        };\n\n        const response = Axios().post('/user/authenticate', { exam_id: exam_id });\n        response\n            .then(function(result) {\n                console.log('result.data========', result.data);\n                if (result.data.status == 1) {\n                    let getForm = JSON.parse(result.data.data[0].builder_data).task_data;\n                    setShowForm(getForm);\n                    console.log('getForm====', getForm);\n                } else {\n                    setError(result.data.message);\n                    enqueueSnackbar(result.data.message, { variant: 'error' });\n                }\n            })\n            .catch(function(error) {\n                enqueueSnackbar('Something went wrong', { variant: 'error' });\n                setError('Something went wrong');\n            });\n    }, [exam_id, token]);\n\n\n\n\n\n    return ( <\n        GridStyled container justify = \"center\"\n        alignItems = \"center\"\n        className = \"loginBg\" >\n        <\n        PaperStyled >\n        <\n        img style = {\n            { width: 130 } }\n        src = { require('../../assets/images/login_logo.png') }\n        /> { /* <TypoStyled variant=\"h6\">LOGIN</TypoStyled> */ }\n\n        <\n        ListItem alignItems = \"flex-start\" >\n        <\n        Grid item xs = { 12 } > {!isSubmitted ? (\n                showForm && showForm.length > 0 ? ( <\n                    >\n                    <\n                    Grid item xs = { 12 }\n                    className = \"form_preview\" >\n                    <\n                    ReactFormGenerator answer_data = {\n                        {} }\n                    //action_name=\"Save\"\n                    form_action = \"/\"\n                    form_method = \"POST\"\n                    variables = { variables }\n                    data = { showForm }\n                    submitButton = { <\n                        button type = { 'submit' }\n                        className = { 'btn btn-primary' } >\n                        Submit1 <\n                        /button>\n                    }\n                    on_change = {\n                        () => { console.log('onPost'); } }\n                    //onSubmit={_onSubmit}\n                    onSubmit = {\n                        (data) => { _onSubmit(data, 1) } }\n                    />\n\n                    <\n                    button type = { 'submit' }\n                    className = { 'btn' }\n                    style = {\n                        { float: 'right', background: 'rgb(255, 165, 2)', color: '#fff', padding: '8px 22px', fontSize: '0.9375rem' } }\n                    onClick = {\n                        () => { _onSubmit(null, 2) } } >\n                    Decline <\n                    /button> <\n                    /Grid> {\n                        /* <Grid item xs={7}>\n                                            <Box display=\"flex\" justifyContent=\"flex-end\">\n                                              <ButtonStyled\n                                                //onClick={handleToSubmit}\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                size=\"large\"\n                                                startIcon={<Send />}\n                                              >\n                                                decline\n                                              </ButtonStyled>\n                                            </Box>\n                                          </Grid> */\n                    } <\n                    />\n                ) : ( <\n                    >\n                    <\n                    TypoHeadStyledError variant = \"h4\" > { getError } < /TypoHeadStyledError> <\n                    />\n                )\n            ) : ( <\n                TypoHeadStyled variant = \"h4\" > { isSubmitted } < /TypoHeadStyled>\n            )\n        } <\n        /Grid> <\n        /ListItem> <\n        /PaperStyled> <\n        /GridStyled>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    };\n};\n\nExamAttempt.propTypes = {\n    enqueueSnackbar: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(ExamAttempt));"]},"metadata":{},"sourceType":"module"}