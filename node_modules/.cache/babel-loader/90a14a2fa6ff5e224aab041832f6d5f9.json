{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport Axios from '../../helper/axios';\nimport axios from 'axios'; //BOOKING ACTIONS\n//export const BOOK_ISLOADING = 'BOOK_ISLOADING';\n//export const BOOK_ERROR = 'BOOK_ERROR';\n//export const BOOK_GROUPLIST = 'BOOK_GROUPLIST';\n//export const BOOK_BUSINESSUSERS = 'BOOK_BUSINESSUSERS';\n//export const BOOK_CREATERYMINDR = 'BOOK_CREATERYMINDR';\n//BOOKING ACTIONS\n\nexport const SuccessEvent = success => {\n  return {\n    type: actionTypes.BOOK_SUCESS,\n    success: success\n  };\n};\nexport const isLoading = () => {\n  return {\n    type: actionTypes.BOOK_ISLOADING\n  };\n};\nexport const Success = response => {\n  return response;\n};\nexport const Fail = error => {\n  return {\n    type: actionTypes.BOOK_ERROR,\n    error: error\n  };\n};\nexport const getCategories = data => {\n  return dispatch => {\n    //dispatch(isLoading());\n    Axios().post('users/getCategoryList', data).then(response => {\n      if (response.data.status === '1') {\n        dispatch(Success({\n          type: actionTypes.GETCATEGORY,\n          payload: response.data.data\n        })); //get subcategories\n\n        const dataTosend = {\n          user_id: data.user_id,\n          category_id: response.data.default_cat\n        };\n        dispatch(getSubCategories(dataTosend));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const getSubCategories = data => {\n  return dispatch => {\n    // dispatch(isLoading());\n    Axios().post('users/getCategoryList', data).then(response => {\n      if (response.data.status === '1') {\n        dispatch(Success({\n          type: actionTypes.SUBCATEGORY,\n          payload: response.data.data\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const getGroups = data => {\n  return dispatch => {\n    //dispatch(isLoading());\n    Axios().post('users/getGroupList', data).then(response => {\n      console.log('getGroupsgetGroups', response.data);\n\n      if (response.data.status === '1') {\n        dispatch(Success({\n          type: actionTypes.BOOK_GROUPLIST,\n          payload: response.data.data\n        }));\n      } else {// dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const getBusinessUsers = data => {\n  return dispatch => {\n    // dispatch(isLoading());\n    Axios().post('users/businessUserList', data).then(response => {\n      if (response.data.status === '1') {\n        dispatch(Success({\n          type: actionTypes.BOOK_BUSINESSUSERS,\n          payload: response.data.data\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const getCategory = data => {\n  return dispatch => {\n    // dispatch(isLoading());\n    Axios().post('user/bookingCategories', data).then(response => {\n      if (response.data.status === '1') {\n        dispatch(Success({\n          type: actionTypes.BOOK_CATEGORY,\n          payload: response.data\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const updateEventbook = (data, unmatch, history, sendAttachment, deleteAttachment) => {\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const {\n        user_id,\n        business_code,\n        first_name,\n        last_name\n      } = JSON.parse(localStorage.getItem('userData'));\n      const dataTosend = { ...data\n      };\n      const qiscuss = '';\n      const response = await Axios().post('bookevent/updateevent', dataTosend);\n\n      if (response.data.status == '1') {\n        const event_id = response.data.data.id;\n        console.log('response.data.data', response.data);\n        let sendFiles = [];\n\n        if (sendAttachment) {\n          var img = sendAttachment;\n          var len = img.length;\n\n          for (var i = 0; i < len; i++) {\n            if (img[i].type == 'application/pdf') {\n              var image = img[i].base64.split(';base64,');\n              var image = image[1];\n              var extn = img[i].name.split('.');\n            } else if (img[i].type == '') {\n              var image = img[i].base64.split(';base64,');\n              var image = image[1];\n              var extn = img[i].name.split('.');\n            } else {\n              var image = img[i].base64.replace(/^data:image\\/\\w+;base64,/, '');\n              var extn = img[i].name.split('.');\n            }\n\n            const att_data = {\n              attachment: image,\n              extn: extn[1]\n            };\n            sendFiles.push(att_data); //await Axios().post('users/rymindrDesktopAttachment', att_data);\n          }\n        }\n\n        if (unmatch) {// const sendInvitation = await Axios().post('users/inviteForRymindr', inviteTorymidr);\n        }\n\n        const dataToSend = {\n          deleteAttachment: deleteAttachment,\n          event_id: event_id,\n          user_id: user_id,\n          sendAttachment: sendFiles\n        };\n        console.log('dataToSend--', dataToSend);\n        await Axios().post('users/event-attachment', dataToSend);\n        dispatch(Success({\n          type: actionTypes.BOOK_UPDATERYMINDR,\n          payload: response.data.data\n        }));\n        dispatch(SuccessEvent(response.data.message));\n        history.push('/bookings');\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\nexport const createEventbook = (data, unmatch, history, sendAttachment) => {\n  return async dispatch => {\n    try {\n      console.log('createEventbook');\n      dispatch(isLoading());\n      const {\n        user_id,\n        business_code,\n        first_name,\n        last_name\n      } = JSON.parse(localStorage.getItem('userData'));\n      const dataTosend = { ...data\n      };\n      const qiscuss = '';\n      const response = await Axios().post('bookevent/create', dataTosend);\n\n      if (response.data.status == 1) {\n        const rymindr_id = response.data.data.id;\n\n        if (unmatch) {// const sendInvitation = await Axios().post('users/inviteForRymindr', inviteTorymidr);\n        }\n\n        dispatch(Success({\n          type: actionTypes.BOOK_CREATERYMINDR,\n          payload: response.data.data\n        }));\n        dispatch(SuccessEvent(response.data.message));\n        history.push('/bookings');\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n/*\nexport const inviteAndAddMobile = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n\n      const response = await Axios().post('users/inviteAndAddMobile', data);\n\n      if (response.data.status === '1') {\n        dispatch(\n          Success({\n            type: actionTypes.INVITEANDADDMOBILE,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const getUpcommingRymindrs = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n\n      const response = await Axios().post('users/getUpcommingRymindr', data);\n\n      if (response.data.status === '1') {\n        const record = response.data.data;\n        let upcomingry = [];\n        record.forEach((item) => {\n          upcomingry.push(item.remindr);\n        });\n\n        var merged = [].concat.apply([], upcomingry);\n\n        console.log('upcoming', upcomingry, merged);\n        if (record.length > 0) {\n          const reqData = {\n            user_id: data.user_id,\n            rymindr_id: merged[0].rymindr_id,\n          };\n          await dispatch(getRymidrDetails(reqData));\n        } else {\n          dispatch(\n            Success({\n              type: actionTypes.GETRYMINDRDETAILS,\n              payload: null,\n            })\n          );\n        }\n\n        dispatch(\n          Success({\n            type: actionTypes.GETUPCOMMINGRYMINDR,\n            payload: { record, upcomingList: merged.length > 0 ? merged : [] },\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const getRymidrDetails = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n\n      const response = await Axios().post('users/getRymindrDetail', data);\n\n      if (response.data.status === '1') {\n        dispatch(\n          Success({\n            type: actionTypes.GETRYMINDRDETAILS,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const delete_rymindr = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n      const qiscus_id = data.qiscus_id;\n      delete data.qiscus_id;\n\n      const response = await Axios().post('users/deleteRymindr', data);\n      if (response.data.status === '1') {\n        // const qicsusconfig = { headers: { QISCUS_SDK_SECRET: '434e6d04f43c59a9d96666bddcb5c3e0' } };\n        // let dataToSendQicusRemove = {\n        //   emails: data.user_id.split(','),\n        //   room_id: qiscus_id,\n        // };\n\n        // await axios.post(\n        //   'https://rymindr-fmgafzuj8sxps.qiscus.com/api/v2/rest/remove_room_participants',\n        //   dataToSendQicusRemove,\n        //   qicsusconfig\n        // );\n        await dispatch(getUpcommingRymindrs({ user_id: data.user_id }));\n\n        dispatch(\n          Success({\n            type: actionTypes.DELETERYMINDR,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const rymindr_action = (data) => {\n  return async (dispatch) => {\n    try {\n      const dataTosend = {\n        rymindr_id: '18105',\n        status: 2,\n        user_id: '2892',\n        friend_id: '2891',\n        user_name: 'Demolive1 ',\n        recr_rymindr_id: '18103',\n      };\n\n      dispatch(isLoading());\n\n      const response = await Axios().post('users/acceptRequestRymindr', data);\n      if (response.data.status === '1') {\n        dispatch(\n          Success({\n            type: actionTypes.RYMINDRACTION,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n*/","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/store/actions/bookevent.js"],"names":["actionTypes","Axios","axios","SuccessEvent","success","type","BOOK_SUCESS","isLoading","BOOK_ISLOADING","Success","response","Fail","error","BOOK_ERROR","getCategories","data","dispatch","post","then","status","GETCATEGORY","payload","dataTosend","user_id","category_id","default_cat","getSubCategories","message","catch","err","SUBCATEGORY","getGroups","console","log","BOOK_GROUPLIST","getBusinessUsers","BOOK_BUSINESSUSERS","getCategory","BOOK_CATEGORY","updateEventbook","unmatch","history","sendAttachment","deleteAttachment","business_code","first_name","last_name","JSON","parse","localStorage","getItem","qiscuss","event_id","id","sendFiles","img","len","length","i","image","base64","split","extn","name","replace","att_data","attachment","push","dataToSend","BOOK_UPDATERYMINDR","createEventbook","rymindr_id","BOOK_CREATERYMINDR"],"mappings":"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":["import * as actionTypes from './actionTypes';\nimport Axios from '../../helper/axios';\nimport axios from 'axios';\n\n//BOOKING ACTIONS\n//export const BOOK_ISLOADING = 'BOOK_ISLOADING';\n//export const BOOK_ERROR = 'BOOK_ERROR';\n//export const BOOK_GROUPLIST = 'BOOK_GROUPLIST';\n//export const BOOK_BUSINESSUSERS = 'BOOK_BUSINESSUSERS';\n//export const BOOK_CREATERYMINDR = 'BOOK_CREATERYMINDR';\n//BOOKING ACTIONS\n\nexport const SuccessEvent = (success) => {\n  return {\n    type: actionTypes.BOOK_SUCESS,\n    success: success,\n  };\n};\n\nexport const isLoading = () => {\n  return {\n    type: actionTypes.BOOK_ISLOADING,\n  };\n};\n\nexport const Success = (response) => {\n  return response;\n};\n\nexport const Fail = (error) => {\n  return {\n    type: actionTypes.BOOK_ERROR,\n    error: error,\n  };\n};\n\nexport const getCategories = (data) => {\n  return (dispatch) => {\n    //dispatch(isLoading());\n    Axios()\n      .post('users/getCategoryList', data)\n      .then((response) => {\n        if (response.data.status === '1') {\n          dispatch(\n            Success({\n              type: actionTypes.GETCATEGORY,\n              payload: response.data.data,\n            })\n          );\n          //get subcategories\n          const dataTosend = {\n            user_id: data.user_id,\n            category_id: response.data.default_cat,\n          };\n          dispatch(getSubCategories(dataTosend));\n        } else {\n          dispatch(Fail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        dispatch(Fail(err.message));\n      });\n  };\n};\nexport const getSubCategories = (data) => {\n  return (dispatch) => {\n    // dispatch(isLoading());\n    Axios()\n      .post('users/getCategoryList', data)\n      .then((response) => {\n        if (response.data.status === '1') {\n          dispatch(\n            Success({\n              type: actionTypes.SUBCATEGORY,\n              payload: response.data.data,\n            })\n          );\n        } else {\n          dispatch(Fail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        dispatch(Fail(err.message));\n      });\n  };\n};\n\nexport const getGroups = (data) => {\n  return (dispatch) => {\n    //dispatch(isLoading());\n    Axios()\n      .post('users/getGroupList', data)\n      .then((response) => {\n        console.log('getGroupsgetGroups', response.data);\n        if (response.data.status === '1') {\n          dispatch(\n            Success({\n              type: actionTypes.BOOK_GROUPLIST,\n              payload: response.data.data,\n            })\n          );\n        } else {\n          // dispatch(Fail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        dispatch(Fail(err.message));\n      });\n  };\n};\n\nexport const getBusinessUsers = (data) => {\n  return (dispatch) => {\n    // dispatch(isLoading());\n    Axios()\n      .post('users/businessUserList', data)\n      .then((response) => {\n        if (response.data.status === '1') {\n          dispatch(\n            Success({\n              type: actionTypes.BOOK_BUSINESSUSERS,\n              payload: response.data.data,\n            })\n          );\n        } else {\n          dispatch(Fail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        dispatch(Fail(err.message));\n      });\n  };\n};\n\nexport const getCategory = (data) => {\n  return (dispatch) => {\n    // dispatch(isLoading());\n    Axios()\n      .post('user/bookingCategories', data)\n      .then((response) => {\n        if (response.data.status === '1') {\n          dispatch(\n            Success({\n              type: actionTypes.BOOK_CATEGORY,\n              payload: response.data,\n            })\n          );\n        } else {\n          dispatch(Fail(response.data.message));\n        }\n      })\n      .catch((err) => {\n        dispatch(Fail(err.message));\n      });\n  };\n};\n\nexport const updateEventbook = (data, unmatch, history, sendAttachment, deleteAttachment) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n      const { user_id, business_code, first_name, last_name } = JSON.parse(localStorage.getItem('userData'));\n\n      const dataTosend = { ...data };\n      const qiscuss = '';\n      const response = await Axios().post('bookevent/updateevent', dataTosend);\n\n      if (response.data.status == '1') {\n        const event_id = response.data.data.id;\n        console.log('response.data.data',response.data)\n        let sendFiles = [];\n        if (sendAttachment) {\n          var img = sendAttachment;\n          var len = img.length;\n          for (var i = 0; i < len; i++) {\n            if (img[i].type == 'application/pdf') {\n              var image = img[i].base64.split(';base64,');\n              var image = image[1];\n              var extn = img[i].name.split('.');\n            } else if (img[i].type == '') {\n              var image = img[i].base64.split(';base64,');\n              var image = image[1];\n              var extn = img[i].name.split('.');\n            } else {\n              var image = img[i].base64.replace(/^data:image\\/\\w+;base64,/, '');\n              var extn = img[i].name.split('.');\n            }\n            const att_data = {\n              attachment: image,\n\n              extn: extn[1],\n            };\n            sendFiles.push(att_data);\n            //await Axios().post('users/rymindrDesktopAttachment', att_data);\n          }\n        }\n\n        if (unmatch) {\n          // const sendInvitation = await Axios().post('users/inviteForRymindr', inviteTorymidr);\n        }\n\n        const dataToSend ={\n          deleteAttachment : deleteAttachment,\n          event_id : event_id,\n          user_id : user_id,\n          sendAttachment : sendFiles\n        }\n        console.log('dataToSend--',dataToSend)\n        await Axios().post('users/event-attachment',dataToSend)\n\n        dispatch(\n          Success({\n            type: actionTypes.BOOK_UPDATERYMINDR,\n            payload: response.data.data,\n          })\n        );\n        dispatch(SuccessEvent(response.data.message));\n\n        history.push('/bookings');\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const createEventbook = (data, unmatch, history, sendAttachment) => {\n  return async (dispatch) => {\n    try {\n      console.log('createEventbook');\n      dispatch(isLoading());\n      const { user_id, business_code, first_name, last_name } = JSON.parse(localStorage.getItem('userData'));\n\n      const dataTosend = { ...data };\n      const qiscuss = '';\n      const response = await Axios().post('bookevent/create', dataTosend);\n\n      if (response.data.status == 1) {\n        const rymindr_id = response.data.data.id;\n\n        if (unmatch) {\n          // const sendInvitation = await Axios().post('users/inviteForRymindr', inviteTorymidr);\n        }\n\n        dispatch(\n          Success({\n            type: actionTypes.BOOK_CREATERYMINDR,\n            payload: response.data.data,\n          })\n        );\n        dispatch(SuccessEvent(response.data.message));\n\n        history.push('/bookings');\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n/*\nexport const inviteAndAddMobile = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n\n      const response = await Axios().post('users/inviteAndAddMobile', data);\n\n      if (response.data.status === '1') {\n        dispatch(\n          Success({\n            type: actionTypes.INVITEANDADDMOBILE,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const getUpcommingRymindrs = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n\n      const response = await Axios().post('users/getUpcommingRymindr', data);\n\n      if (response.data.status === '1') {\n        const record = response.data.data;\n        let upcomingry = [];\n        record.forEach((item) => {\n          upcomingry.push(item.remindr);\n        });\n\n        var merged = [].concat.apply([], upcomingry);\n\n        console.log('upcoming', upcomingry, merged);\n        if (record.length > 0) {\n          const reqData = {\n            user_id: data.user_id,\n            rymindr_id: merged[0].rymindr_id,\n          };\n          await dispatch(getRymidrDetails(reqData));\n        } else {\n          dispatch(\n            Success({\n              type: actionTypes.GETRYMINDRDETAILS,\n              payload: null,\n            })\n          );\n        }\n\n        dispatch(\n          Success({\n            type: actionTypes.GETUPCOMMINGRYMINDR,\n            payload: { record, upcomingList: merged.length > 0 ? merged : [] },\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const getRymidrDetails = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n\n      const response = await Axios().post('users/getRymindrDetail', data);\n\n      if (response.data.status === '1') {\n        dispatch(\n          Success({\n            type: actionTypes.GETRYMINDRDETAILS,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const delete_rymindr = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n      const qiscus_id = data.qiscus_id;\n      delete data.qiscus_id;\n\n      const response = await Axios().post('users/deleteRymindr', data);\n      if (response.data.status === '1') {\n        // const qicsusconfig = { headers: { QISCUS_SDK_SECRET: '434e6d04f43c59a9d96666bddcb5c3e0' } };\n        // let dataToSendQicusRemove = {\n        //   emails: data.user_id.split(','),\n        //   room_id: qiscus_id,\n        // };\n\n        // await axios.post(\n        //   'https://rymindr-fmgafzuj8sxps.qiscus.com/api/v2/rest/remove_room_participants',\n        //   dataToSendQicusRemove,\n        //   qicsusconfig\n        // );\n        await dispatch(getUpcommingRymindrs({ user_id: data.user_id }));\n\n        dispatch(\n          Success({\n            type: actionTypes.DELETERYMINDR,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n\nexport const rymindr_action = (data) => {\n  return async (dispatch) => {\n    try {\n      const dataTosend = {\n        rymindr_id: '18105',\n        status: 2,\n        user_id: '2892',\n        friend_id: '2891',\n        user_name: 'Demolive1 ',\n        recr_rymindr_id: '18103',\n      };\n\n      dispatch(isLoading());\n\n      const response = await Axios().post('users/acceptRequestRymindr', data);\n      if (response.data.status === '1') {\n        dispatch(\n          Success({\n            type: actionTypes.RYMINDRACTION,\n            payload: response.data.data,\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n*/\n"]},"metadata":{},"sourceType":"module"}