{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport Axios from '../../helper/axios';\nimport firebase from 'firebase';\nimport { SuccessMessage } from './contactActions';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START2\n  };\n};\nexport const authSuccess = (token, user) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    user\n  };\n};\nexport const isLoading = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const Success = response => {\n  return response;\n};\nexport const Fail = error => {\n  return {\n    type: actionTypes.AUTHERROR,\n    error: error\n  };\n};\nexport const Fail2 = error => {\n  return {\n    type: actionTypes.AUTHERROR,\n    error2: error\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const email_verify = (data, history) => {\n  return dispatch => {\n    dispatch(isLoading());\n    Axios().post('auth/verify_email', data).then(response => {\n      // console.log(response)\n      if (response.data.status === \"1\") {\n        dispatch(Success({\n          type: actionTypes.EMAIL_VERIFY,\n          payload: response.data\n        }));\n        history.push('/login');\n      } else {\n        // console.log(response.data.message)\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const deactivate_account = data => {\n  let resp = {\n    status: false\n  };\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const response = await Axios().post('auth/deactivate_account', data);\n\n      if (response.data.status === '1') {\n        await localStorage.clear();\n        dispatch(SuccessMessage(response.data.message));\n        resp.status = true;\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n\n    return resp;\n  };\n};\nexport const auth = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    let device_token = localStorage.getItem('device_token');\n    var sessionToken = sessionStorage.getItem('token_de');\n    console.warn('sessionToken123', sessionToken);\n    const authData = {\n      email: email,\n      password: password,\n      device_token: sessionToken,\n      platform: 'Desktop'\n    };\n    Axios().post('auth/login', authData).then(response => {\n      console.warn('response123', response);\n\n      if (response.data.status === '1') {\n        // Firebase login\n        firebase.auth().signInWithEmailAndPassword(authData.email, authData.password);\n        const {\n          user_id,\n          business_code,\n          country_name,\n          device_token,\n          notification_status,\n          notification_chat_status,\n          notification_post_status,\n          notification_msg_center_status,\n          profile_image,\n          first_name,\n          last_name,\n          sc_bessi_name,\n          address,\n          post_code,\n          email,\n          mobile_no,\n          account_type,\n          first_login,\n          default_category\n        } = response.data.data;\n        const userData = {\n          user_id,\n          business_code,\n          country_name,\n          device_token,\n          notification_status,\n          notification_chat_status,\n          notification_post_status,\n          notification_msg_center_status,\n          profile_image,\n          first_name,\n          last_name,\n          sc_bessi_name,\n          address,\n          post_code,\n          email,\n          mobile_no,\n          account_type,\n          first_login,\n          default_category\n        };\n        localStorage.setItem('token', response.data.data.token);\n        localStorage.setItem('userData', JSON.stringify(userData));\n        dispatch(authSuccess(response.data.idToken, response.data.data));\n      } else {\n        dispatch(authFail(response.data.message));\n        dispatch(authFail(null));\n      }\n    }).catch(err => {\n      dispatch(authFail(err.message));\n    });\n  };\n};\nexport const register = (data, history) => {\n  return dispatch => {\n    dispatch(isLoading());\n    console.log(\"sigggg\");\n    Axios().post('auth/websignup', data).then(response => {\n      if (response.data.status === '1') {\n        // Firebase register\n        firebase.auth().createUserWithEmailAndPassword(data.email, data.password);\n        dispatch(Success({\n          type: actionTypes.SIGNUP,\n          payload: response.data.data\n        })); // history.push('/authenticate/'+data.email+'/'+1234);\n\n        console.log(\"register\");\n        history.push('/mail-sent/' + data.email + \"/1\"); // history.push('/login');\n      } else {\n        // console.log(response.data.message)\n        dispatch(Fail2(response.data.message)); //dispatch(Fail2(null));\n      }\n    }).catch(err => {\n      dispatch(Fail2(err.message)); //dispatch(Fail2(null));\n    });\n  };\n};\nexport const requestOtp = (data, history) => {\n  return dispatch => {\n    dispatch(isLoading());\n    Axios().post('users/requestOneTimePassword', data).then(response => {\n      // console.log(response)\n      if (response.data.status === \"1\") {\n        dispatch(Success({\n          type: actionTypes.EMAIL_VERIFY,\n          payload: response.data\n        })); // debugger\n        // history.push('/login');\n\n        console.log(\"testettttttt\");\n        history.push('/mail-sent/' + data.email + \"/0\"); // history.push('/reset-password/'+data.email);\n      } else {\n        // console.log(response.data.message)\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};\nexport const reset_password = (data, history) => {\n  return dispatch => {\n    dispatch(isLoading());\n    Axios().post('users/reset_password', data).then(response => {\n      // console.log(response)\n      if (response.data.status === \"1\") {\n        dispatch(Success({\n          type: actionTypes.EMAIL_VERIFY,\n          payload: response.data\n        }));\n        history.push('/login');\n      } else {\n        // console.log(response.data.message)\n        dispatch(Fail(response.data.message));\n      }\n    }).catch(err => {\n      dispatch(Fail(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/store/actions/auth.js"],"names":["actionTypes","Axios","firebase","SuccessMessage","authStart","type","AUTH_START2","authSuccess","token","user","AUTH_SUCCESS","idToken","isLoading","AUTH_START","Success","response","Fail","error","AUTHERROR","Fail2","error2","authFail","AUTH_FAIL","email_verify","data","history","dispatch","post","then","status","EMAIL_VERIFY","payload","push","message","catch","err","deactivate_account","resp","localStorage","clear","auth","email","password","device_token","getItem","sessionToken","sessionStorage","console","warn","authData","platform","signInWithEmailAndPassword","user_id","business_code","country_name","notification_status","notification_chat_status","notification_post_status","notification_msg_center_status","profile_image","first_name","last_name","sc_bessi_name","address","post_code","mobile_no","account_type","first_login","default_category","userData","setItem","JSON","stringify","register","log","createUserWithEmailAndPassword","SIGNUP","requestOtp","reset_password"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport Axios from '../../helper/axios';\nimport firebase from 'firebase';\nimport { SuccessMessage } from './contactActions';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START2,\n    };\n};\n\nexport const authSuccess = (token, user) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        user,\n    };\n};\n\nexport const isLoading = () => {\n    return {\n        type: actionTypes.AUTH_START,\n    };\n};\n\nexport const Success = (response) => {\n    return response;\n};\n\nexport const Fail = (error) => {\n    return {\n        type: actionTypes.AUTHERROR,\n        error: error,\n    };\n};\n\nexport const Fail2 = (error) => {\n    return {\n        type: actionTypes.AUTHERROR,\n        error2: error,\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error,\n    };\n};\nexport const email_verify = (data, history) => {\n    return (dispatch) => {\n        dispatch(isLoading());\n        Axios().post('auth/verify_email', data)\n            .then((response) => {\n                // console.log(response)\n\n                if (response.data.status === \"1\") {\n                    dispatch(\n                        Success({\n                            type: actionTypes.EMAIL_VERIFY,\n                            payload: response.data,\n                        })\n                    );\n\n                    history.push('/login');\n\n                } else {\n                    // console.log(response.data.message)\n                    dispatch(Fail(response.data.message));\n                }\n            })\n            .catch((err) => {\n                dispatch(Fail(err.message));\n            });\n    };\n};\n\nexport const deactivate_account = (data) => {\n\n    let resp = {\n        status: false\n    };\n\n    return async(dispatch) => {\n\n        try {\n            dispatch(isLoading());\n            const response = await Axios().post('auth/deactivate_account', data);\n            if (response.data.status === '1') {\n                await localStorage.clear();\n                dispatch(SuccessMessage(response.data.message));\n                resp.status = true;\n\n            } else {\n                dispatch(Fail(response.data.message));\n            }\n        } catch (error) {\n            dispatch(Fail(error.message));\n        }\n\n        return resp;\n\n    };\n};\n\n\nexport const auth = (email, password) => {\n    return (dispatch) => {\n        dispatch(authStart());\n\n        let device_token = localStorage.getItem('device_token');\n\n        var sessionToken = sessionStorage.getItem('token_de');\n\n        console.warn('sessionToken123', sessionToken)\n\n        const authData = {\n            email: email,\n            password: password,\n            device_token: sessionToken,\n            platform: 'Desktop',\n        };\n\n\n\n\n        Axios().post('auth/login', authData)\n            .then((response) => {\n                console.warn('response123', response);\n                if (response.data.status === '1') {\n                    // Firebase login\n                    firebase.auth().signInWithEmailAndPassword(authData.email, authData.password);\n\n                    const {\n                        user_id,\n                        business_code,\n                        country_name,\n                        device_token,\n                        notification_status,\n                        notification_chat_status,\n                        notification_post_status,\n                        notification_msg_center_status,\n                        profile_image,\n                        first_name,\n                        last_name,\n                        sc_bessi_name,\n                        address,\n                        post_code,\n                        email,\n                        mobile_no,\n                        account_type,\n                        first_login,\n                        default_category\n                    } = response.data.data;\n\n                    const userData = {\n                        user_id,\n                        business_code,\n                        country_name,\n                        device_token,\n                        notification_status,\n                        notification_chat_status,\n                        notification_post_status,\n                        notification_msg_center_status,\n                        profile_image,\n                        first_name,\n                        last_name,\n                        sc_bessi_name,\n                        address,\n                        post_code,\n                        email,\n                        mobile_no,\n                        account_type,\n                        first_login,\n                        default_category\n                    };\n\n                    localStorage.setItem('token', response.data.data.token);\n                    localStorage.setItem('userData', JSON.stringify(userData));\n                    dispatch(authSuccess(response.data.idToken, response.data.data));\n                } else {\n                    dispatch(authFail(response.data.message));\n                    dispatch(authFail(null));\n                }\n            })\n            .catch((err) => {\n                dispatch(authFail(err.message));\n            });\n    };\n};\n\nexport const register = (data, history) => {\n    return (dispatch) => {\n        dispatch(isLoading());\n        console.log(\"sigggg\");\n        Axios().post('auth/websignup', data)\n            .then((response) => {\n                if (response.data.status === '1') {\n                    // Firebase register\n                    firebase.auth().createUserWithEmailAndPassword(data.email, data.password);\n\n                    dispatch(\n                        Success({\n                            type: actionTypes.SIGNUP,\n                            payload: response.data.data,\n                        })\n                    );\n                    // history.push('/authenticate/'+data.email+'/'+1234);\n                    console.log(\"register\");\n                    history.push('/mail-sent/' + data.email + \"/1\")\n                        // history.push('/login');\n                } else {\n                    // console.log(response.data.message)\n                    dispatch(Fail2(response.data.message));\n                    //dispatch(Fail2(null));\n                }\n            })\n            .catch((err) => {\n                dispatch(Fail2(err.message));\n                //dispatch(Fail2(null));\n            });\n\n    };\n};\nexport const requestOtp = (data, history) => {\n    return (dispatch) => {\n\n        dispatch(isLoading());\n\n\n        Axios().post('users/requestOneTimePassword', data)\n            .then((response) => {\n                // console.log(response)\n\n                if (response.data.status === \"1\") {\n                    dispatch(\n                        Success({\n                            type: actionTypes.EMAIL_VERIFY,\n                            payload: response.data,\n                        })\n                    );\n                    // debugger\n                    // history.push('/login');\n                    console.log(\"testettttttt\")\n                    history.push('/mail-sent/' + data.email + \"/0\")\n                        // history.push('/reset-password/'+data.email);\n                } else {\n                    // console.log(response.data.message)\n                    dispatch(Fail(response.data.message));\n                }\n            })\n            .catch((err) => {\n                dispatch(Fail(err.message));\n            });\n    };\n};\n\nexport const reset_password = (data, history) => {\n    return (dispatch) => {\n\n        dispatch(isLoading());\n        Axios().post('users/reset_password', data)\n            .then((response) => {\n                // console.log(response)\n\n                if (response.data.status === \"1\") {\n                    dispatch(\n                        Success({\n                            type: actionTypes.EMAIL_VERIFY,\n                            payload: response.data,\n                        })\n                    );\n\n                    history.push('/login');\n\n                } else {\n                    // console.log(response.data.message)\n                    dispatch(Fail(response.data.message));\n                }\n            })\n            .catch((err) => {\n                dispatch(Fail(err.message));\n            });\n    };\n};"]},"metadata":{},"sourceType":"module"}