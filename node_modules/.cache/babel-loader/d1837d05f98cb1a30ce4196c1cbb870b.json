{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/HistoryRymindrs/UpcomingRymindr/Modal/RymindrModalDelete.js\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme, styled } from '@material-ui/core/styles';\nconst ButtonStyled = styled(Button)(({\n  theme\n}) => ({\n  color: theme.palette.error.main\n}));\n\nconst DeleteRymindr = ({\n  handleClose,\n  open,\n  deleteRymindr,\n  type\n}) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \"Are you sure you want to delete this \", type, \" ?\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonStyled, {\n    autoFocus: true,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: deleteRymindr,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Yes\"))));\n};\n\nDeleteRymindr.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  deleteRymindr: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\nexport default DeleteRymindr;","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/HistoryRymindrs/UpcomingRymindr/Modal/RymindrModalDelete.js"],"names":["Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","PropTypes","React","useMediaQuery","useTheme","styled","ButtonStyled","theme","color","palette","error","main","DeleteRymindr","handleClose","open","deleteRymindr","type","fullScreen","breakpoints","down","propTypes","func","isRequired","bool"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,aAAzB,EAAwCC,aAAxC,EAAuDC,iBAAvD,EAA0EC,WAA1E,QAA6F,mBAA7F;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,0BAAjC;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACV,MAAD,CAAN,CAAe,CAAC;AAAEY,EAAAA;AAAF,CAAD,MAAgB;AAClDC,EAAAA,KAAK,EAAED,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoBC;AADuB,CAAhB,CAAf,CAArB;;AAIA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA,aAArB;AAAoCC,EAAAA;AAApC,CAAD,KAA+C;AACnE,QAAMT,KAAK,GAAGH,QAAQ,EAAtB;AACA,QAAMa,UAAU,GAAGd,aAAa,CAACI,KAAK,CAACW,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAhC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAEF,UAApB;AAAgC,IAAA,IAAI,EAAEH,IAAtC;AAA4C,IAAA,OAAO,EAAED,WAArD;AAAkE,uBAAgB,yBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAyDG,IAAzD,OADF,CAFF,eAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,SAAS,MAAvB;AAAwB,IAAA,OAAO,EAAEH,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,aAAjB;AAAgC,IAAA,KAAK,EAAC,SAAtC;AAAgD,IAAA,SAAS,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,CALF,CADF,CADF;AAkBD,CAtBD;;AAwBAH,aAAa,CAACQ,SAAd,GAA0B;AACxBP,EAAAA,WAAW,EAAEZ,SAAS,CAACoB,IAAV,CAAeC,UADJ;AAExBP,EAAAA,aAAa,EAAEd,SAAS,CAACoB,IAAV,CAAeC,UAFN;AAGxBR,EAAAA,IAAI,EAAEb,SAAS,CAACsB,IAAV,CAAeD;AAHG,CAA1B;AAMA,eAAeV,aAAf","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { useTheme, styled } from '@material-ui/core/styles'\n\nconst ButtonStyled = styled(Button)(({ theme }) => ({\n  color: theme.palette.error.main\n}))\n\nconst DeleteRymindr = ({ handleClose, open, deleteRymindr ,type}) => {\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\n\n  return (\n    <div>\n      <Dialog fullScreen={fullScreen} open={open} onClose={handleClose} aria-labelledby='responsive-dialog-title'>\n        <DialogTitle id='responsive-dialog-title' />\n        <DialogContent>\n          <DialogContentText>Are you sure you want to delete this {type} ?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <ButtonStyled autoFocus onClick={handleClose}>\n            No\n          </ButtonStyled>\n          <Button onClick={deleteRymindr} color='primary' autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n};\n\nDeleteRymindr.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  deleteRymindr: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n}\n\nexport default DeleteRymindr\n"]},"metadata":{},"sourceType":"module"}