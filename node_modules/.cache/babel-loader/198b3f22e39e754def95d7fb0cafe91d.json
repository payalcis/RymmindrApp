{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport Axios from '../../helper/axios';\nexport const isLoading = () => {\n  return {\n    type: actionTypes.ISLOADING\n  };\n};\nexport const Success = response => {\n  return response;\n};\nexport const Fail = error => {\n  return {\n    type: actionTypes.ERROR,\n    error: error\n  };\n};\nexport const getUpcommingRymindrs = data => {\n  return async dispatch => {\n    try {\n      dispatch(isLoading());\n      const response = await Axios().post('users/getUpcommingRymindr', data);\n\n      if (response.data.status === '1') {\n        const record = response.data.data;\n        let upcomingry = [];\n        record.forEach(item => {\n          upcomingry.push(item.remindr);\n        });\n        var merged = [].concat.apply([], upcomingry);\n        const TodayCount = record.length > 0 ? record[0].remindr.length : 0;\n        dispatch(Success({\n          type: actionTypes.GETUPCOMMINGRYMINDRDASHBOARD,\n          payload: {\n            list: merged.length > 0 ? merged : [],\n            TodayCount: TodayCount\n          }\n        }));\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/store/actions/dashboardActions.js"],"names":["actionTypes","Axios","isLoading","type","ISLOADING","Success","response","Fail","error","ERROR","getUpcommingRymindrs","data","dispatch","post","status","record","upcomingry","forEach","item","push","remindr","merged","concat","apply","TodayCount","length","GETUPCOMMINGRYMINDRDASHBOARD","payload","list","message"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI;AADb,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,OAAO,GAAIC,QAAD,IAAc;AACnC,SAAOA,QAAP;AACD,CAFM;AAIP,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACLL,IAAAA,IAAI,EAAEH,WAAW,CAACS,KADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAME,oBAAoB,GAAIC,IAAD,IAAU;AAC5C,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACFA,MAAAA,QAAQ,CAACV,SAAS,EAAV,CAAR;AAEA,YAAMI,QAAQ,GAAG,MAAML,KAAK,GAAGY,IAAR,CAAa,2BAAb,EAA0CF,IAA1C,CAAvB;;AAEA,UAAIL,QAAQ,CAACK,IAAT,CAAcG,MAAd,KAAyB,GAA7B,EAAkC;AAChC,cAAMC,MAAM,GAAGT,QAAQ,CAACK,IAAT,CAAcA,IAA7B;AAEA,YAAIK,UAAU,GAAG,EAAjB;AACAD,QAAAA,MAAM,CAACE,OAAP,CAAgBC,IAAD,IAAU;AACvBF,UAAAA,UAAU,CAACG,IAAX,CAAgBD,IAAI,CAACE,OAArB;AACD,SAFD;AAIA,YAAIC,MAAM,GAAG,GAAGC,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBP,UAApB,CAAb;AACA,cAAMQ,UAAU,GAAGT,MAAM,CAACU,MAAP,GAAgB,CAAhB,GAAmBV,MAAM,CAAC,CAAD,CAAN,CAAUK,OAAV,CAAkBK,MAArC,GAA4C,CAA/D;AAEAb,QAAAA,QAAQ,CACNP,OAAO,CAAC;AACNF,UAAAA,IAAI,EAAEH,WAAW,CAAC0B,4BADZ;AAENC,UAAAA,OAAO,EAAE;AAAEC,YAAAA,IAAI,EAAEP,MAAM,CAACI,MAAP,GAAgB,CAAhB,GAAoBJ,MAApB,GAA6B,EAArC;AAAyCG,YAAAA,UAAU,EAAEA;AAArD;AAFH,SAAD,CADD,CAAR;AAMD,OAjBD,MAiBO;AACLZ,QAAAA,QAAQ,CAACL,IAAI,CAACD,QAAQ,CAACK,IAAT,CAAckB,OAAf,CAAL,CAAR;AACD;AACF,KAzBD,CAyBE,OAAOrB,KAAP,EAAc;AACdI,MAAAA,QAAQ,CAACL,IAAI,CAACC,KAAK,CAACqB,OAAP,CAAL,CAAR;AACD;AACF,GA7BD;AA8BD,CA/BM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport Axios from '../../helper/axios';\n\nexport const isLoading = () => {\n  return {\n    type: actionTypes.ISLOADING,\n  };\n};\n\nexport const Success = (response) => {\n  return response;\n};\n\nexport const Fail = (error) => {\n  return {\n    type: actionTypes.ERROR,\n    error: error,\n  };\n};\n\nexport const getUpcommingRymindrs = (data) => {\n  return async (dispatch) => {\n    try {\n      dispatch(isLoading());\n\n      const response = await Axios().post('users/getUpcommingRymindr', data);\n\n      if (response.data.status === '1') {\n        const record = response.data.data;\n\n        let upcomingry = [];\n        record.forEach((item) => {\n          upcomingry.push(item.remindr);\n        });\n\n        var merged = [].concat.apply([], upcomingry);\n        const TodayCount = record.length > 0 ?record[0].remindr.length:0;\n\n        dispatch(\n          Success({\n            type: actionTypes.GETUPCOMMINGRYMINDRDASHBOARD,\n            payload: { list: merged.length > 0 ? merged : [], TodayCount: TodayCount },\n          })\n        );\n      } else {\n        dispatch(Fail(response.data.message));\n      }\n    } catch (error) {\n      dispatch(Fail(error.message));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}