{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/ResetPassword/ResetPassword.js\";\nimport * as actions from '../../store/actions/index';\nimport { Box, Button, FormControl, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, FormHelperText, Paper, TextField, Typography } from '@material-ui/core';\nimport { Link, Redirect, useParams, useHistory } from 'react-router-dom';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport CircularSpinner from '../../component/CircularSpinner/index';\nimport PropTypes from 'prop-types';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { connect } from 'react-redux';\nimport { styled } from '@material-ui/core/styles';\nimport { withSnackbar } from 'notistack';\nimport { reset_password } from '../../store/actions/auth';\nimport generator from \"generate-password\";\nconst GridStyled = styled(Grid)({\n  height: '100vh'\n});\nconst PaperStyled = styled(Paper)({\n  width: 377,\n  textAlign: 'center',\n  padding: 30\n});\nconst TypoStyled = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 20,\n  marginBottom: 30,\n  fontWeight: 'bold'\n}));\nconst LinkStyled = styled(Link)(({\n  theme\n}) => ({\n  color: theme.palette.primary.main,\n  textDecoration: 'none'\n}));\nconst FormFields = {\n  cpassword: '',\n  password: ''\n};\n\nconst ResetPassword = props => {\n  const {\n    enqueueSnackbar,\n    error\n  } = props;\n  useEffect(() => {\n    error && enqueueSnackbar(error, {\n      variant: 'error'\n    });\n  }, [error]);\n  useMemo(() => {\n    error && enqueueSnackbar(error, {\n      variant: 'error'\n    });\n  }, [error]);\n  const [values, setValues] = useState({\n    cpassword: '',\n    password: '',\n    showPassword1: false,\n    showPassword2: false\n  });\n  const [formvalues, setFormvalues] = useState(FormFields);\n  const [formvalidation, setFormvalidation] = useState(FormFields);\n  const {\n    getemail\n  } = useParams();\n\n  const generatePassword = () => {\n    const pwd = generator.generate({\n      length: 12,\n      lowercase: true,\n      uppercase: true,\n      numbers: true,\n      symbols: false\n    });\n    const FormValue = { ...formvalues\n    };\n    FormValue.password = pwd;\n    FormValue.cpassword = pwd;\n    setFormvalues(FormValue); // console.log('formValue-',formValue)\n  };\n\n  const history = useHistory();\n\n  const handleChange = e => {\n    const form = { ...formvalues\n    };\n    const formerr = { ...formvalidation\n    };\n    form[e.target.name] = e.target.value;\n    formerr[e.target.name] = '';\n    setFormvalues(form);\n    setFormvalidation(FormFields);\n  };\n\n  const handlevalidation = () => {\n    let error = false;\n    const formerr = { ...formvalidation\n    };\n    var upperCaseLetters = /[A-Z]/g;\n    var numbers = /[0-9]/g;\n\n    if (!formvalues.password) {\n      error = true;\n      formerr.password = 'Password is required!';\n      setFormvalidation(formerr);\n    } else if (!formvalues.password.match(upperCaseLetters)) {\n      error = true;\n      formerr.password = 'Password must contain an upper case letter!';\n      setFormvalidation(formerr);\n    } else if (!formvalues.password.match(numbers)) {\n      error = true;\n      formerr.password = 'Password must contain a digit!';\n      setFormvalidation(formerr);\n    } else if (formvalues.password.length < 8) {\n      error = true;\n      formerr.password = 'Password must contain 8 or more characters!';\n      setFormvalidation(formerr);\n    }\n\n    if (!formvalues.cpassword) {\n      error = true;\n      formerr.cpassword = 'Confirm Password is required!';\n      setFormvalidation(formerr);\n    }\n\n    if (!(formvalues.cpassword == formvalues.password)) {\n      error = true;\n      formerr.cpassword = 'Password is required!';\n      setFormvalidation(formerr);\n    }\n\n    return error;\n  };\n\n  const loginSubmitHandler = e => {\n    e.preventDefault();\n    if (handlevalidation()) return false;\n    const data = {\n      email: getemail,\n      password: formvalues.password\n    };\n    props.onAuth(data, history);\n  };\n\n  const handleClickShowPassword1 = () => {\n    setValues({ ...values,\n      showPassword1: !values.showPassword1\n    });\n  };\n\n  const handleClickShowPassword2 = () => {\n    setValues({ ...values,\n      showPassword2: !values.showPassword2\n    });\n  };\n\n  const handleMouseDownPassword1 = event => {\n    event.preventDefault();\n  };\n\n  const handleMouseDownPassword2 = event => {\n    event.preventDefault();\n  };\n\n  const userId = localStorage.getItem('token');\n  let authRedirect = null;\n\n  if (userId) {\n    authRedirect = /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 20\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(GridStyled, {\n    container: true,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: \"loginBg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, authRedirect, /*#__PURE__*/React.createElement(PaperStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: 130\n    },\n    src: require('../../assets/images/login_logo.png'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TypoStyled, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"ResetPassword\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: loginSubmitHandler,\n    validate: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: values.showPassword1 ? 'text' : 'password',\n    fullWidth: true,\n    error: !!formvalidation.password,\n    label: \"Password\",\n    name: \"password\",\n    variant: \"Outlined\",\n    onChange: handleChange,\n    value: formvalues.password,\n    autoComplete: \"current-password\",\n    helpertext: formvalidation.password,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword1,\n      onMouseDown: handleMouseDownPassword1,\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    }, values.showPassword1 ? /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 45\n      }\n    }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 62\n      }\n    }))),\n    labelWidth: 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormHelperText, {\n    style: {\n      color: '#f44336',\n      paddingLeft: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, formvalidation.password), /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    margin: \"normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: values.showPassword2 ? 'text' : 'password',\n    fullWidth: true,\n    error: !!formvalidation.cpassword,\n    label: \"Confirm Password\",\n    name: \"cpassword\",\n    variant: \"Outlined\",\n    onChange: handleChange,\n    value: formvalues.cpassword,\n    autoComplete: \"current-password\",\n    helpertext: formvalidation.cpassword,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword2,\n      onMouseDown: handleMouseDownPassword2,\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 19\n      }\n    }, values.showPassword2 ? /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 45\n      }\n    }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 62\n      }\n    }))),\n    labelWidth: 70,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormHelperText, {\n    style: {\n      color: '#f44336',\n      paddingLeft: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, formvalidation.cpassword), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 7,\n    xs: 12,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flexDirection: \"row\",\n    style: {\n      textAlign: 'left',\n      cursor: 'pointer',\n      color: '\t#484848'\n    },\n    onClick: generatePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, \"Suggest Password\")), /*#__PURE__*/React.createElement(Box, {\n    my: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LinkStyled, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, \"Want to login?\")), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, props.loading && /*#__PURE__*/React.createElement(CircularSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 33\n    }\n  }), \"RESET PASSWORD\"))), /*#__PURE__*/React.createElement(Box, {\n    flexDirection: \"row\",\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, \"Don\\u2019t have an account? \"), /*#__PURE__*/React.createElement(LinkStyled, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 11\n    }\n  }, \"Create Account\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, history) => dispatch(reset_password(email, history))\n  };\n};\n\nResetPassword.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  onAuth: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(ResetPassword));","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/ResetPassword/ResetPassword.js"],"names":["actions","Box","Button","FormControl","Grid","IconButton","InputAdornment","InputLabel","OutlinedInput","FormHelperText","Paper","TextField","Typography","Link","Redirect","useParams","useHistory","React","useEffect","useMemo","useState","CircularSpinner","PropTypes","Visibility","VisibilityOff","connect","styled","withSnackbar","reset_password","generator","GridStyled","height","PaperStyled","width","textAlign","padding","TypoStyled","fontSize","marginTop","marginBottom","fontWeight","LinkStyled","theme","color","palette","primary","main","textDecoration","FormFields","cpassword","password","ResetPassword","props","enqueueSnackbar","error","variant","values","setValues","showPassword1","showPassword2","formvalues","setFormvalues","formvalidation","setFormvalidation","getemail","generatePassword","pwd","generate","length","lowercase","uppercase","numbers","symbols","FormValue","history","handleChange","e","form","formerr","target","name","value","handlevalidation","upperCaseLetters","match","loginSubmitHandler","preventDefault","data","email","onAuth","handleClickShowPassword1","handleClickShowPassword2","handleMouseDownPassword1","event","handleMouseDownPassword2","userId","localStorage","getItem","authRedirect","require","paddingLeft","cursor","loading","mapStateToProps","state","auth","mapDispatchToProps","dispatch","propTypes","func","isRequired","bool","string"],"mappings":"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","sourcesContent":["import * as actions from '../../store/actions/index';\nimport {\n  Box,\n  Button,\n  FormControl,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  FormHelperText,\n  Paper,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { Link, Redirect ,useParams ,useHistory } from 'react-router-dom';\nimport React, { useEffect,useMemo, useState } from 'react';\nimport CircularSpinner from '../../component/CircularSpinner/index';\nimport PropTypes from 'prop-types';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { connect } from 'react-redux';\nimport { styled } from '@material-ui/core/styles';\nimport { withSnackbar } from 'notistack';\nimport { reset_password } from '../../store/actions/auth';\nimport generator from \"generate-password\";\n\nconst GridStyled = styled(Grid)({\n  height: '100vh',\n});\n\nconst PaperStyled = styled(Paper)({\n  width: 377,\n  textAlign: 'center',\n  padding: 30,\n});\n\nconst TypoStyled = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 20,\n  marginBottom: 30,\n  fontWeight: 'bold',\n}));\n\nconst LinkStyled = styled(Link)(({ theme }) => ({\n  color: theme.palette.primary.main,\n  textDecoration: 'none',\n}));\n\nconst FormFields = { cpassword: '', password: '' };\nconst ResetPassword = (props) => {\n  const { enqueueSnackbar, error } = props;\n\n  useEffect(() => {\n    error && enqueueSnackbar(error, { variant: 'error' });\n  }, [error]);\n  useMemo(() => {\n    error && enqueueSnackbar(error, { variant: 'error' });\n  }, [error]);\n  const [values, setValues] = useState({\n    cpassword: '',\n    password: '',\n    showPassword1: false,\n    showPassword2: false,\n  });\n\n  const [formvalues, setFormvalues] = useState(FormFields);\n  const [formvalidation, setFormvalidation] = useState(FormFields);\n  const {getemail} = useParams();\n\n  const generatePassword = () => {\n    const pwd = generator.generate({\n      length: 12,\n      lowercase: true,\n      uppercase: true,\n      numbers: true,\n      symbols: false\n    });\n    const FormValue= {...formvalues}\n    FormValue.password=pwd;\n    FormValue.cpassword=pwd\n    setFormvalues(FormValue)\n    // console.log('formValue-',formValue)\n  }\n\n  const history = useHistory();\n  const handleChange = (e) => {\n    const form = { ...formvalues };\n    const formerr = { ...formvalidation };\n    form[e.target.name] = e.target.value;\n    formerr[e.target.name] = '';\n    setFormvalues(form);\n    setFormvalidation(FormFields);\n  };\n\n  const handlevalidation = () => { \n    let error = false;\n    const formerr = { ...formvalidation };\n    var upperCaseLetters = /[A-Z]/g;\n    var numbers = /[0-9]/g;\n\n    if (!formvalues.password) {\n      error = true;\n      formerr.password = 'Password is required!';\n      setFormvalidation(formerr);\n    }\n    else if (!(formvalues.password).match(upperCaseLetters)) {\n      error = true;\n      formerr.password = 'Password must contain an upper case letter!';\n      setFormvalidation(formerr);\n    }\n    else if (!(formvalues.password).match(numbers)) {\n      error = true;\n      formerr.password = 'Password must contain a digit!';\n      setFormvalidation(formerr);\n    }\n    else if ((formvalues.password).length < 8) {\n      error = true;\n      formerr.password = 'Password must contain 8 or more characters!';\n      setFormvalidation(formerr);\n    }\n\n    if (!formvalues.cpassword) {\n      error = true;\n      formerr.cpassword = 'Confirm Password is required!';\n      setFormvalidation(formerr);\n    }\n    if(!(formvalues.cpassword == formvalues.password)){\n        error = true;\n        formerr.cpassword = 'Password is required!';\n        setFormvalidation(formerr);\n    }\n    return error;\n  };\n\n  const loginSubmitHandler = (e) => {\n    e.preventDefault();\n    if (handlevalidation()) return false;\n\n    const data ={\n        email:getemail,\n        password:formvalues.password,\n    }\n\n    props.onAuth(data, history);\n  };\n\n  const handleClickShowPassword1 = () => {\n    setValues({ ...values, showPassword1: !values.showPassword1 });\n  };\n  const handleClickShowPassword2 = () => {\n    setValues({ ...values, showPassword2: !values.showPassword2 });\n  };\n  const handleMouseDownPassword1 = (event) => {\n    event.preventDefault();\n  };\n  const handleMouseDownPassword2 = (event) => {\n    event.preventDefault();\n  };\n  const userId = localStorage.getItem('token');\n  let authRedirect = null;\n  if (userId) {\n    authRedirect = <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <GridStyled container justify=\"center\" alignItems=\"center\" className=\"loginBg\">\n      {authRedirect}\n      <PaperStyled>\n        <img style={{width: 130}} src={require('../../assets/images/login_logo.png')} />\n        <TypoStyled variant=\"h6\">ResetPassword</TypoStyled>\n\n        <form onSubmit={loginSubmitHandler} validate=\"true\">\n        <FormControl variant=\"outlined\" fullWidth margin=\"normal\">\n            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-password\"\n              type={values.showPassword1 ? 'text' : 'password'}\n              fullWidth\n              error={!!formvalidation.password}\n              label=\"Password\"\n              name=\"password\"\n              variant=\"Outlined\"\n              onChange={handleChange}\n              value={formvalues.password}\n              autoComplete=\"current-password\"\n              helpertext={formvalidation.password}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword1}\n                    onMouseDown={handleMouseDownPassword1}\n                    edge=\"end\"\n                  >\n                    {values.showPassword1 ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={70}\n            />\n          </FormControl>\n          <FormHelperText style={{color: '#f44336', paddingLeft : '1rem'}}>{formvalidation.password}</FormHelperText>\n          <FormControl variant=\"outlined\" fullWidth margin=\"normal\">\n            <InputLabel htmlFor=\"outlined-adornment-password\">Confirm Password</InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-password\"\n              type={values.showPassword2 ? 'text' : 'password'}\n              fullWidth\n              error={!!formvalidation.cpassword}\n              label=\"Confirm Password\"\n              name=\"cpassword\"\n              variant=\"Outlined\"\n              onChange={handleChange}\n              value={formvalues.cpassword}\n              autoComplete=\"current-password\"\n              helpertext={formvalidation.cpassword}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword2}\n                    onMouseDown={handleMouseDownPassword2}\n                    edge=\"end\"\n                  >\n                    {values.showPassword2 ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={70}\n            />\n          </FormControl>\n          <FormHelperText style={{color: '#f44336', paddingLeft : '1rem'}}>{formvalidation.cpassword}</FormHelperText>\n          <Grid item  md={7} xs={12} spacing={5}>\n            <Box flexDirection=\"row\" style={{ textAlign: 'left', cursor: 'pointer',color: '\t#484848',  }} onClick ={generatePassword}>\n             Suggest Password\n            </Box>\n          </Grid>\n          <Box my={4}>\n            <LinkStyled to=\"/login\">Want to login?</LinkStyled>\n          </Box>\n\n          <Box>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\">\n              {props.loading && <CircularSpinner />}\n              RESET PASSWORD\n            </Button>\n          </Box>\n        </form>\n        <Box flexDirection=\"row\" mt={4}>\n          <Typography component=\"span\">Don’t have an account? </Typography>\n          <LinkStyled to=\"/register\">Create Account</LinkStyled>\n        </Box>\n      </PaperStyled>\n    </GridStyled>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (email, history) => dispatch(reset_password(email,history)),\n  };\n};\n\nResetPassword.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  onAuth: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(ResetPassword));\n"]},"metadata":{},"sourceType":"module"}