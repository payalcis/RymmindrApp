{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  loading: false,\n  error: null,\n  comments: []\n};\n\nconst commentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ISLOADING:\n      return { ...state,\n        error: null,\n        loading: true\n      };\n\n    case actionTypes.ERROR:\n      return { ...state,\n        error: action.error,\n        loading: false\n      };\n\n    case actionTypes.GETCOMMENT:\n      return { ...state,\n        comments: action.payload.data.reverse(),\n        error: null,\n        loading: false\n      };\n\n    case actionTypes.ADDCOMMENT:\n      return { ...state,\n        comments: action.payload.data,\n        error: null,\n        loading: false\n      };\n\n    case actionTypes.COMMENTLIKE:\n      return { ...state,\n        error: null,\n        loading: false\n      };\n\n    case actionTypes.DELETECOMMENT:\n      return { ...state,\n        error: null,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default commentReducer;","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/store/reducers/commentReducer.js"],"names":["actionTypes","initialState","loading","error","comments","commentReducer","state","action","type","ISLOADING","ERROR","GETCOMMENT","payload","data","reverse","ADDCOMMENT","COMMENTLIKE","DELETECOMMENT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;;AAMA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAW,CAACS,SAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,KAAK,EAAE,IAFF;AAGLD,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKF,WAAW,CAACU,KAAjB;AACE,aAAO,EACL,GAAGJ,KADE;AAELH,QAAAA,KAAK,EAAEI,MAAM,CAACJ,KAFT;AAGLD,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKF,WAAW,CAACW,UAAjB;AACE,aAAO,EACL,GAAGL,KADE;AAELF,QAAAA,QAAQ,EAAEG,MAAM,CAACK,OAAP,CAAeC,IAAf,CAAoBC,OAApB,EAFL;AAGLX,QAAAA,KAAK,EAAE,IAHF;AAILD,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKF,WAAW,CAACe,UAAjB;AACE,aAAO,EACL,GAAGT,KADE;AAELF,QAAAA,QAAQ,EAAEG,MAAM,CAACK,OAAP,CAAeC,IAFpB;AAGLV,QAAAA,KAAK,EAAE,IAHF;AAILD,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKF,WAAW,CAACgB,WAAjB;AACE,aAAO,EACL,GAAGV,KADE;AAELH,QAAAA,KAAK,EAAE,IAFF;AAGLD,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKF,WAAW,CAACiB,aAAjB;AACE,aAAO,EACL,GAAGX,KADE;AAELH,QAAAA,KAAK,EAAE,IAFF;AAGLD,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF;AACE,aAAOI,KAAP;AAzCJ;AA2CD,CA5CD;;AA6CA,eAAeD,cAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  loading: false,\n  error: null,\n  comments: []\n};\n\nconst commentReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ISLOADING:\n      return {\n        ...state,\n        error: null,\n        loading: true,\n      };\n    case actionTypes.ERROR:\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      };\n    case actionTypes.GETCOMMENT:\n      return {\n        ...state,\n        comments: action.payload.data.reverse(),\n        error: null,\n        loading: false,\n      };\n    case actionTypes.ADDCOMMENT:\n      return {\n        ...state,\n        comments: action.payload.data,\n        error: null,\n        loading: false,\n      };\n    case actionTypes.COMMENTLIKE:\n      return {\n        ...state,\n        error: null,\n        loading: false\n      }\n    case actionTypes.DELETECOMMENT:\n      return {\n        ...state,\n        error: null,\n        loading: false\n      }\n\n    default:\n      return state;\n  }\n};\nexport default commentReducer;\n"]},"metadata":{},"sourceType":"module"}