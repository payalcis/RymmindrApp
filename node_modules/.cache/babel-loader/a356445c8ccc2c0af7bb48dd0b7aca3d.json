{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nconst WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n  woff: WOFF,\n  woff2: WOFF,\n  ttf: 'application/font-truetype',\n  eot: 'application/vnd.ms-fontobject',\n  png: 'image/png',\n  jpg: JPEG,\n  jpeg: JPEG,\n  gif: 'image/gif',\n  tiff: 'image/tiff',\n  svg: 'image/svg+xml'\n};\nexport const uuid = function uuid() {\n  // generate uuid for className of pseudo elements.\n  // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n  let counter = 0; // ref: http://stackoverflow.com/a/6248722/2519373\n\n  const random = () => `0000${(Math.random() * Math.pow(36, 4) << 0).toString(36)}`.slice(-4);\n\n  return () => {\n    counter += 1;\n    return `u${random()}${counter}`;\n  };\n}();\nexport function getExtension(url) {\n  const match = /\\.([^./]*?)$/g.exec(url);\n  return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n  const ext = getExtension(url).toLowerCase();\n  return mimes[ext] || '';\n}\nexport function delay(ms) {\n  return args => new Promise(resolve => {\n    setTimeout(() => {\n      resolve(args);\n    }, ms);\n  });\n}\nexport function isDataUrl(url) {\n  return url.search(/^(data:)/) !== -1;\n}\nexport function toDataURL(content, mimeType) {\n  return `data:${mimeType};base64,${content}`;\n}\nexport function getDataURLContent(dataURL) {\n  return dataURL.split(/,/)[1];\n}\n\nfunction toBlob(canvas) {\n  return new Promise(resolve => {\n    const binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n    const len = binaryString.length;\n    const binaryArray = new Uint8Array(len);\n\n    for (let i = 0; i < len; i += 1) {\n      binaryArray[i] = binaryString.charCodeAt(i);\n    }\n\n    resolve(new Blob([binaryArray], {\n      type: 'image/png'\n    }));\n  });\n}\n\nexport function canvasToBlob(canvas) {\n  if (canvas.toBlob) {\n    return new Promise(resolve => canvas.toBlob(resolve));\n  }\n\n  return toBlob(canvas);\n}\nexport function toArray(arrayLike) {\n  const result = [];\n\n  for (let i = 0, l = arrayLike.length; i < l; i += 1) {\n    result.push(arrayLike[i]);\n  }\n\n  return result;\n}\n\nfunction px(node, styleProperty) {\n  const val = window.getComputedStyle(node).getPropertyValue(styleProperty);\n  return parseFloat(val.replace('px', ''));\n}\n\nexport function getNodeWidth(node) {\n  const leftBorder = px(node, 'border-left-width');\n  const rightBorder = px(node, 'border-right-width');\n  return node.scrollWidth + leftBorder + rightBorder;\n}\nexport function getNodeHeight(node) {\n  const topBorder = px(node, 'border-top-width');\n  const bottomBorder = px(node, 'border-bottom-width');\n  return node.scrollHeight + topBorder + bottomBorder;\n}\nexport function getPixelRatio() {\n  let ratio;\n  const val = process && process.env ? process.env.devicePixelRatio : null;\n\n  if (val) {\n    ratio = parseInt(val, 10);\n\n    if (isNaN(ratio)) {\n      ratio = 1;\n    }\n  }\n\n  return ratio || window.devicePixelRatio || 1;\n}\nexport function createImage(url) {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n\n    image.onload = () => resolve(image);\n\n    image.onerror = reject;\n    image.crossOrigin = 'anonymous';\n    image.src = url;\n  });\n}\nexport function svgToDataURL(svg) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return Promise.resolve().then(() => new XMLSerializer().serializeToString(svg)).then(encodeURIComponent).then(html => `data:image/svg+xml;charset=utf-8,${html}`);\n  });\n}\nexport function getBlobFromImageURL(url) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return createImage(url).then(image => {\n      const {\n        width,\n        height\n      } = image;\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      const ratio = getPixelRatio();\n      canvas.width = width * ratio;\n      canvas.height = height * ratio;\n      canvas.style.width = `${width}`;\n      canvas.style.height = `${height}`;\n      context.scale(ratio, ratio);\n      context.drawImage(image, 0, 0);\n      const dataURL = canvas.toDataURL(getMimeType(url));\n      return getDataURLContent(dataURL);\n    });\n  });\n}","map":{"version":3,"sources":["../src/util.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst WOFF = 'application/font-woff';\nconst JPEG = 'image/jpeg';\nconst mimes = {\n    woff: WOFF,\n    woff2: WOFF,\n    ttf: 'application/font-truetype',\n    eot: 'application/vnd.ms-fontobject',\n    png: 'image/png',\n    jpg: JPEG,\n    jpeg: JPEG,\n    gif: 'image/gif',\n    tiff: 'image/tiff',\n    svg: 'image/svg+xml',\n};\nexport const uuid = (function uuid() {\n    // generate uuid for className of pseudo elements.\n    // We should not use GUIDs, otherwise pseudo elements sometimes cannot be captured.\n    let counter = 0;\n    // ref: http://stackoverflow.com/a/6248722/2519373\n    const random = () => `0000${((Math.random() * Math.pow(36, 4)) << 0).toString(36)}`.slice(-4);\n    return () => {\n        counter += 1;\n        return `u${random()}${counter}`;\n    };\n})();\nexport function getExtension(url) {\n    const match = /\\.([^./]*?)$/g.exec(url);\n    return match ? match[1] : '';\n}\nexport function getMimeType(url) {\n    const ext = getExtension(url).toLowerCase();\n    return mimes[ext] || '';\n}\nexport function delay(ms) {\n    return (args) => new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(args);\n        }, ms);\n    });\n}\nexport function isDataUrl(url) {\n    return url.search(/^(data:)/) !== -1;\n}\nexport function toDataURL(content, mimeType) {\n    return `data:${mimeType};base64,${content}`;\n}\nexport function getDataURLContent(dataURL) {\n    return dataURL.split(/,/)[1];\n}\nfunction toBlob(canvas) {\n    return new Promise((resolve) => {\n        const binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n        const len = binaryString.length;\n        const binaryArray = new Uint8Array(len);\n        for (let i = 0; i < len; i += 1) {\n            binaryArray[i] = binaryString.charCodeAt(i);\n        }\n        resolve(new Blob([binaryArray], { type: 'image/png' }));\n    });\n}\nexport function canvasToBlob(canvas) {\n    if (canvas.toBlob) {\n        return new Promise((resolve) => canvas.toBlob(resolve));\n    }\n    return toBlob(canvas);\n}\nexport function toArray(arrayLike) {\n    const result = [];\n    for (let i = 0, l = arrayLike.length; i < l; i += 1) {\n        result.push(arrayLike[i]);\n    }\n    return result;\n}\nfunction px(node, styleProperty) {\n    const val = window.getComputedStyle(node).getPropertyValue(styleProperty);\n    return parseFloat(val.replace('px', ''));\n}\nexport function getNodeWidth(node) {\n    const leftBorder = px(node, 'border-left-width');\n    const rightBorder = px(node, 'border-right-width');\n    return node.scrollWidth + leftBorder + rightBorder;\n}\nexport function getNodeHeight(node) {\n    const topBorder = px(node, 'border-top-width');\n    const bottomBorder = px(node, 'border-bottom-width');\n    return node.scrollHeight + topBorder + bottomBorder;\n}\nexport function getPixelRatio() {\n    let ratio;\n    const val = process && process.env ? process.env.devicePixelRatio : null;\n    if (val) {\n        ratio = parseInt(val, 10);\n        if (isNaN(ratio)) {\n            ratio = 1;\n        }\n    }\n    return ratio || window.devicePixelRatio || 1;\n}\nexport function createImage(url) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n        image.onload = () => resolve(image);\n        image.onerror = reject;\n        image.crossOrigin = 'anonymous';\n        image.src = url;\n    });\n}\nexport function svgToDataURL(svg) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return Promise.resolve()\n            .then(() => new XMLSerializer().serializeToString(svg))\n            .then(encodeURIComponent)\n            .then((html) => `data:image/svg+xml;charset=utf-8,${html}`);\n    });\n}\nexport function getBlobFromImageURL(url) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return createImage(url).then((image) => {\n            const { width, height } = image;\n            const canvas = document.createElement('canvas');\n            const context = canvas.getContext('2d');\n            const ratio = getPixelRatio();\n            canvas.width = width * ratio;\n            canvas.height = height * ratio;\n            canvas.style.width = `${width}`;\n            canvas.style.height = `${height}`;\n            context.scale(ratio, ratio);\n            context.drawImage(image, 0, 0);\n            const dataURL = canvas.toDataURL(getMimeType(url));\n            return getDataURLContent(dataURL);\n        });\n    });\n}\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}