{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/Resources/WebApp.js\";\nimport { Avatar, Button, Divider, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { genrateQrCode, getUserDetails } from '../../store/actions/accountsettingAction';\nimport CircularSpinner from '../../component/CircularSpinner';\nimport CodeIcon from '@material-ui/icons/Code';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getContent } from '../../store/actions/resourceCenterAction';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport { withSnackbar } from 'notistack';\nimport { Accordion, AccordionItem, AccordionItemHeading, AccordionItemButton, AccordionItemPanel } from 'react-accessible-accordion';\nconst TypoHeadStyled = styled(List)(({\n  theme\n}) => ({\n  color: '#1773BF',\n  fontSize: 18,\n  borderBottom: '1px solid rgba(64, 87, 106, 0.1)',\n  margin: '0 -16px',\n  padding: '16px 20px',\n  fontWeight: '600'\n}));\nconst TypoStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 18,\n  color: theme.palette.primary.main,\n  fontWeight: '500',\n  borderBottom: '1px solid rgba(64, 87, 106, 0.1)',\n  margin: '40px 20px',\n  paddingBottom: 15\n}));\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\n\nconst WebApp = props => {\n  const classes = useStyles();\n  const {\n    error,\n    contentList\n  } = props;\n  const {\n    user_id,\n    business_code,\n    first_name,\n    last_name\n  } = JSON.parse(localStorage.getItem('userData'));\n  useEffect(() => {\n    const dataToSend = {\n      user_id\n    };\n    props.getContent(dataToSend);\n  }, []);\n  console.log('content', contentList);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TypoHeadStyled, {\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Web App\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, contentList.map((data, index) => {\n    return /*#__PURE__*/React.createElement(AccordionItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AccordionItemHeading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(AccordionItemButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, data.menu_name)), /*#__PURE__*/React.createElement(AccordionItemPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      className: \"subAccordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, data.content.map((content, key) => {\n      return /*#__PURE__*/React.createElement(AccordionItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(AccordionItemHeading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(AccordionItemButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      }, content.extra_text, content.question)), /*#__PURE__*/React.createElement(AccordionItemPanel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: content.answer\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      })));\n    }))));\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    contentList: state.resourceCenterReducer.contentList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getContent: data => dispatch(getContent(data))\n  };\n}; // export default WebApp\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WebApp);","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/Resources/WebApp.js"],"names":["Avatar","Button","Divider","List","ListItem","ListItemAvatar","ListItemText","Typography","React","useEffect","useMemo","useState","genrateQrCode","getUserDetails","CircularSpinner","CodeIcon","PropTypes","connect","getContent","makeStyles","styled","withSnackbar","Accordion","AccordionItem","AccordionItemHeading","AccordionItemButton","AccordionItemPanel","TypoHeadStyled","theme","color","fontSize","borderBottom","margin","padding","fontWeight","TypoStyled","palette","primary","main","paddingBottom","useStyles","root","width","heading","typography","pxToRem","fontWeightRegular","WebApp","props","classes","error","contentList","user_id","business_code","first_name","last_name","JSON","parse","localStorage","getItem","dataToSend","console","log","map","data","index","menu_name","content","key","extra_text","question","__html","answer","mapStateToProps","state","resourceCenterReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Avatar, Button, Divider, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { genrateQrCode, getUserDetails } from '../../store/actions/accountsettingAction'\nimport CircularSpinner from '../../component/CircularSpinner'\nimport CodeIcon from '@material-ui/icons/Code'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { getContent } from '../../store/actions/resourceCenterAction'\n\nimport { makeStyles, styled } from '@material-ui/core/styles'\nimport { withSnackbar } from 'notistack'\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel\n} from 'react-accessible-accordion'\n\nconst TypoHeadStyled = styled(List)(({ theme }) => ({\n  color: '#1773BF',\n  fontSize: 18,\n  borderBottom: '1px solid rgba(64, 87, 106, 0.1)',\n  margin: '0 -16px',\n  padding: '16px 20px',\n  fontWeight: '600'\n}))\n\nconst TypoStyled = styled(Typography)(({ theme }) => ({\n  fontSize: 18,\n  color: theme.palette.primary.main,\n  fontWeight: '500',\n  borderBottom: '1px solid rgba(64, 87, 106, 0.1)',\n  margin: '40px 20px',\n  paddingBottom: 15\n}))\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}))\n\nconst WebApp = (props) => {\n  const classes = useStyles()\n\n  const {\n    error,\n    contentList\n  } = props\n\n  const { user_id, business_code, first_name, last_name } = JSON.parse(localStorage.getItem('userData'))\n\n  useEffect(() => {\n    const dataToSend = { user_id }\n    props.getContent(dataToSend)\n  }, [])\n\n  console.log('content', contentList) \n\n\n  return (\n    <>\n      <TypoHeadStyled component='p'>Web App</TypoHeadStyled>\n      <div className='contentContainer'>\n        <Accordion>\n          {\n            contentList.map((data, index) => {\n              return (\n                <AccordionItem>\n                  <AccordionItemHeading>\n                    <AccordionItemButton>\n                      {data.menu_name}\n                    </AccordionItemButton>\n                  </AccordionItemHeading>\n                  <AccordionItemPanel>\n                    <Accordion className='subAccordion'>\n                      {\n                        data.content.map((content, key) => {\n                          return (\n                            <AccordionItem>\n                              <AccordionItemHeading>\n                                <AccordionItemButton>\n                                  {content.extra_text}\n                                  {content.question}\n                                </AccordionItemButton>\n                              </AccordionItemHeading>\n                              <AccordionItemPanel>\n                                <div dangerouslySetInnerHTML={{ __html: content.answer }} />\n                              </AccordionItemPanel>\n                            </AccordionItem>\n\n                          )\n                        })\n                      }\n                  </Accordion>\n                  </AccordionItemPanel>\n                </AccordionItem>\n              )\n            })\n          }\n        </Accordion>\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    contentList: state.resourceCenterReducer.contentList\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getContent: (data) => dispatch(getContent(data))\n  }\n}\n\n// export default WebApp\nexport default connect(mapStateToProps, mapDispatchToProps)(WebApp)\n"]},"metadata":{},"sourceType":"module"}