{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/Bookings/EventBooking/EventBookingDuplicate.js\";\nimport { Visibility, Replay, Send, AddCircle, Cancel } from '@material-ui/icons';\nimport { Box, Button, Checkbox, FormControlLabel, Grid, MenuItem, Paper, Switch, TextField, Typography, Radio, RadioGroup, Divider, FormControl, FormLabel, IconButton } from '@material-ui/core';\nimport { DatePicker, MuiPickersUtilsProvider, TimePicker } from '@material-ui/pickers';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport MomentUtils from '@date-io/moment';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { createEventbook, getBusinessUsers, getGroups, getCategory } from '../../../store/actions/bookevent';\nimport { getBookListDetail } from '../../../store/actions/booklist';\nimport moment from 'moment';\nimport { withSnackbar } from 'notistack';\nimport PropTypes from 'prop-types';\nimport CircularSpinner from '../../../component/CircularSpinner/index';\nimport FullscreenSpinner from '../../../component/FullscreenSpinner/index';\nimport Tabmenu from './Modal/Memberlist';\nimport ConfirmationDialogRaw from './Modal';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport ckEditorConfig from '../../../helper/ckEditorConfig';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative'\n  },\n  categoryIon: {\n    height: 32,\n    margin: -10,\n    marginLeft: 0,\n    marginRight: 10\n  }\n}));\nconst TypoHeadStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 24,\n  color: theme.palette.primary.main,\n  textTransform: 'uppercase',\n  fontWeight: 'bold'\n}));\nconst TypoHeadInnerStyled = styled(TypoHeadStyled)(({\n  theme\n}) => ({\n  color: theme.palette.text.primary\n}));\nconst PaperStyled = styled(Paper)({\n  padding: '35px 15px',\n  height: 100 + '%'\n});\nconst GridStyled = styled(Grid)(({\n  theme\n}) => ({}));\nconst GridVioletStyled = styled(Grid)({\n  padding: '10px 0',\n  height: 100 + '%',\n  background: '#edf8fe',\n  borderRadius: 15,\n  minHeight: 210,\n  position: 'relative'\n});\nconst AutocompleteStyled = styled(Autocomplete)({\n  height: 154,\n  '&>div': {\n    margin: 0,\n    '&>div': {\n      height: 154,\n      alignItems: 'flex-start'\n    }\n  }\n});\nconst ButtonAddStyled = styled(Button)({\n  fontSize: 16,\n  fontWeight: 'bold',\n  '& svg': {\n    fontSize: '28px !important'\n  }\n});\nconst currencies = [{\n  value: '10',\n  label: '10 Min'\n}, {\n  value: '15',\n  label: '15 Min'\n}, {\n  value: '30',\n  label: '30 Min'\n}, {\n  value: '45',\n  label: '45 Min'\n}, {\n  value: '1',\n  label: '1 Hour'\n}, {\n  value: '2',\n  label: '2 Hour'\n}];\nconst category = [{\n  value: 'Parents Evening',\n  label: 'Parents Evening',\n  category_id: 159,\n  img: require('../../../assets/images/parent.png')\n}, {\n  value: 'Event',\n  label: 'Event',\n  category_id: 158,\n  img: require('../../../assets/images/event.png')\n}, {\n  value: 'Appointment',\n  label: 'Appointment',\n  category_id: 157,\n  img: require('../../../assets/images/event_blue.png')\n}];\nconst IconButtonStyled = styled(IconButton)(({\n  theme\n}) => ({\n  color: theme.palette.error.main,\n  position: 'absolute',\n  right: -15,\n  top: -15,\n  cursor: 'pointer',\n  '& svg': {\n    width: '2.3rem',\n    height: '2.3rem'\n  }\n})); //form field\n\nconst FormFields = {\n  message: '',\n  EventForm_to_group: '',\n  eventForm_to: '',\n  user_id: '',\n  user_name: '',\n  subject: '',\n  category: '',\n  dynaminc_field: '',\n  allow_parents: '',\n  set_date: '',\n  id: ''\n};\n\nconst CreateEventbook = props => {\n  const {\n    user_id,\n    business_code,\n    first_name,\n    last_name\n  } = JSON.parse(localStorage.getItem('userData'));\n  const {\n    enqueueSnackbar,\n    error,\n    sucessEvent,\n    getGroups,\n    getBookListDetail,\n    groups,\n    bookdetails,\n    businessusers,\n    getBusinessUsers,\n    loading,\n    matched_contact,\n    createEventbook,\n    getCategory\n  } = props;\n  const [formValue, setFormValue] = useState(FormFields);\n  const [formValidation, setFormValidation] = useState(FormFields);\n  const [setDate, setDateChange] = useState();\n  const [categoryVal, setCategoryVal] = React.useState('');\n  const [allowParentValue, setAllowParent] = useState('');\n  const [getMessage, setMessage] = useState('');\n  const history = useHistory();\n  const date = new Date();\n  const [checked, setChecked] = useState([]);\n  const [memberchecked, setMemberchecked] = useState([]);\n  const [group_members, setGroup_members] = useState([]);\n  const [groupname_membersname, setGroupname_membersname] = useState([]);\n  const [eventForm_to, setEventForm_to] = useState('');\n  const [checkupdate, setCheckupdate] = useState(0);\n  const [showTime, setShowTime] = useState('No');\n  const [tempTime, setTempTime] = useState();\n  const [isPageLoading, setPageLoading] = useState(false); //let { ID } = useParams();\n\n  let {\n    ID,\n    member_id,\n    group_id,\n    get_name\n  } = useParams();\n  useEffect(() => {\n    const dataToSend = {\n      user_id,\n      category_id: ''\n    }; // props.getcategories(dataToSend)\n\n    getGroups({\n      user_id\n    });\n    const SendToBusiness = {\n      user_id,\n      business_code\n    };\n    getBusinessUsers(SendToBusiness); // getCategory();\n\n    if (ID != undefined) {\n      setPageLoading(true);\n      getBookListDetail({\n        ID,\n        user_id\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (ID != undefined) {\n      if (bookdetails !== null) {\n        setPageLoading(false);\n        setTimeout(() => {\n          setFormValue({\n            id: ID,\n            message: bookdetails[0].message,\n            subject: bookdetails[0].subject,\n            set_date: bookdetails[0].event_date,\n            category: bookdetails[0].category,\n            allow_parents: bookdetails[0].add_comment,\n            eventForm_to: '@'\n          });\n        }, 0);\n        console.log('bookdetails--', bookdetails);\n\n        if (bookdetails[0].category == '157') {\n          setCategoryVal('Appointment');\n        } else if (bookdetails[0].category == '158') {\n          setCategoryVal('Event');\n        } else if (bookdetails[0].category == '159') {\n          setCategoryVal('Parents Evening');\n        } // setCategoryVal(bookdetails[0].category);\n        //setDateChange(moment(bookdetails[0].event_date));\n\n\n        setAllowParent(bookdetails[0].add_comment); //this is for popoup\n\n        const newChecked = [];\n        const mem_checked = [];\n        const groupname = [];\n        const mobile_name = [];\n        var temp = null;\n        bookdetails[0].event_to_group.split(',').forEach((element, index) => {\n          newChecked.push(parseInt(element));\n        });\n        bookdetails[0].event_to.split(',').forEach((element, index) => {\n          mem_checked.push(element);\n        });\n\n        if (bookdetails[0].event_group_name != null) {\n          bookdetails[0].event_group_name.split(',').forEach((element, index) => {\n            if (groupname.indexOf(element) === -1) {\n              groupname.push(element);\n            }\n\n            ;\n          });\n        }\n\n        if (bookdetails[0].event_mobile_no != null) {\n          bookdetails[0].event_mobile_no.split(',').forEach((element, index) => {\n            temp = businessusers.filter(x => element.user_id == element); // if(mobile_name.indexOf(element) === -1) {mobile_name.push(element)};\n          });\n\n          if (temp) {\n            bookdetails[0].user && bookdetails[0].user.length > 0 && bookdetails[0].user.forEach((data, i) => {\n              mobile_name.push(data.user_name);\n            });\n          }\n        }\n\n        setChecked(newChecked);\n        setMemberchecked(mem_checked);\n        setGroupname_membersname(groupname.concat(mobile_name)); //popup end\n        //dynamic eleent start\n\n        var new_meet_data = [];\n        var new_meet_data_frm = [];\n        var dynamic_valid = []; // bookdetails[0].meeting_data.forEach((element, index) => {\n        // // list[index][fieldName]    = fieldVal\n        // let innerObj = {};\n        // let innerObj_frm={};\n        // let  innerObj_valid={};\n        // innerObj['meetingDate'] = moment(element.meeting_date);\n        // innerObj['startTime']   = moment(element.meeting_date+' '+element.meeting_time_start);\n        // innerObj['endTime']     = moment(element.meeting_date+' '+element.meeting_time_end);\n        // innerObj['currency']    = element.meeting_slot;\n        // innerObj['breakStatus']    = element.comfort_break;\n        // innerObj['breakStartTime'] = moment(element.meeting_date+' '+element.meeting_time_start1);\n        // innerObj['breakEndTime']   = moment(element.meeting_date+' '+element.meeting_time_end1);\n        // innerObj['isbooked_check']   = element.is_slot_book;\n        // innerObj_frm['meetingDate'] = element.meeting_date;\n        // innerObj_frm['startTime']   = element.meeting_date+' '+element.meeting_time_start;\n        // innerObj_frm['endTime']     = element.meeting_date+' '+element.meeting_time_end;\n        // innerObj_frm['currency']    = element.meeting_slot;\n        // innerObj_frm['breakStatus']    = element.comfort_break;\n        // innerObj_frm['breakStartTime'] =element.meeting_date+' '+element.meeting_time_start1;\n        // innerObj_frm['breakEndTime']   =element.meeting_date+' '+element.meeting_time_end1;\n        // innerObj_valid['meetingDate'] = '';\n        // innerObj_valid['startTime']   = '';\n        // innerObj_valid['endTime']     = '';\n        // innerObj_valid['currency']    = '';\n        // innerObj_valid['breakStatus']    = '';\n        // innerObj_valid['breakStartTime'] ='';\n        // innerObj_valid['breakEndTime']   ='';\n        // new_meet_data.push(innerObj);\n        // new_meet_data_frm.push(innerObj_frm);\n        // dynamic_valid.push(innerObj_valid);\n        // });\n        //setInputList(new_meet_data);\n        // setDynamicFormValidation(dynamic_valid);\n        // setSaveInputList(new_meet_data_frm);\n\n        setAllowParent(bookdetails[0].add_comment); //end of dyamic field\n\n        setFormValue({ ...formValue,\n          set_date: moment(bookdetails[0].event_date)\n        });\n      }\n    }\n  }, [bookdetails]); //  const handleinput = (e, isEditor=null) => {\n  //     const formdata = { ...formValue}\n  //     const formvalidation = { ...formValidation }\n  //     if(!isEditor){\n  //       const { name, value } = e.target;\n  //       if (name === 'message') {\n  //         formdata.message = value\n  //         formvalidation.message = ''\n  //         setFormValidation(formvalidation)\n  //         }else if(name === 'subject'){\n  //         formdata.subject = value\n  //         formvalidation.subject = ''\n  //         setFormValidation(formvalidation)\n  //         }\n  //         else {\n  //           formdata[name] = value\n  //         }\n  //     }\n  //     else{\n  //       formdata.message = e\n  //       formvalidation.message = ''\n  //       setFormValidation(formvalidation)\n  //     }\n  //     setFormValue(formdata)\n  //   }\n\n  useEffect(() => {\n    const formdata = { ...formValue\n    };\n    const formvalidation = { ...formValidation\n    };\n    formdata.message = getMessage;\n    formvalidation.message = '';\n    setFormValidation(formvalidation);\n    setFormValue(formdata);\n  }, [getMessage]);\n\n  const subjectHandleinput = (e, isEditor = null) => {\n    const formdata = { ...formValue\n    };\n    const formvalidation = { ...formValidation\n    };\n    const {\n      name,\n      value\n    } = e.target;\n    formdata.subject = value;\n    formvalidation.subject = '';\n    setFormValidation(formvalidation);\n    setFormValue(formdata);\n  };\n\n  const handleCategoryChange = event => {\n    setCategoryVal(event.target.value);\n    var cat_id = \"\";\n\n    if (event.target.value == \"Parents Evening\") {\n      cat_id = 159;\n    } else if (event.target.value == \"Event\") {\n      cat_id = 158;\n    } else {\n      cat_id = 157;\n    }\n\n    setFormValue({ ...formValue,\n      subcategory_id: cat_id,\n      category: event.target.value\n    });\n  }; //start cloneing field\n  // Add remove fields\n\n\n  const [inputList, setInputList] = useState([{\n    meetingDate: new Date(),\n    currency: '15',\n    startTime: new Date(),\n    endTime: new Date(),\n    breakStatus: '0',\n    breakStartTime: new Date(),\n    breakEndTime: new Date(),\n    isbooked_check: 0\n  }]); // Save data array value\n\n  const [saveInputList, setSaveInputList] = useState([{\n    meetingDate: '',\n    currency: '15',\n    startTime: '',\n    endTime: '',\n    breakStatus: '0',\n    breakStartTime: '',\n    breakEndTime: ''\n  }]);\n  const [dynamicFormValidation, setDynamicFormValidation] = useState([{\n    meetingDate: '',\n    currency: '',\n    startTime: '',\n    endTime: '',\n    breakStatus: '',\n    breakStartTime: '',\n    breakEndTime: ''\n  }]); // handle input change\n\n  const handleInputChange = (fieldName, event, index) => {\n    const list = [...inputList];\n    const saveList = [...saveInputList];\n    const vali = [...dynamicFormValidation];\n    const fieldsArr = ['startTime', 'endTime', 'breakStartTime', 'breakEndTime'];\n    var fieldVal = '';\n    var saveFieldVal = '';\n    var saveVali = '';\n\n    if (fieldName == 'meetingDate') {\n      fieldVal = event;\n      const date = new Date(event);\n      saveFieldVal = moment(date).format('YYYY-MM-DD');\n      saveVali = '';\n    } else if (fieldsArr.indexOf(fieldName) >= 0) {\n      fieldVal = event;\n      const date = new Date(event);\n      saveFieldVal = moment(date).format('HH:mm'); // setTempTime(event)\n    } else if (fieldName == 'breakStatus') {\n      let prevValue = list[index][fieldName];\n      let currentVal = prevValue !== event.target.value ? event.target.value : '';\n      fieldVal = currentVal;\n      saveFieldVal = currentVal;\n\n      if (currentVal === 'Yes') {\n        setShowTime(\"Yes\");\n      } else {\n        setShowTime('No');\n      }\n    } else {\n      fieldVal = event.target.value;\n      saveFieldVal = event.target.value; // saveVali=event.target.value\n    }\n\n    list[index][fieldName] = fieldVal;\n    saveList[index][fieldName] = saveFieldVal;\n    vali[index][fieldName] = saveVali;\n    setInputList(list);\n    setSaveInputList(saveList);\n    setDynamicFormValidation(vali);\n  }; // handle click event of the Add button\n\n\n  const handleAddAnotherClick = () => {\n    let tempBreakStatus = '0';\n\n    if (inputList.length > 0 && inputList[inputList.length - 1].breakStatus == 'No') {\n      tempBreakStatus = 'No';\n    } else {\n      tempBreakStatus = 'Yes';\n    }\n\n    const date = new Date(tempTime);\n    let meetDate = '';\n\n    if (inputList.length > 0) {\n      let getDate = moment(new Date(inputList[inputList.length - 1].meetingDate), 'DD-MM-YYYY').add(1, 'days');\n      meetDate = getDate.format('YYYY-MM-DD');\n    } else {\n      meetDate = new Date().addDays(1);\n    }\n\n    setInputList([...inputList, {\n      // meetingDate: inputList.length > 0 ? (inputList[inputList.length-1].meetingDate).addDays(1) : new Date().addDays(1),\n      //meetingDate: inputList.length > 0 ? moment(inputList[inputList.length-1].meetingDate, \"DD-MM-YYYY\").add(1, 'days') : new Date().addDays(1),\n      meetingDate: meetDate,\n      currency: inputList.length > 0 ? inputList[inputList.length - 1].currency : '',\n      startTime: inputList.length > 0 ? inputList[inputList.length - 1].startTime : new Date(),\n      endTime: inputList.length > 0 ? inputList[inputList.length - 1].endTime : new Date(),\n      breakStatus: tempBreakStatus,\n      breakStartTime: inputList.length > 0 ? inputList[inputList.length - 1].breakStartTime : new Date(),\n      breakEndTime: inputList.length > 0 ? inputList[inputList.length - 1].breakEndTime : new Date()\n    }]);\n    let meetDate2 = '';\n\n    if (saveInputList.length > 0) {\n      let getDate = moment(new Date(saveInputList[saveInputList.length - 1].meetingDate), 'DD-MM-YYYY').add(1, 'days');\n      meetDate2 = getDate.format('YYYY-MM-DD');\n    } else {\n      meetDate2 = new Date().addDays(1);\n    }\n\n    setSaveInputList([...saveInputList, {\n      // meetingDate: saveInputList.length > 0 ? (saveInputList[saveInputList.length-1].meetingDate).addDays(1) : new Date().addDays(1),\n      //meetingDate: saveInputList.length > 0 ? moment(saveInputList[saveInputList.length-1].meetingDate, \"DD-MM-YYYY\").add(1, 'days') : new Date().addDays(1),\n      meetingDate: meetDate2,\n      currency: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].currency : '',\n      startTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].startTime : new Date(),\n      endTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].endTime : new Date(),\n      breakStatus: tempBreakStatus,\n      breakStartTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].breakStartTime : new Date(),\n      breakEndTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].breakEndTime : new Date()\n    }]);\n    setDynamicFormValidation([...dynamicFormValidation, {\n      meetingDate: '',\n      currency: '',\n      startTime: '',\n      endTime: '',\n      breakStatus: '',\n      breakStartTime: '',\n      breakEndTime: ''\n    }]); // setSaveInputList([...saveInputList, {\n    //   // meetingDate:'',\n    //   // currency: '',\n    //   // startTime: '',\n    //   // endTime : '',\n    //   // breakStatus: '0',\n    //   // breakStartTime: '',\n    //   // breakEndTime: '',\n    //   meetingDate: inputList.length > 0 ? inputList[inputList.length-1].meetingDate : '',\n    //     currency: inputList.length > 0 ? inputList[inputList.length-1].currency : '',\n    //     startTime: inputList.length > 0 ? inputList[inputList.length-1].startTime : '',\n    //     endTime : inputList.length > 0 ? inputList[inputList.length-1].endTime : '',\n    //     breakStatus: tempBreakStatus,\n    //     breakStartTime: inputList.length > 0 ? inputList[inputList.length-1].breakStartTime : '',\n    //     breakEndTime: inputList.length > 0 ? inputList[inputList.length-1].breakEndTime : '',\n    // }]);\n  }; // handle click event of the Remove button\n\n\n  const handleRemoveAnotherClick = index => {\n    const list = [...inputList];\n    const saveList = [...saveInputList];\n    const vali = [...dynamicFormValidation];\n    list.splice(index, 1);\n    saveList.splice(index, 1);\n    vali.splice(index, 1);\n    setInputList(list);\n    setSaveInputList(saveList);\n    setDynamicFormValidation(vali);\n  }; //end cloning\n\n\n  const handleAllowparents = event => {\n    if (event.target.value === allowParentValue) {\n      setAllowParent(\"\");\n    } else {\n      setAllowParent(event.target.value);\n    }\n\n    setFormValue({ ...formValue,\n      allow_parents: event.target.value\n    });\n  };\n\n  const [phoneNumber, setPhoneNumber] = useState([]);\n\n  const handleTag = e => {\n    const newNumber = [...phoneNumber, e.target.value];\n    setPhoneNumber(Array.from(new Set(newNumber)));\n  };\n\n  const handleDateChange = e => {\n    const date = new Date(e);\n    const selecteddate = moment(date).format('YYYY-MM-DD');\n    setDateChange(selecteddate);\n    const formvalidation = { ...formValidation\n    };\n    formvalidation.set_date = '';\n    setFormValidation(formvalidation);\n    setFormValue({ ...formValue,\n      set_date: selecteddate\n    });\n  }; //const [selectedDate, handleDateChange] = useState(new Date())\n  //const [selectedTime, handleTimeChange] = useState(new Date())\n\n\n  const [currency, setCurrency] = React.useState('10');\n  const [note, setNote] = React.useState('');\n\n  const handleChange = event => {\n    setCurrency(event.target.value);\n  };\n\n  const handlenoteChange = e => {\n    setNote(e.target.value);\n  };\n\n  const classes = useStyles();\n  const ButtonColor = styled(Button)(({\n    theme\n  }) => ({\n    background: theme.palette.props.main,\n    color: theme.palette.props.contrastText\n  }));\n  const ButtonWarn = styled(Button)(({\n    theme\n  }) => ({\n    background: theme.palette.warning.main,\n    color: theme.palette.warning.contrastText\n  }));\n  const [open, setOpen] = useState(false);\n\n  const handleToopen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = newValue => {\n    setOpen(newValue);\n    const membername = [];\n    const groupname = [];\n    groups.forEach(element => {\n      const checkvalue = checked.indexOf(element.group_id);\n\n      if (checkvalue !== -1) {\n        groupname.push(element.group_name);\n      }\n    });\n\n    if (businessusers.length > 0) {\n      businessusers.forEach(element => {\n        const checkvalue = memberchecked.indexOf(element.user_id);\n\n        if (checkvalue !== -1) {\n          membername.push(`${element.first_name} ${element.last_name}`);\n        }\n      });\n    }\n\n    setGroupname_membersname(groupname.concat(membername));\n    const dataToSend = {\n      mobile_no: phoneNumber.join()\n    };\n\n    if (newValue) {// setValue(newValue);\n    }\n  };\n\n  const handleGroupToggle = value => {\n    const groupMembers = value.group_member_list;\n    const currentIndex = checked.indexOf(value.group_id);\n    const newChecked = [...checked];\n    const selectedmember = [...group_members];\n\n    if (currentIndex === -1) {\n      newChecked.push(value.group_id);\n      groupMembers.forEach(element => {\n        selectedmember.push(element.user_id);\n      });\n    } else {\n      newChecked.splice(currentIndex, 1);\n      groupMembers.forEach(element => {\n        const remomeitem = selectedmember.indexOf(element.user_id);\n        selectedmember.splice(remomeitem, 1);\n      });\n    }\n\n    const formvalidation = { ...formValidation\n    };\n    formvalidation.eventForm_to = '';\n    setFormValidation(formvalidation);\n    setFormValue({ ...formValue,\n      eventForm_to: '@'\n    });\n    setChecked(newChecked);\n    setGroup_members(selectedmember);\n  };\n\n  const handleMemberToggle = value => {\n    const currentIndex = memberchecked.indexOf(value.user_id);\n    const newChecked = [...memberchecked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value.user_id);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    const formvalidation = { ...formValidation\n    };\n    setFormValue({ ...formValue,\n      eventForm_to: '@'\n    });\n    formvalidation.eventForm_to = '';\n    setFormValidation(formvalidation);\n    setMemberchecked(newChecked);\n  };\n  /*\n   useMemo(() => {\n      alert('sddd');\n        setFormValue({ ...formValue, message:bookdetails[0].message  })\n  \n    }, [bookdetails])\n  */\n\n\n  const validate = () => {\n    const formvalidation = { ...formValidation\n    };\n    let isError = false;\n\n    if (!formValue.message) {\n      isError = true;\n      formvalidation.message = 'Please add some message';\n      setFormValidation(formvalidation);\n    }\n\n    if (!formValue.subject) {\n      isError = true;\n      formvalidation.subject = 'Please add some subject';\n      setFormValidation(formvalidation);\n    } // if (!formValue.eventForm_to) {\n    //   isError = true\n    //   formvalidation.eventForm_to = 'Please add contact'\n    //   setFormValidation(formvalidation)\n    // }\n\n\n    if (groupname_membersname.length == 0) {\n      isError = true;\n      formvalidation.eventForm_to = 'Please add contact';\n      setFormValidation(formvalidation);\n    }\n\n    if (!formValue.set_date) {\n      isError = true;\n      formvalidation.set_date = 'Please Select valid Date';\n      setFormValidation(formvalidation);\n    }\n\n    return isError;\n  };\n\n  const handleToTagvalue = value => {\n    setPhoneNumber(value);\n  }; //dynamic field validation\n\n  /*\n  const dynamicValidate_old = () => {\n    const dynamicFormVal = [...dynamicFormValidation ]\n      const form_filed_change_val = [...saveInputList]\n    let isError = false\n    for (var i = 0; i < dynamicFormVal.length; i++) {\n      if(!form_filed_change_val[i].meetingDate){\n      isError = true\n      dynamicFormVal[i].meetingDate = 'This field is isRequired to select future date'\n      setDynamicFormValidation(dynamicFormVal)\n      }\n      if(!form_filed_change_val[i].endTime){\n      isError = true\n      dynamicFormVal[i].endTime = 'This field is isRequired'\n      setDynamicFormValidation(dynamicFormVal)\n      }\n      if(!form_filed_change_val[i].startTime){\n      isError = true\n      dynamicFormVal[i].startTime = 'This field is isRequired'\n      setDynamicFormValidation(dynamicFormVal)\n      }\n    }\n  \n  \n    return isError\n  };\n  */\n  //dynamic field validation\n\n\n  const dynamicValidate = () => {\n    const dynamicFormVal = [...dynamicFormValidation];\n    const form_filed_change_val = [...saveInputList];\n    let requiredMsg = 'This field is required';\n    let isError = false;\n\n    for (var i = 0; i < dynamicFormVal.length; i++) {\n      let meetingDate = form_filed_change_val[i].meetingDate;\n      let currency = form_filed_change_val[i].currency ? form_filed_change_val[i].currency : 0;\n      let startTime = form_filed_change_val[i].startTime;\n      let endTime = form_filed_change_val[i].endTime;\n      let breakStartTime = form_filed_change_val[i].breakStartTime;\n      let breakEndTime = form_filed_change_val[i].breakEndTime;\n      let breakStatus = form_filed_change_val[i].breakStatus;\n\n      if (!meetingDate) {\n        isError = true;\n        dynamicFormVal[i].meetingDate = requiredMsg;\n        setDynamicFormValidation(dynamicFormVal);\n      } // if(currency<1){\n      //   isError = true\n      //   dynamicFormVal[i].currency = requiredMsg\n      //   setDynamicFormValidation(dynamicFormVal)\n      // }\n\n\n      if (!startTime) {\n        isError = true;\n        dynamicFormVal[i].startTime = requiredMsg;\n        setDynamicFormValidation(dynamicFormVal);\n      }\n\n      if (!endTime) {\n        isError = true;\n        dynamicFormVal[i].endTime = requiredMsg;\n        setDynamicFormValidation(dynamicFormVal);\n      }\n\n      if (startTime && endTime) {\n        let currencyVal = currency < 10 ? currency * 60 : currency;\n        let slotDuration = '0:' + currencyVal;\n        let startTimeSec = getSeconds(startTime);\n        let endTimeSec = getSeconds(endTime);\n        let startTimeSlotDurSec = startTimeSec + getSeconds(slotDuration);\n\n        if (currencyVal) {\n          if (endTimeSec <= startTimeSlotDurSec) {\n            isError = true;\n            dynamicFormVal[i].endTime = 'End Time must be grater than addition of Start Time & Slot Duration';\n            setDynamicFormValidation(dynamicFormVal);\n          }\n        }\n\n        if (breakStatus == 1 && breakEndTime && breakStartTime) {\n          let breakStartTime = getSeconds(breakStartTime);\n          let breakEndTimeSec = getSeconds(breakEndTime);\n\n          if (breakStartTime < startTimeSec || breakStartTime > endTimeSec || breakEndTimeSec < startTimeSec || breakEndTimeSec > endTimeSec) {\n            isError = true;\n            dynamicFormVal[i].breakEndTimeSec = 'Please select break time between above Start Time and End Time';\n            setDynamicFormValidation(dynamicFormVal);\n          }\n\n          if (breakStartTime < breakEndTimeSec) {\n            isError = true;\n            dynamicFormVal[i].breakEndTimeSec = 'End Time must be grater than Start Time';\n            setDynamicFormValidation(dynamicFormVal);\n          }\n        }\n      }\n    }\n\n    return isError;\n  };\n\n  const getSeconds = hms => {\n    let hrs = 1;\n    let mins = 1;\n\n    if (typeof hms == 'object') {\n      hms = moment(hms).format('HH:mm');\n      let [hours, minutes] = hms.split(':');\n      hrs = hours * 3600;\n      mins = minutes * 60;\n    } else {\n      let [hours, minutes] = hms.split(':');\n      hrs = hours * 3600;\n      mins = minutes * 60;\n    }\n\n    return hrs + mins;\n  };\n\n  const handleReset = () => {\n    console.log('formValue==', formValue);\n    setFormValue({ ...formValue,\n      EventForm_to_group: '',\n      allow_parents: '',\n      category: '',\n      dynaminc_field: '',\n      eventForm_to: '',\n      message: '',\n      subject: '',\n      subcategory_id: 157,\n      category: 'Appointment'\n    });\n    setCategoryVal('Appointment');\n    setDateChange(moment(new Date()));\n    setGroupname_membersname([]);\n    setMemberchecked([]);\n    setChecked([]);\n    setGroup_members([]);\n    setSaveInputList([{\n      meetingDate: new Date(),\n      currency: '15',\n      startTime: '',\n      endTime: '',\n      breakStatus: '0',\n      breakStartTime: '',\n      breakEndTime: ''\n    }]);\n    setInputList([{\n      meetingDate: new Date(),\n      currency: '15',\n      startTime: new Date(),\n      endTime: new Date(),\n      breakStatus: '0',\n      breakStartTime: new Date(),\n      breakEndTime: new Date(),\n      isbooked_check: 0\n    }]);\n    setDynamicFormValidation([{\n      meetingDate: '',\n      currency: '',\n      startTime: '',\n      endTime: '',\n      breakStatus: '',\n      breakStartTime: '',\n      breakEndTime: ''\n    }]);\n  };\n\n  const handleToSubmit = () => {\n    if (validate()) return false;\n    if (dynamicValidate()) return false;\n    const formFeilds = { ...formValue\n    };\n    formFeilds.dynaminc_field = saveInputList; // if (validate()) return false\n\n    const EventFormField = { ...formFeilds\n    };\n    let tempChecked = [];\n    let tempMemberChecked = [];\n    checked.map((data, i) => {\n      if (!isNaN(data)) {\n        tempChecked.push(data);\n      }\n    }); // if(ID != null) {\n    //   if(bookdetails !==null){\n    //     EventFormField.id = ID\n    //   }\n    // }\n\n    EventFormField.allow_parents = formValue.allow_parents;\n    EventFormField.EventForm_to_group = tempChecked.join();\n    EventFormField.EventForm_group_members_to = [...new Set(group_members)].join();\n    EventFormField.user_id = user_id;\n    EventFormField.user_name = first_name;\n    memberchecked.map((data, i) => {\n      if (!isNaN(data)) {\n        tempMemberChecked.push(data);\n      }\n    });\n    EventFormField.eventForm_to = matched_contact !== null ? tempMemberChecked.join() + ',' + matched_contact.user_id : tempMemberChecked.join();\n    EventFormField.subcategory_id = EventFormField.subcategory_id ? EventFormField.subcategory_id : \"157\";\n    const unmatch = matched_contact ? matched_contact.mobile_no : ''; // return false;\n\n    const sendAttachment = '';\n    console.log('EventFormField=====', EventFormField);\n    createEventbook(EventFormField, unmatch, history, sendAttachment);\n  };\n\n  useMemo(() => {\n    error && enqueueSnackbar(error, {\n      variant: 'error'\n    });\n  }, [error]);\n  useMemo(() => {\n    sucessEvent && enqueueSnackbar(sucessEvent, {\n      variant: 'success'\n    });\n  }, [sucessEvent]);\n  useMemo(() => {\n    if (!ID) {\n      const newChecked = [...checked];\n\n      if (member_id != 0 || group_id != 0) {\n        const groupname = [];\n        const membername = [];\n\n        if (group_id != '0') {\n          if (groups.length > 0) {\n            groups.forEach(element => {\n              if (element.group_id == group_id) {\n                groupname.push(element.group_name);\n              }\n            });\n          } else {\n            groupname.push(get_name);\n          }\n\n          newChecked.push(group_id);\n          setChecked(newChecked);\n        } else if (member_id != '0') {\n          if (businessusers.length > 0) {\n            businessusers.forEach(element => {\n              if (element.user_id == member_id) {\n                membername.push(`${element.first_name} ${element.last_name}`);\n              }\n            });\n          } else {\n            membername.push(get_name);\n          }\n\n          newChecked.push(member_id);\n          setMemberchecked(newChecked);\n        }\n\n        setGroupname_membersname(groupname.concat(membername));\n      }\n\n      if (member_id == undefined && group_id == undefined) {\n        const membername = [];\n        const members = [];\n        setMemberchecked(members);\n        setGroupname_membersname(membername);\n      }\n    }\n  }, [groups, businessusers]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FullscreenSpinner, {\n    open: isPageLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1075,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1076,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmationDialogRaw, {\n    open: open,\n    onClose: handleClose,\n    groupdata: groups,\n    memberdata: businessusers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1077,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tabmenu, {\n    groupdata: groups,\n    memberdata: businessusers,\n    handleToggles: handleGroupToggle,\n    checked: checked,\n    handleMemberToggle: handleMemberToggle,\n    memberchecked: memberchecked,\n    handleToTagvalue: handleToTagvalue,\n    group_members: group_members,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1078,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    className: \"main-wrap-head\",\n    container: true,\n    style: {\n      marginBottom: 20\n    },\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1090,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1091,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TypoHeadStyled, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1092,\n      columnNumber: 13\n    }\n  }, \"Parents\\u2019 \", /*#__PURE__*/React.createElement(TypoHeadInnerStyled, {\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1093,\n      columnNumber: 24\n    }\n  }, \"Evening booking\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1096,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1097,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleReset,\n    size: \"large\",\n    startIcon: /*#__PURE__*/React.createElement(Replay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1098,\n        columnNumber: 106\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1098,\n      columnNumber: 15\n    }\n  }, \"Reset\")))), /*#__PURE__*/React.createElement(PaperStyled, {\n    className: \"main-wrap-body book-cont-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GridStyled, {\n    className: \"booking-content\",\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AutocompleteStyled, {\n    multiple: true,\n    limitTags: 4,\n    id: \"tags-filled\",\n    filterSelectedOptions: false,\n    options: [],\n    freeSolo: true,\n    onChange: (event, newValue) => {\n      let newVal = newValue.toString();\n      let getArray = newVal.split(',');\n      let user_id_arr = [];\n      let group_id_arr = [];\n\n      for (let i = 0; i < getArray.length; i++) {\n        var getNewList = businessusers.find(ele => (ele.first_name + ' ' + ele.last_name).trim() == getArray[i]);\n\n        if (getNewList) {\n          user_id_arr.push(getNewList.user_id);\n        } else {\n          //FOR GROUPS\n          let getNewGroupList = groups.find(ele => ele.group_name == getArray[i]);\n          group_id_arr.push(getNewGroupList.group_id);\n        }\n      }\n\n      setGroup_members(group_id_arr);\n      setGroupname_membersname(newValue); //const formdata = { ...formvalue }\n\n      setChecked(group_id_arr);\n      setMemberchecked(user_id_arr); //formdata.message_group = (user_id_arr.join()) ? user_id_arr.join() :group_id_arr.join();\n      //formdata.to_member = user_id_arr.join();\n      //formdata.to_group = group_id_arr.join();\n\n      /*\n      const EventFormField = { ...formFeilds }\n       EventFormField.EventForm_to_group = user_id_arr.join()\n      EventFormField.EventForm_group_members_to = [...new Set(group_members)].join()\n      EventFormField.user_id = user_id\n      EventFormField.user_name = first_name\n      EventFormField.eventForm_to =*/\n    },\n    value: groupname_membersname,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"outlined\",\n      label: \"To\",\n      onChange: handleToopen,\n      onClick: handleToopen,\n      error: !!formValidation.eventForm_to,\n      helperText: formValidation.eventForm_to,\n      name: \"eventForm_to\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1159,\n        columnNumber: 19\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1109,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1171,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Subject\",\n    fullWidth: true,\n    variant: \"outlined\",\n    name: \"subject\",\n    value: formValue.subject,\n    onChange: subjectHandleinput,\n    error: !!formValidation.subject,\n    helperText: formValidation.subject,\n    className: \"mb-40\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1172,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    select: true,\n    label: \"Category\",\n    name: \"category\",\n    value: categoryVal,\n    fullWidth: true,\n    onChange: handleCategoryChange,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1184,\n      columnNumber: 15\n    }\n  }, category.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: option.img,\n    className: classes.categoryIon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1195,\n      columnNumber: 21\n    }\n  }), option.label)))), inputList.map((x, i) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    className: \"comfort-brkCard\",\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(GridVioletStyled, {\n    className: \"comfort-brkBox\",\n    container: true,\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1205,\n      columnNumber: 19\n    }\n  }, inputList.length > 1 && i > 0 && /*#__PURE__*/React.createElement(IconButtonStyled, {\n    color: \"primary\",\n    component: \"span\",\n    size: \"large\",\n    onClick: () => handleRemoveAnotherClick(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1208,\n      columnNumber: 21\n    }\n  }, x.isbooked_check ? true : /*#__PURE__*/React.createElement(Cancel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 51\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1216,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    label: \"Meeting Date\",\n    inputVariant: \"outlined\",\n    value: x.meetingDate,\n    onChange: event => handleInputChange(\"meetingDate\", event, i),\n    animateYearScrolling: true,\n    format: \"DD/MM/YYYY\",\n    fullWidth: true,\n    error: !!dynamicFormValidation[i].meetingDate,\n    helperText: dynamicFormValidation[i].meetingDate,\n    disabled: x.isbooked_check ? true : false,\n    disablePast: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1232,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    select: true,\n    label: \"Slot Duration\",\n    fullWidth: true,\n    value: x.currency,\n    disabled: x.isbooked_check ? true : false,\n    onChange: event => handleInputChange(\"currency\", event, i),\n    variant: \"outlined\",\n    error: !!dynamicFormValidation[i].currency,\n    helperText: dynamicFormValidation[i].currency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1233,\n      columnNumber: 23\n    }\n  }, currencies.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1245,\n      columnNumber: 27\n    }\n  }, option.label)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1252,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    inputVariant: \"outlined\",\n    label: \"Start Time\",\n    value: x.startTime,\n    disabled: x.isbooked_check ? true : false,\n    onChange: event => handleInputChange(\"startTime\", event, i),\n    fullWidth: true,\n    ampm: false,\n    error: !!dynamicFormValidation[i].startTime,\n    helperText: dynamicFormValidation[i].startTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1253,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1265,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    inputVariant: \"outlined\",\n    label: \"End Time\",\n    value: x.endTime,\n    disabled: x.isbooked_check ? true : false,\n    onChange: event => handleInputChange(\"endTime\", event, i),\n    fullWidth: true,\n    ampm: false,\n    error: !!dynamicFormValidation[i].endTime,\n    helperText: dynamicFormValidation[i].endTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1266,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    className: \"comfort-opt\",\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1278,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1279,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"break-txt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1280,\n      columnNumber: 25\n    }\n  }, \"Would you like to create a comfort break for this session?\"), /*#__PURE__*/React.createElement(Box, {\n    className: \"break-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1282,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(RadioGroup, {\n    className: \"inline-radio\",\n    \"aria-label\": \"breakStatus\",\n    name: \"breakStatus\",\n    value: x.breakStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1283,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: \"radio-lbl\",\n    disabled: x.isbooked_check ? true : false,\n    value: \"Yes\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      onChange: event => handleInputChange(\"breakStatus\", event, i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1288,\n        columnNumber: 133\n      }\n    }),\n    label: \"Yes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1288,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: \"radio-lbl\",\n    disabled: x.isbooked_check ? true : false,\n    value: \"No\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      onChange: event => handleInputChange(\"breakStatus\", event, i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1289,\n        columnNumber: 133\n      }\n    }),\n    label: \"No\",\n    checked: x.breakStatus == 'No' ? 'checked' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1289,\n      columnNumber: 27\n    }\n  }))))), x.breakStatus == 'Yes' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1297,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    inputVariant: \"outlined\",\n    label: \"Start Time\",\n    value: x.breakStartTime,\n    disabled: x.isbooked_check ? true : false,\n    onChange: event => handleInputChange(\"breakStartTime\", event, i),\n    fullWidth: true,\n    ampm: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1298,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1308,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(TimePicker, {\n    inputVariant: \"outlined\",\n    label: \"End Time\",\n    value: x.breakEndTime,\n    disabled: x.isbooked_check ? true : false,\n    onChange: event => handleInputChange(\"breakEndTime\", event, i),\n    fullWidth: true,\n    ampm: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1309,\n      columnNumber: 23\n    }\n  }))) : null)), /*#__PURE__*/React.createElement(Grid, {\n    className: \"block_gap\",\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1325,\n      columnNumber: 17\n    }\n  }, inputList.length - 1 === i && i < 4 && /*#__PURE__*/React.createElement(ButtonAddStyled, {\n    startIcon: /*#__PURE__*/React.createElement(AddCircle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1326,\n        columnNumber: 86\n      }\n    }),\n    color: \"primary\",\n    onClick: handleAddAnotherClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1326,\n      columnNumber: 58\n    }\n  }, \"Add another day\"), inputList.length - 1 === i && i < 4 && /*#__PURE__*/React.createElement(Divider, {\n    className: \"mt-30 mb-20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1327,\n      columnNumber: 58\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1332,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    label: \"Booking deadline date\",\n    inputVariant: \"outlined\",\n    value: setDate,\n    onChange: handleDateChange,\n    animateYearScrolling: true,\n    name: \"set_date\",\n    format: \"DD/MM/YYYY\",\n    fullWidth: true,\n    error: !!formValidation.set_date,\n    helperText: formValidation.set_date,\n    disablePast: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1333,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: \"mr-30 mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1346,\n      columnNumber: 13\n    }\n  }, \"Setting a deadline date helps contacts to book quickly.\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1365,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CKEditor, {\n    config: ckEditorConfig,\n    editor: Editor,\n    data: formValue.message,\n    name: \"message\",\n    error: !!formValidation.message,\n    onReady: editor => {\n      console.log('Editor is ready to use!', editor);\n    } // onChange={ ( event, editor ) => {\n    //   const data = editor.getData();\n    //   setMessage(data);\n    //   //console.log('formValue====',formValue);\n    //   // console.warn('dataert4545err', data);\n    //   //setFormValue({ ...formValue, message: data })\n    //   //messageHandleinput(data, true)\n    // }}\n    ,\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      setMessage(data);\n    } // onBlur={ ( event, editor ) => {\n    //     console.log( 'Blur.', editor );\n    //     const data = editor.getData();\n    //     setMessage(data);\n    // }}\n    ,\n    onFocus: (event, editor) => {\n      console.log('Focus.', editor);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1366,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1396,\n      columnNumber: 17\n    }\n  }, formValidation.message)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1400,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1401,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ButtonWarn, {\n    className: \"btn-booking\",\n    onClick: handleToSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    startIcon: /*#__PURE__*/React.createElement(Send, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1415,\n        columnNumber: 30\n      }\n    }),\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1410,\n      columnNumber: 17\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1418,\n      columnNumber: 31\n    }\n  }), checkupdate == 1 ? 'Update Booking' : 'Create Booking')))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.bookevent.loading,\n    error: state.bookevent.error,\n    sucessEvent: state.bookevent.sucessEvent,\n    groups: state.bookevent.groups,\n    bookdetails: state.booklist.bookdetails,\n    businessusers: state.bookevent.businessusers,\n    matched_contact: state.bookevent.matched_contact,\n    category: state.bookevent.category\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getGroups: data => dispatch(getGroups(data)),\n    getBookListDetail: data => dispatch(getBookListDetail(data)),\n    getBusinessUsers: data => dispatch(getBusinessUsers(data)),\n    createEventbook: (data, unmatch, history, sendAttachment) => dispatch(createEventbook(data, unmatch, history, sendAttachment)),\n    getCategory: () => dispatch(getCategory())\n  };\n};\n\nCreateEventbook.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  createEventbook: PropTypes.func.isRequired,\n  businessusers: PropTypes.array.isRequired,\n  getBusinessUsers: PropTypes.func.isRequired,\n  getGroups: PropTypes.func.isRequired,\n  getBookListDetail: PropTypes.func.isRequired,\n  matched_contact: PropTypes.any.isRequired,\n  getCategory: PropTypes.any.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(CreateEventbook));","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/Bookings/EventBooking/EventBookingDuplicate.js"],"names":["Visibility","Replay","Send","AddCircle","Cancel","Box","Button","Checkbox","FormControlLabel","Grid","MenuItem","Paper","Switch","TextField","Typography","Radio","RadioGroup","Divider","FormControl","FormLabel","IconButton","DatePicker","MuiPickersUtilsProvider","TimePicker","makeStyles","styled","MomentUtils","Autocomplete","React","useEffect","useMemo","useState","connect","useDispatch","createEventbook","getBusinessUsers","getGroups","getCategory","getBookListDetail","moment","withSnackbar","PropTypes","CircularSpinner","FullscreenSpinner","Tabmenu","ConfirmationDialogRaw","Link","useHistory","useParams","CKEditor","Editor","ckEditorConfig","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","position","categoryIon","height","margin","marginLeft","marginRight","TypoHeadStyled","fontSize","primary","main","textTransform","fontWeight","TypoHeadInnerStyled","PaperStyled","GridStyled","GridVioletStyled","background","borderRadius","minHeight","AutocompleteStyled","alignItems","ButtonAddStyled","currencies","value","label","category","category_id","img","require","IconButtonStyled","error","right","top","cursor","width","FormFields","message","EventForm_to_group","eventForm_to","user_id","user_name","subject","dynaminc_field","allow_parents","set_date","id","CreateEventbook","props","business_code","first_name","last_name","JSON","parse","localStorage","getItem","enqueueSnackbar","sucessEvent","groups","bookdetails","businessusers","loading","matched_contact","formValue","setFormValue","formValidation","setFormValidation","setDate","setDateChange","categoryVal","setCategoryVal","allowParentValue","setAllowParent","getMessage","setMessage","history","date","Date","checked","setChecked","memberchecked","setMemberchecked","group_members","setGroup_members","groupname_membersname","setGroupname_membersname","setEventForm_to","checkupdate","setCheckupdate","showTime","setShowTime","tempTime","setTempTime","isPageLoading","setPageLoading","ID","member_id","group_id","get_name","dataToSend","SendToBusiness","undefined","setTimeout","event_date","add_comment","console","log","newChecked","mem_checked","groupname","mobile_name","temp","event_to_group","split","forEach","element","index","push","parseInt","event_to","event_group_name","indexOf","event_mobile_no","filter","x","user","length","data","i","concat","new_meet_data","new_meet_data_frm","dynamic_valid","formdata","formvalidation","subjectHandleinput","e","isEditor","name","target","handleCategoryChange","event","cat_id","subcategory_id","inputList","setInputList","meetingDate","currency","startTime","endTime","breakStatus","breakStartTime","breakEndTime","isbooked_check","saveInputList","setSaveInputList","dynamicFormValidation","setDynamicFormValidation","handleInputChange","fieldName","list","saveList","vali","fieldsArr","fieldVal","saveFieldVal","saveVali","format","prevValue","currentVal","handleAddAnotherClick","tempBreakStatus","meetDate","getDate","add","addDays","meetDate2","handleRemoveAnotherClick","splice","handleAllowparents","phoneNumber","setPhoneNumber","handleTag","newNumber","Array","from","Set","handleDateChange","selecteddate","setCurrency","note","setNote","handleChange","handlenoteChange","classes","ButtonColor","contrastText","ButtonWarn","warning","open","setOpen","handleToopen","handleClose","newValue","membername","checkvalue","group_name","mobile_no","join","handleGroupToggle","groupMembers","group_member_list","currentIndex","selectedmember","remomeitem","handleMemberToggle","validate","isError","handleToTagvalue","dynamicValidate","dynamicFormVal","form_filed_change_val","requiredMsg","currencyVal","slotDuration","startTimeSec","getSeconds","endTimeSec","startTimeSlotDurSec","breakEndTimeSec","hms","hrs","mins","hours","minutes","handleReset","handleToSubmit","formFeilds","EventFormField","tempChecked","tempMemberChecked","map","isNaN","EventForm_group_members_to","unmatch","sendAttachment","variant","members","marginBottom","newVal","toString","getArray","user_id_arr","group_id_arr","getNewList","find","ele","trim","getNewGroupList","params","option","editor","getData","mapStateToProps","state","bookevent","booklist","mapDispatchToProps","dispatch","propTypes","func","isRequired","bool","array","any"],"mappings":"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","sourcesContent":["import { Visibility, Replay, Send, AddCircle, Cancel } from '@material-ui/icons'\nimport {\n  Box,\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  MenuItem,\n  Paper,\n  Switch,\n  TextField,\n  Typography,\n  Radio,\n  RadioGroup, Divider,\n  FormControl, FormLabel, IconButton\n} from '@material-ui/core'\nimport { DatePicker, MuiPickersUtilsProvider, TimePicker } from '@material-ui/pickers'\n\nimport { makeStyles, styled } from '@material-ui/core/styles'\nimport MomentUtils from '@date-io/moment'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\n\nimport React, { useEffect, useMemo, useState } from 'react'\n\nimport { connect,useDispatch} from 'react-redux'\nimport {\n  createEventbook,\n  getBusinessUsers,\n  getGroups,\n  getCategory\n} from '../../../store/actions/bookevent'\n\nimport {\n  getBookListDetail,\n} from '../../../store/actions/booklist'\n\nimport moment from 'moment'\nimport { withSnackbar } from 'notistack'\nimport PropTypes from 'prop-types'\n\n\nimport CircularSpinner from '../../../component/CircularSpinner/index'\nimport FullscreenSpinner from '../../../component/FullscreenSpinner/index';\nimport Tabmenu from './Modal/Memberlist'\nimport ConfirmationDialogRaw from './Modal'\nimport { Link, useHistory,useParams } from 'react-router-dom'\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\nimport ckEditorConfig from '../../../helper/ckEditorConfig'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative'\n  },\n  categoryIon: {\n    height: 32,\n    margin: -10,\n    marginLeft: 0,\n    marginRight: 10\n  },\n}))\n\nconst TypoHeadStyled = styled(Typography)(({ theme }) => ({\n    fontSize: 24,\n    color: theme.palette.primary.main,\n    textTransform: 'uppercase',\n    fontWeight: 'bold'\n  }))\n\n  const TypoHeadInnerStyled = styled(TypoHeadStyled)(({ theme }) => ({\n    color: theme.palette.text.primary\n  }))\n\n  const PaperStyled = styled(Paper)({\n    padding: '35px 15px',\n    height: 100 + '%'\n  })\n\n  const GridStyled = styled(Grid)(({ theme }) => ({}))\n  const GridVioletStyled = styled(Grid)({\n    padding: '10px 0',\n    height: 100 + '%',\n    background: '#edf8fe',\n    borderRadius: 15,\n    minHeight: 210,\n    position: 'relative'\n  })\n\n  const AutocompleteStyled = styled(Autocomplete)({\n    height: 154,\n    '&>div': {\n      margin: 0,\n      '&>div': { height: 154, alignItems: 'flex-start' }\n    }\n  })\n\n  const ButtonAddStyled = styled(Button)({\n    fontSize: 16,\n    fontWeight: 'bold',\n    '& svg': {\n      fontSize: '28px !important'\n    }\n  })\n  const currencies = [\n  {\n      value: '10',\n      label: '10 Min'\n    },\n    {\n      value: '15',\n      label: '15 Min'\n    },\n    {\n      value: '30',\n      label: '30 Min'\n    },\n     {\n      value: '45',\n      label: '45 Min'\n    },\n      {\n      value: '1',\n      label: '1 Hour'\n    },\n    {\n      value: '2',\n      label: '2 Hour'\n    },\n  ]\n\n  const category = [\n    {\n      value: 'Parents Evening',\n      label: 'Parents Evening',\n      category_id: 159,\n      img: require('../../../assets/images/parent.png')\n    },\n    {\n      value: 'Event',\n      label: 'Event',\n      category_id: 158,\n      img: require('../../../assets/images/event.png')\n    },\n    {\n      value: 'Appointment',\n      label: 'Appointment',\n      category_id: 157,\n      img: require('../../../assets/images/event_blue.png')\n    }\n  ]\n\n const IconButtonStyled = styled(IconButton)(({ theme }) => ({\n    color: theme.palette.error.main,\n    position: 'absolute',\n    right: -15,\n    top: -15,\n    cursor: 'pointer',\n    '& svg': {\n      width: '2.3rem',\n      height: '2.3rem'\n    }\n  }))\n\n//form field\nconst FormFields = {\n\n  message: '',\n  EventForm_to_group: '',\n  eventForm_to: '',\n  user_id: '',\n  user_name: '',\n  subject:'',\n  category:'',\n  dynaminc_field: '',\n  allow_parents:'',\n  set_date:'',\n  id:'',\n}\n\nconst CreateEventbook = (props) => {\n\nconst { user_id, business_code, first_name, last_name } = JSON.parse(localStorage.getItem('userData'));\n\n const {\n    enqueueSnackbar,\n    error,\n    sucessEvent,\n    getGroups,\n    getBookListDetail,\n    groups,\n    bookdetails,\n    businessusers,\n    getBusinessUsers,\n     loading,\n    matched_contact,\n    createEventbook,\n    getCategory\n  } = props\n\nconst [formValue, setFormValue] = useState(FormFields)\nconst [formValidation, setFormValidation] = useState(FormFields)\nconst [setDate, setDateChange]        = useState()\nconst [categoryVal, setCategoryVal]   = React.useState('')\nconst [allowParentValue, setAllowParent] = useState('');\nconst [getMessage, setMessage] = useState('');\nconst history = useHistory()\nconst date = new Date()\nconst [checked, setChecked] = useState([])\nconst [memberchecked, setMemberchecked] = useState([])\nconst [group_members, setGroup_members] = useState([])\nconst [groupname_membersname, setGroupname_membersname] = useState([])\nconst [eventForm_to, setEventForm_to] = useState('')\n\nconst [checkupdate, setCheckupdate] = useState(0)\nconst [showTime, setShowTime] = useState('No')\nconst [tempTime, setTempTime] = useState()\nconst [isPageLoading, setPageLoading] = useState(false);\n\n//let { ID } = useParams();\nlet { ID, member_id, group_id, get_name } = useParams()\n\n  useEffect(() => {\n    const dataToSend = {\n      user_id,\n      category_id: ''\n    }\n   // props.getcategories(dataToSend)\n    getGroups({ user_id })\n    const SendToBusiness = {\n      user_id,\n      business_code\n    }\n    getBusinessUsers(SendToBusiness);\n\n    // getCategory();\n\n    if(ID != undefined){\n      setPageLoading(true);\n        getBookListDetail({ID,user_id});\n    }\n  }, [])\n\n useEffect(() => {\n  if(ID != undefined){\n    if(bookdetails !==null){\n      setPageLoading(false);\n      setTimeout(() => {setFormValue({\n        id: ID,\n        message: bookdetails[0].message,\n        subject: bookdetails[0].subject,\n        set_date: bookdetails[0].event_date,\n        category: bookdetails[0].category,\n        allow_parents: bookdetails[0].add_comment,\n        eventForm_to: '@'\n      })}, 0)\n      console.log('bookdetails--',bookdetails)\n\n\n      if(bookdetails[0].category == '157') {\n        setCategoryVal('Appointment')\n      }\n      else if(bookdetails[0].category == '158') {\n        setCategoryVal('Event')\n      }\n      else if (bookdetails[0].category == '159'){\n        setCategoryVal('Parents Evening')\n      }\n      // setCategoryVal(bookdetails[0].category);\n      //setDateChange(moment(bookdetails[0].event_date));\n      setAllowParent(bookdetails[0].add_comment);\n\n          //this is for popoup\n      const newChecked = [];\n      const mem_checked=[];\n      const groupname = [];\n      const mobile_name = [];\n      var temp = null;\n\n      bookdetails[0].event_to_group.split(',').forEach((element, index) => {\n        newChecked.push(parseInt(element))\n      });\n      bookdetails[0].event_to.split(',').forEach((element, index) => {\n        mem_checked.push(element)\n      });\n\n      if(bookdetails[0].event_group_name !=null){\n        bookdetails[0].event_group_name.split(',').forEach((element, index) => {\n        if(groupname.indexOf(element) === -1) {groupname.push(element)};\n\n      });\n    }\n    if(bookdetails[0].event_mobile_no !=null){\n      bookdetails[0].event_mobile_no.split(',').forEach((element, index) => {\n        temp = businessusers.filter((x) => element.user_id == element)\n      // if(mobile_name.indexOf(element) === -1) {mobile_name.push(element)};\n\n    });\n    if(temp) {\n      bookdetails[0].user && bookdetails[0].user.length > 0 && bookdetails[0].user.forEach((data, i) => {\n        mobile_name.push(data.user_name)\n      })\n    }\n  }\n\n  setChecked(newChecked)\n  setMemberchecked(mem_checked)\n  setGroupname_membersname(groupname.concat(mobile_name))\n  //popup end\n\n  //dynamic eleent start\n  var new_meet_data=[];\n  var new_meet_data_frm =[];\n  var dynamic_valid=[];\n\n  // bookdetails[0].meeting_data.forEach((element, index) => {\n  // // list[index][fieldName]    = fieldVal\n  // let innerObj = {};\n  // let innerObj_frm={};\n  // let  innerObj_valid={};\n\n  // innerObj['meetingDate'] = moment(element.meeting_date);\n  // innerObj['startTime']   = moment(element.meeting_date+' '+element.meeting_time_start);\n  // innerObj['endTime']     = moment(element.meeting_date+' '+element.meeting_time_end);\n  // innerObj['currency']    = element.meeting_slot;\n  // innerObj['breakStatus']    = element.comfort_break;\n  // innerObj['breakStartTime'] = moment(element.meeting_date+' '+element.meeting_time_start1);\n  // innerObj['breakEndTime']   = moment(element.meeting_date+' '+element.meeting_time_end1);\n  // innerObj['isbooked_check']   = element.is_slot_book;\n\n  // innerObj_frm['meetingDate'] = element.meeting_date;\n  // innerObj_frm['startTime']   = element.meeting_date+' '+element.meeting_time_start;\n  // innerObj_frm['endTime']     = element.meeting_date+' '+element.meeting_time_end;\n  // innerObj_frm['currency']    = element.meeting_slot;\n  // innerObj_frm['breakStatus']    = element.comfort_break;\n  // innerObj_frm['breakStartTime'] =element.meeting_date+' '+element.meeting_time_start1;\n  // innerObj_frm['breakEndTime']   =element.meeting_date+' '+element.meeting_time_end1;\n\n  // innerObj_valid['meetingDate'] = '';\n  // innerObj_valid['startTime']   = '';\n  // innerObj_valid['endTime']     = '';\n  // innerObj_valid['currency']    = '';\n  // innerObj_valid['breakStatus']    = '';\n  // innerObj_valid['breakStartTime'] ='';\n  // innerObj_valid['breakEndTime']   ='';\n\n  // new_meet_data.push(innerObj);\n  // new_meet_data_frm.push(innerObj_frm);\n  // dynamic_valid.push(innerObj_valid);\n  // });\n\n  \n  //setInputList(new_meet_data);\n\n  // setDynamicFormValidation(dynamic_valid);\n  // setSaveInputList(new_meet_data_frm);\n  setAllowParent(bookdetails[0].add_comment);\n  //end of dyamic field\n  setFormValue({ ...formValue, set_date:moment(bookdetails[0].event_date)  })\n\n  \n      }\n    }\n   },[bookdetails])\n\n//  const handleinput = (e, isEditor=null) => {\n//     const formdata = { ...formValue}\n//     const formvalidation = { ...formValidation }\n//     if(!isEditor){\n//       const { name, value } = e.target;\n//       if (name === 'message') {\n//         formdata.message = value\n//         formvalidation.message = ''\n//         setFormValidation(formvalidation)\n//         }else if(name === 'subject'){\n//         formdata.subject = value\n//         formvalidation.subject = ''\n//         setFormValidation(formvalidation)\n//         }\n//         else {\n//           formdata[name] = value\n//         }\n//     }\n\n//     else{\n//       formdata.message = e\n//       formvalidation.message = ''\n//       setFormValidation(formvalidation)\n//     }\n\n//     setFormValue(formdata)\n//   }\n\nuseEffect(() => {\n  const formdata = { ...formValue}\n    const formvalidation = { ...formValidation };\n    formdata.message = getMessage;\n    formvalidation.message = '';\n    setFormValidation(formvalidation);\n    setFormValue(formdata);\n},[getMessage])\n\n\nconst subjectHandleinput = (e, isEditor=null) => {\n  const formdata = { ...formValue}\n  const formvalidation = { ...formValidation }\n  const { name, value } = e.target;\n  formdata.subject = value\n  formvalidation.subject = ''\n  setFormValidation(formvalidation)\n  setFormValue(formdata)\n}\n\nconst handleCategoryChange = (event) => {\n    setCategoryVal(event.target.value)\n    var cat_id = \"\";\n    if(event.target.value == \"Parents Evening\") {\n      cat_id = 159;\n    } else if(event.target.value == \"Event\") {\n      cat_id = 158;\n    }  else {\n      cat_id = 157;\n    }\n    setFormValue({ ...formValue, subcategory_id: cat_id, category: event.target.value })\n  }\n\n\n//start cloneing field\n // Add remove fields\n  const [inputList, setInputList] = useState([{\n    meetingDate:new Date(),\n    currency: '15',\n    startTime: new Date(),\n    endTime : new Date(),\n    breakStatus: '0',\n    breakStartTime: new Date(),\n    breakEndTime: new Date(),\n    isbooked_check: 0,\n  }]);\n\n  // Save data array value\n  const [saveInputList, setSaveInputList] = useState([{\n      meetingDate:'',\n      currency: '15',\n      startTime: '',\n      endTime : '',\n      breakStatus: '0',\n      breakStartTime: '',\n      breakEndTime: '',\n  }]);\n\n  const [dynamicFormValidation, setDynamicFormValidation] = useState([{\n  meetingDate:'',\n  currency: '',\n  startTime: '',\n  endTime : '',\n  breakStatus: '',\n  breakStartTime: '',\n  breakEndTime: '',\n}]);\n  // handle input change\n  const handleInputChange = (fieldName, event, index) => {\n\n    const list = [...inputList]\n    const saveList = [...saveInputList]\n    const vali = [...dynamicFormValidation]\n    const fieldsArr = ['startTime', 'endTime', 'breakStartTime', 'breakEndTime']\n    var fieldVal     = ''\n    var saveFieldVal = ''\n    var saveVali=''\n    if(fieldName=='meetingDate'){\n\n      fieldVal = event\n      const date = new Date(event)\n      saveFieldVal = moment(date).format('YYYY-MM-DD');\n      saveVali='';\n\n    } else if(fieldsArr.indexOf(fieldName)>=0) {\n      fieldVal     = event\n      const date = new Date(event)\n      saveFieldVal = moment(date).format('HH:mm')\n      // setTempTime(event)\n    } else if(fieldName=='breakStatus') {\n\n      let prevValue  = list[index][fieldName];\n      let currentVal = (prevValue!==event.target.value) ? event.target.value : '';\n      fieldVal      = currentVal\n      saveFieldVal  = currentVal\n\n      if(currentVal === 'Yes') {\n        setShowTime(\"Yes\")\n      }\n      else {\n        setShowTime('No')\n      }\n    } else {\n      fieldVal      = event.target.value\n      saveFieldVal  = event.target.value\n      // saveVali=event.target.value\n    }\n\n    list[index][fieldName]    = fieldVal\n    saveList[index][fieldName]= saveFieldVal\n    vali[index][fieldName]=saveVali\n\n    setInputList(list);\n    setSaveInputList(saveList);\n    setDynamicFormValidation(vali);\n  };\n\n\n  // handle click event of the Add button\n  const handleAddAnotherClick = () => {\n    let tempBreakStatus = '0';\n\n    if (inputList.length > 0 && inputList[inputList.length - 1].breakStatus == 'No') {\n      tempBreakStatus = 'No';\n    } else {\n      tempBreakStatus = 'Yes';\n    }\n\n    const date = new Date(tempTime);\n\n    let meetDate = '';\n\n    if (inputList.length > 0) {\n      let getDate = moment(new Date(inputList[inputList.length - 1].meetingDate), 'DD-MM-YYYY').add(1, 'days');\n      meetDate = getDate.format('YYYY-MM-DD');\n    } else {\n      meetDate = new Date().addDays(1);\n    }\n\n    setInputList([\n      ...inputList,\n      {\n        // meetingDate: inputList.length > 0 ? (inputList[inputList.length-1].meetingDate).addDays(1) : new Date().addDays(1),\n        //meetingDate: inputList.length > 0 ? moment(inputList[inputList.length-1].meetingDate, \"DD-MM-YYYY\").add(1, 'days') : new Date().addDays(1),\n        meetingDate: meetDate,\n        currency: inputList.length > 0 ? inputList[inputList.length - 1].currency : '',\n        startTime: inputList.length > 0 ? inputList[inputList.length - 1].startTime : new Date(),\n        endTime: inputList.length > 0 ? inputList[inputList.length - 1].endTime : new Date(),\n        breakStatus: tempBreakStatus,\n        breakStartTime: inputList.length > 0 ? inputList[inputList.length - 1].breakStartTime : new Date(),\n        breakEndTime: inputList.length > 0 ? inputList[inputList.length - 1].breakEndTime : new Date(),\n      },\n    ]);\n\n    let meetDate2 = '';\n    if (saveInputList.length > 0) {\n      let getDate = moment(new Date(saveInputList[saveInputList.length - 1].meetingDate), 'DD-MM-YYYY').add(1, 'days');\n      meetDate2 = getDate.format('YYYY-MM-DD');\n    } else {\n      meetDate2 = new Date().addDays(1);\n    }\n    setSaveInputList([\n      ...saveInputList,\n      {\n        // meetingDate: saveInputList.length > 0 ? (saveInputList[saveInputList.length-1].meetingDate).addDays(1) : new Date().addDays(1),\n        //meetingDate: saveInputList.length > 0 ? moment(saveInputList[saveInputList.length-1].meetingDate, \"DD-MM-YYYY\").add(1, 'days') : new Date().addDays(1),\n        meetingDate: meetDate2,\n        currency: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].currency : '',\n        startTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].startTime : new Date(),\n        endTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].endTime : new Date(),\n        breakStatus: tempBreakStatus,\n        breakStartTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].breakStartTime : new Date(),\n        breakEndTime: saveInputList.length > 0 ? saveInputList[saveInputList.length - 1].breakEndTime : new Date(),\n      },\n    ]);\n    setDynamicFormValidation([\n      ...dynamicFormValidation,\n      {\n        meetingDate: '',\n        currency: '',\n        startTime: '',\n        endTime: '',\n        breakStatus: '',\n        breakStartTime: '',\n        breakEndTime: '',\n      },\n    ]);\n\n    // setSaveInputList([...saveInputList, {\n    //   // meetingDate:'',\n    //   // currency: '',\n    //   // startTime: '',\n    //   // endTime : '',\n    //   // breakStatus: '0',\n    //   // breakStartTime: '',\n    //   // breakEndTime: '',\n    //   meetingDate: inputList.length > 0 ? inputList[inputList.length-1].meetingDate : '',\n    //     currency: inputList.length > 0 ? inputList[inputList.length-1].currency : '',\n    //     startTime: inputList.length > 0 ? inputList[inputList.length-1].startTime : '',\n    //     endTime : inputList.length > 0 ? inputList[inputList.length-1].endTime : '',\n    //     breakStatus: tempBreakStatus,\n    //     breakStartTime: inputList.length > 0 ? inputList[inputList.length-1].breakStartTime : '',\n    //     breakEndTime: inputList.length > 0 ? inputList[inputList.length-1].breakEndTime : '',\n    // }]);\n  };\n\n  // handle click event of the Remove button\n  const handleRemoveAnotherClick = index => {\n    const list     = [...inputList];\n    const saveList = [...saveInputList]\n    const  vali    =[...dynamicFormValidation]\n    list.splice(index, 1);\n    saveList.splice(index, 1);\n    vali.splice(index, 1);\n    setInputList(list);\n    setSaveInputList(saveList);\n    setDynamicFormValidation(vali);\n  };\n\n//end cloning\n\nconst handleAllowparents = (event) => {\n    if (event.target.value === allowParentValue) {\n      setAllowParent(\"\");\n    } else {\n      setAllowParent(event.target.value);\n    }\n    setFormValue({ ...formValue, allow_parents: event.target.value })\n  }\n\n  const [phoneNumber, setPhoneNumber] = useState([])\n  const handleTag = (e) => {\n    const newNumber = [...phoneNumber, e.target.value]\n    setPhoneNumber(Array.from(new Set(newNumber)))\n  }\nconst handleDateChange = (e) => {\n    const date = new Date(e)\n    const selecteddate = moment(date).format('YYYY-MM-DD')\n    setDateChange(selecteddate)\n    const formvalidation = { ...formValidation }\n     formvalidation.set_date = ''\n        setFormValidation(formvalidation)\n    setFormValue({ ...formValue, set_date: selecteddate })\n  }\n\n  //const [selectedDate, handleDateChange] = useState(new Date())\n  //const [selectedTime, handleTimeChange] = useState(new Date())\n\n  const [currency, setCurrency] = React.useState('10')\n   const [note, setNote] = React.useState('')\n\n  const handleChange = (event) => {\n    setCurrency(event.target.value)\n  }\nconst handlenoteChange = (e) => {\n    setNote(e.target.value)\n  }\n\n  const classes = useStyles()\n\n  const ButtonColor = styled(Button)(({ theme }) => ({\n    background: theme.palette.props.main,\n    color: theme.palette.props.contrastText\n  }))\n\n  const ButtonWarn = styled(Button)(({ theme }) => ({\n    background: theme.palette.warning.main,\n    color: theme.palette.warning.contrastText\n  }))\n\n\nconst [open, setOpen] = useState(false);\nconst handleToopen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = (newValue) => {\n    setOpen(newValue)\n    const membername = []\n    const groupname = []\n    groups.forEach((element) => {\n      const checkvalue = checked.indexOf(element.group_id)\n      if (checkvalue !== -1) {\n        groupname.push(element.group_name)\n      }\n    })\n\n    if(businessusers.length > 0 ){\n      businessusers.forEach((element) => {\n        const checkvalue = memberchecked.indexOf(element.user_id)\n        if (checkvalue !== -1) {\n          membername.push(`${element.first_name} ${element.last_name}`)\n        }\n      })\n    }\n\n    setGroupname_membersname(groupname.concat(membername))\n    const dataToSend = {\n      mobile_no: phoneNumber.join()\n    }\n    if (newValue) {\n      // setValue(newValue);\n    }\n  }\n\n\n  const handleGroupToggle = (value) => {\n    const groupMembers = value.group_member_list\n    const currentIndex = checked.indexOf(value.group_id)\n    const newChecked = [...checked]\n    const selectedmember = [...group_members]\n\n    if (currentIndex === -1) {\n      newChecked.push(value.group_id)\n      groupMembers.forEach((element) => {\n        selectedmember.push(element.user_id)\n      })\n    } else {\n      newChecked.splice(currentIndex, 1)\n      groupMembers.forEach((element) => {\n        const remomeitem = selectedmember.indexOf(element.user_id)\n        selectedmember.splice(remomeitem, 1)\n      })\n    }\n const formvalidation = { ...formValidation }\n    formvalidation.eventForm_to = ''\n    setFormValidation(formvalidation)\n     setFormValue({ ...formValue, eventForm_to: '@' })\n    setChecked(newChecked)\n    setGroup_members(selectedmember)\n  }\n  const handleMemberToggle = (value) => {\n    const currentIndex = memberchecked.indexOf(value.user_id)\n    const newChecked = [...memberchecked]\n\n    if (currentIndex === -1) {\n      newChecked.push(value.user_id)\n    } else {\n      newChecked.splice(currentIndex, 1)\n    }\n     const formvalidation = { ...formValidation }\n     setFormValue({ ...formValue, eventForm_to: '@' })\n    formvalidation.eventForm_to = ''\n    setFormValidation(formvalidation)\n\n    setMemberchecked(newChecked)\n  }\n\n/*\n useMemo(() => {\n    alert('sddd');\n      setFormValue({ ...formValue, message:bookdetails[0].message  })\n\n  }, [bookdetails])\n*/\n\n  const validate = () => {\n\n    const formvalidation = { ...formValidation }\n    let isError = false\n     if (!formValue.message) {\n      isError = true\n      formvalidation.message = 'Please add some message'\n      setFormValidation(formvalidation)\n    }\n     if (!formValue.subject) {\n      isError = true\n      formvalidation.subject = 'Please add some subject'\n      setFormValidation(formvalidation)\n    }\n    // if (!formValue.eventForm_to) {\n    //   isError = true\n    //   formvalidation.eventForm_to = 'Please add contact'\n    //   setFormValidation(formvalidation)\n    // }\n    if (groupname_membersname.length == 0) {\n      isError = true\n      formvalidation.eventForm_to = 'Please add contact'\n      setFormValidation(formvalidation)\n    }\n    if (!formValue.set_date) {\n      isError = true\n      formvalidation.set_date = 'Please Select valid Date'\n      setFormValidation(formvalidation)\n    }\n\n    return isError\n  }\n\n  const handleToTagvalue = (value) => {\n    setPhoneNumber(value)\n  }\n\n\n//dynamic field validation\n/*\nconst dynamicValidate_old = () => {\n  const dynamicFormVal = [...dynamicFormValidation ]\n    const form_filed_change_val = [...saveInputList]\n  let isError = false\n  for (var i = 0; i < dynamicFormVal.length; i++) {\n    if(!form_filed_change_val[i].meetingDate){\n    isError = true\n    dynamicFormVal[i].meetingDate = 'This field is isRequired to select future date'\n    setDynamicFormValidation(dynamicFormVal)\n    }\n    if(!form_filed_change_val[i].endTime){\n    isError = true\n    dynamicFormVal[i].endTime = 'This field is isRequired'\n    setDynamicFormValidation(dynamicFormVal)\n    }\n    if(!form_filed_change_val[i].startTime){\n    isError = true\n    dynamicFormVal[i].startTime = 'This field is isRequired'\n    setDynamicFormValidation(dynamicFormVal)\n    }\n  }\n\n\n  return isError\n};\n*/\n//dynamic field validation\nconst dynamicValidate = () => {\n  const dynamicFormVal = [...dynamicFormValidation ]\n  const form_filed_change_val = [...saveInputList]\n\n  let requiredMsg = 'This field is required'\n  let isError = false\n  for (var i = 0; i < dynamicFormVal.length; i++) {\n    let meetingDate    = form_filed_change_val[i].meetingDate\n    let currency       = (form_filed_change_val[i].currency) ? form_filed_change_val[i].currency : 0;\n    let startTime      = form_filed_change_val[i].startTime;\n    let endTime        = form_filed_change_val[i].endTime;\n    let breakStartTime = form_filed_change_val[i].breakStartTime;\n    let breakEndTime   = form_filed_change_val[i].breakEndTime;\n    let breakStatus    = form_filed_change_val[i].breakStatus;\n\n    if(!meetingDate){\n      isError = true\n      dynamicFormVal[i].meetingDate = requiredMsg\n      setDynamicFormValidation(dynamicFormVal)\n    }\n\n    // if(currency<1){\n\n    //   isError = true\n    //   dynamicFormVal[i].currency = requiredMsg\n    //   setDynamicFormValidation(dynamicFormVal)\n    // }\n\n    if(!startTime){\n      isError = true\n      dynamicFormVal[i].startTime = requiredMsg\n      setDynamicFormValidation(dynamicFormVal)\n    }\n\n    if(!endTime){\n      isError = true\n      dynamicFormVal[i].endTime = requiredMsg\n      setDynamicFormValidation(dynamicFormVal)\n    }\n\n    if(startTime && endTime){\n      let currencyVal     = (currency<10) ? currency*60: currency\n      let slotDuration  = '0:'+currencyVal\n      let startTimeSec  = getSeconds(startTime)\n      let endTimeSec    = getSeconds(endTime)\n      let startTimeSlotDurSec = startTimeSec+getSeconds(slotDuration);\n      if(currencyVal){\n        if(endTimeSec <= startTimeSlotDurSec){\n          isError = true\n          dynamicFormVal[i].endTime = 'End Time must be grater than addition of Start Time & Slot Duration'\n          setDynamicFormValidation(dynamicFormVal)\n        }\n      }\n\n      if(breakStatus==1 && breakEndTime && breakStartTime){\n        let breakStartTime    = getSeconds(breakStartTime);\n        let breakEndTimeSec   = getSeconds(breakEndTime);\n\n\n        if((breakStartTime < startTimeSec || breakStartTime > endTimeSec) || (breakEndTimeSec < startTimeSec || breakEndTimeSec > endTimeSec)){\n          isError = true\n          dynamicFormVal[i].breakEndTimeSec = 'Please select break time between above Start Time and End Time'\n          setDynamicFormValidation(dynamicFormVal)\n        }\n\n        if(breakStartTime < breakEndTimeSec){\n          isError = true\n          dynamicFormVal[i].breakEndTimeSec = 'End Time must be grater than Start Time'\n          setDynamicFormValidation(dynamicFormVal)\n        }\n      }\n    }\n  }\n\n\n  return isError\n};\n\nconst getSeconds = (hms: string) : number => {\n  let hrs = 1;\n  let mins = 1;\n\n  if(typeof hms == 'object') {\n    hms = moment(hms).format('HH:mm');\n\n    let [hours, minutes] = hms.split(':');\n\n    hrs  = hours * 3600\n    mins = minutes * 60\n  }\n  else {\n    let [hours, minutes] = hms.split(':');\n      hrs  = hours * 3600\n      mins = minutes * 60\n  }\n\n  return hrs+mins\n};\n\nconst handleReset = () => {\n\n  console.log('formValue==',formValue);\n\n  setFormValue({ ...formValue, EventForm_to_group: '',allow_parents: '',category: '',dynaminc_field: '',eventForm_to: '',message: '',subject: '',subcategory_id: 157, category:'Appointment'});\n  setCategoryVal('Appointment');\n  setDateChange(moment(new Date()));\n  setGroupname_membersname([])\n  setMemberchecked([]);\n  setChecked([]);\n  setGroup_members([]);\n\n  setSaveInputList([\n    {\n      meetingDate: new Date(),\n      currency: '15',\n      startTime: '',\n      endTime: '',\n      breakStatus: '0',\n      breakStartTime: '',\n      breakEndTime: '',\n    },\n  ]);\n  setInputList([\n    {\n      meetingDate: new Date(),\n      currency: '15',\n      startTime: new Date(),\n      endTime: new Date(),\n      breakStatus: '0',\n      breakStartTime: new Date(),\n      breakEndTime: new Date(),\n      isbooked_check: 0,\n    },\n  ]);\n  setDynamicFormValidation([\n    {\n      meetingDate: '',\n      currency: '',\n      startTime: '',\n      endTime: '',\n      breakStatus: '',\n      breakStartTime: '',\n      breakEndTime: '',\n    },\n  ]);\n}\n  const handleToSubmit = () => {\n\n    if (validate()) return false\n      if (dynamicValidate())return false\n\n    const formFeilds = { ...formValue }\n    formFeilds.dynaminc_field=saveInputList;\n   // if (validate()) return false\n    const EventFormField = { ...formFeilds }\n\n    let tempChecked = []\n    let tempMemberChecked = []\n\n    checked.map((data, i) => {\n      if(!isNaN(data)) {\n        tempChecked.push(data)\n      }\n    })\n\n    // if(ID != null) {\n    //   if(bookdetails !==null){\n    //     EventFormField.id = ID\n    //   }\n    // }\n    EventFormField.allow_parents = formValue.allow_parents\n    EventFormField.EventForm_to_group = tempChecked.join()\n    EventFormField.EventForm_group_members_to = [...new Set(group_members)].join()\n    EventFormField.user_id = user_id\n    EventFormField.user_name = first_name\n\n    memberchecked.map((data, i) => {\n      if(!isNaN(data)) {\n        tempMemberChecked.push(data)\n      }\n    })\n\n    EventFormField.eventForm_to =\n        matched_contact !== null ? tempMemberChecked.join() + ',' + matched_contact.user_id : tempMemberChecked.join()\n    EventFormField.subcategory_id = EventFormField.subcategory_id ? EventFormField.subcategory_id : \"157\";\n\n    const unmatch = matched_contact ? matched_contact.mobile_no : ''\n\n   // return false;\n  const sendAttachment='';\n    console.log('EventFormField=====',EventFormField);\n    createEventbook(EventFormField, unmatch, history, sendAttachment);\n  }\n\n  useMemo(() => {\n    error && enqueueSnackbar(error, { variant: 'error' })\n  }, [error])\n\n  useMemo(() => {\n    sucessEvent && enqueueSnackbar(sucessEvent, { variant: 'success' })\n  }, [sucessEvent])\n\n\n  useMemo(() => {\n    if(!ID){\n        const newChecked = [...checked]\n\n        if (member_id != 0 || group_id != 0) {\n        const groupname = []\n        const membername = []\n        if (group_id != '0') {\n            if (groups.length > 0) {\n            groups.forEach((element) => {\n                if (element.group_id == group_id) {\n                groupname.push(element.group_name)\n                }\n            })\n            } else {\n            groupname.push(get_name)\n            }\n\n            newChecked.push(group_id)\n            setChecked(newChecked)\n        } else if (member_id != '0') {\n            if (businessusers.length > 0) {\n            businessusers.forEach((element) => {\n                if (element.user_id == member_id) {\n                membername.push(`${element.first_name} ${element.last_name}`)\n                }\n            })\n            } else {\n            membername.push(get_name)\n            }\n\n            newChecked.push(member_id)\n            setMemberchecked(newChecked)\n        }\n\n        setGroupname_membersname(groupname.concat(membername))\n        }\n        if (member_id == undefined && group_id == undefined) {\n        const membername = []\n        const members = []\n        setMemberchecked(members)\n        setGroupname_membersname(membername)\n        }\n    }\n  }, [groups,businessusers])\n\n  return (\n    <>\n    { <FullscreenSpinner open={isPageLoading} /> }\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <ConfirmationDialogRaw open={open} onClose={handleClose} groupdata={groups} memberdata={businessusers}>\n          <Tabmenu\n            groupdata={groups}\n            memberdata={businessusers}\n            handleToggles={handleGroupToggle}\n            checked={checked}\n            handleMemberToggle={handleMemberToggle}\n            memberchecked={memberchecked}\n            handleToTagvalue={handleToTagvalue}\n            group_members={group_members}\n          />\n        </ConfirmationDialogRaw>\n\n        <Grid className=\"main-wrap-head\" container style={{ marginBottom: 20 }} alignItems='center'>\n          <Grid item xs={7}>\n            <TypoHeadStyled variant='h4'>\n              Parents’ <TypoHeadInnerStyled component='span'>Evening booking</TypoHeadInnerStyled>\n            </TypoHeadStyled>\n          </Grid>\n          <Grid item xs={5}>\n            <Box display='flex' justifyContent='flex-end'>\n              <Button variant='contained' color='primary' onClick={handleReset}  size='large' startIcon={<Replay />}>\n                Reset\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n\n        <PaperStyled className=\"main-wrap-body book-cont-wrap\">\n\n          <GridStyled className=\"booking-content\" container spacing={5}>\n            <Grid item xs={6}>\n              <AutocompleteStyled\n                multiple\n                 limitTags={4}\n                id='tags-filled'\n                filterSelectedOptions={false}\n                options={[]}\n                freeSolo\n\n                onChange={(event, newValue) => {\n\n                  let newVal = newValue.toString();\n                  let getArray = newVal.split(',');\n\n                  let user_id_arr = []\n                  let group_id_arr = []\n                  for(let i=0;i<getArray.length;i++){\n                    var getNewList = businessusers.find(ele => (ele.first_name+' '+ele.last_name).trim() == getArray[i])\n\n                    if(getNewList){\n                    user_id_arr.push(getNewList.user_id);\n                    }else{\n                    //FOR GROUPS\n                    let getNewGroupList = groups.find(ele => ele.group_name == getArray[i])\n                    group_id_arr.push(getNewGroupList.group_id);\n                    }\n\n                  }\n\n                  setGroup_members(group_id_arr)\n                  setGroupname_membersname(newValue);\n\n                  //const formdata = { ...formvalue }\n\n                  setChecked(group_id_arr);\n                  setMemberchecked(user_id_arr) ;\n\n                  //formdata.message_group = (user_id_arr.join()) ? user_id_arr.join() :group_id_arr.join();\n                  //formdata.to_member = user_id_arr.join();\n                  //formdata.to_group = group_id_arr.join();\n                  /*\n                  const EventFormField = { ...formFeilds }\n\n                  EventFormField.EventForm_to_group = user_id_arr.join()\n                  EventFormField.EventForm_group_members_to = [...new Set(group_members)].join()\n                  EventFormField.user_id = user_id\n                  EventFormField.user_name = first_name\n                  EventFormField.eventForm_to =*/\n                }}\n                value={groupname_membersname}\n                 renderInput={(params) => (\n                  <TextField {...params}\n                      variant='outlined'\n                      label='To'\n                      onChange={handleToopen}\n                      onClick={handleToopen}\n                      error={!!formValidation.eventForm_to}\n                      helperText={formValidation.eventForm_to}\n                      name='eventForm_to'\n                       />\n                )}\n              />\n            </Grid>\n            <Grid item xs={6}>\n            <TextField\n                label='Subject'\n                fullWidth\n                variant='outlined'\n                name='subject'\n                value={formValue.subject}\n                onChange={subjectHandleinput}\n                error={!!formValidation.subject}\n                helperText={formValidation.subject}\n                className='mb-40'\n              />\n\n              <TextField\n                select\n                label='Category'\n                name='category'\n                value={categoryVal}\n                fullWidth\n                onChange={handleCategoryChange}\n                variant='outlined'\n              >\n                {category.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    <img src={option.img} className={classes.categoryIon} />\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n\n            {inputList.map((x, i) => (\n              <>\n                <Grid className=\"comfort-brkCard\" item xs={12}>\n                  <GridVioletStyled className=\"comfort-brkBox\" container spacing={5}>\n                    {inputList.length > 1 && i > 0 &&\n\n                    <IconButtonStyled  color='primary' component='span' size='large' onClick={() => handleRemoveAnotherClick(i)}>\n\n                      {x.isbooked_check ? true : (<Cancel  /> )}\n\n                    </IconButtonStyled>\n\n                  }\n\n                    <Grid item xs={3}>\n                      <DatePicker\n                        label='Meeting Date'\n                        inputVariant='outlined'\n                        value={x.meetingDate}\n                        onChange={ event =>  handleInputChange(\"meetingDate\", event, i)}\n                        animateYearScrolling\n                        format='DD/MM/YYYY'\n                        fullWidth\n                        error={!!dynamicFormValidation[i].meetingDate}\n                        helperText={dynamicFormValidation[i].meetingDate}\n                      disabled={ x.isbooked_check ? true : false}\n                      disablePast={true}\n                      />\n                    </Grid>\n\n                    <Grid item xs={3}>\n                      <TextField\n                        select\n                        label='Slot Duration'\n                        fullWidth\n                        value={x.currency}\n                         disabled = {x.isbooked_check ? true : false}\n                        onChange={ event =>  handleInputChange(\"currency\", event, i)}\n                        variant='outlined'\n                        error={!!dynamicFormValidation[i].currency}\n                        helperText={dynamicFormValidation[i].currency}\n                      >\n                        {currencies.map((option) => (\n                          <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                          </MenuItem>\n                        ))}\n                      </TextField>\n                    </Grid>\n\n                    <Grid item xs={3}>\n                      <TimePicker\n                        inputVariant='outlined'\n                        label='Start Time'\n                        value={x.startTime}\n                        disabled = {x.isbooked_check ? true : false}\n                        onChange={ event =>  handleInputChange(\"startTime\", event, i)}\n                        fullWidth\n                        ampm={false}\n                        error={!!dynamicFormValidation[i].startTime}\n                        helperText={dynamicFormValidation[i].startTime}\n                      />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TimePicker\n                        inputVariant='outlined'\n                        label='End Time'\n                        value={x.endTime}\n                        disabled = {x.isbooked_check ? true : false}\n                        onChange={ event =>  handleInputChange(\"endTime\", event, i)}\n                        fullWidth\n                        ampm={false}\n                         error={!!dynamicFormValidation[i].endTime}\n                        helperText={dynamicFormValidation[i].endTime}\n                      />\n                    </Grid>\n                    <Grid className=\"comfort-opt\" item xs={6}>\n                      <Box display='flex' justifyContent='space-between' alignItems='center'>\n                        <Typography className=\"break-txt\">Would you like to create a comfort break for this session?</Typography>\n\n                        <Box className=\"break-status\">\n                        <RadioGroup className=\"inline-radio\"\n                          aria-label=\"breakStatus\"\n                          name=\"breakStatus\"\n                          value={x.breakStatus}\n                          >\n                          <FormControlLabel className=\"radio-lbl\" disabled = {x.isbooked_check ? true : false} value='Yes' control={<Radio onChange={ event =>  handleInputChange(\"breakStatus\", event, i)} />} label='Yes' />\n                          <FormControlLabel className=\"radio-lbl\" disabled = {x.isbooked_check ? true : false} value='No'  control={<Radio onChange={ event =>  handleInputChange(\"breakStatus\", event, i)} />} label='No' checked={x.breakStatus == 'No' ? 'checked' : ''} />\n                        </RadioGroup>\n                        </Box>\n                      </Box>\n                    </Grid>\n                    {\n                      x.breakStatus == 'Yes'  ?\n                        <>\n                          <Grid item xs={3}>\n                            <TimePicker\n                              inputVariant='outlined'\n                              label='Start Time'\n                              value={x.breakStartTime}\n                              disabled = {x.isbooked_check ? true : false}\n                              onChange={ event =>  handleInputChange(\"breakStartTime\", event, i)}\n                              fullWidth\n                              ampm={false}\n                            />\n                          </Grid>\n                          <Grid item xs={3}>\n                      <TimePicker\n                        inputVariant='outlined'\n                        label='End Time'\n                        value={x.breakEndTime}\n                        disabled = {x.isbooked_check ? true : false}\n                        onChange={ event =>  handleInputChange(\"breakEndTime\", event, i)}\n                        fullWidth\n                        ampm={false}\n                      />\n                    </Grid>\n                        </>\n                      : null\n                    }\n                  </GridVioletStyled>\n                </Grid>\n\n                <Grid className=\"block_gap\" item xs={12}>\n                 {inputList.length - 1 === i && i < 4 && <ButtonAddStyled startIcon={<AddCircle />} color='primary' onClick={handleAddAnotherClick}  >Add another day</ButtonAddStyled>}\n                 {inputList.length - 1 === i && i < 4 && <Divider className='mt-30 mb-20' />}\n                </Grid>\n              </>\n            ))}\n\n           <Grid item xs={4}>\n              <DatePicker\n                label='Booking deadline date'\n                inputVariant='outlined'\n                value={setDate}\n                onChange={handleDateChange}\n                animateYearScrolling\n                name='set_date'\n                format='DD/MM/YYYY'\n                fullWidth\n                error={!!formValidation.set_date}\n                helperText={formValidation.set_date}\n                disablePast={true}\n              />\n            <Typography className='mr-30 mt-10'>Setting a deadline date helps contacts to book quickly.</Typography>\n            </Grid>\n            {/* <Grid className=\"comfort-opt\" item xs={8}>\n              <Box display='flex' alignItems='center'>\n                <Typography className='mr-30'>Allow parents to add a comment to their booking?</Typography>\n                <Box className=\"break-status\">\n                 <RadioGroup className=\"inline-radio\"\n                      aria-label=\"add_comment\"\n                      name=\"add_comment\"\n                      value={allowParentValue}>\n\n                  <FormControlLabel className=\"radio-lbl\"  value='Yes'   control={<Radio onClick={handleAllowparents} color='primary' />} label='Yes' />\n                  <FormControlLabel className=\"radio-lbl\"  value='No'   control={<Radio onClick={handleAllowparents} color='primary' />} label='No' />\n\n                </RadioGroup>\n                </Box>\n              </Box>\n            </Grid> */}\n\n            <Grid item xs={12}>\n            <CKEditor\n                  config={ckEditorConfig}\n                  editor={ Editor }\n                  data={formValue.message}\n                  name=\"message\"\n                  error={!!formValidation.message}\n                  onReady={ editor => {\n                      console.log( 'Editor is ready to use!', editor );\n                  }}\n                  // onChange={ ( event, editor ) => {\n                  //   const data = editor.getData();\n                  //   setMessage(data);\n                  //   //console.log('formValue====',formValue);\n                  //   // console.warn('dataert4545err', data);\n                  //   //setFormValue({ ...formValue, message: data })\n                  //   //messageHandleinput(data, true)\n                  // }}\n                  onChange={(event, editor) => {\n                    const data = editor.getData();\n                    setMessage(data);\n                  }}\n                  // onBlur={ ( event, editor ) => {\n                  //     console.log( 'Blur.', editor );\n                  //     const data = editor.getData();\n                  //     setMessage(data);\n                  // }}\n                  onFocus={ ( event, editor ) => {\n                      console.log( 'Focus.', editor );\n                  }}\n                /> \n                <p class=\"error\">{formValidation.message}</p>\n                \n            </Grid>\n\n            <Grid item xs={12}>\n              <Box display='flex' justifyContent='flex-end'>\n              {/*  <ButtonColor variant='contained' color='primary' size='large' className='mr-30 width180' startIcon={<Visibility />}>\n                  Preview\n                </ButtonColor> */}\n\n             {/*<ButtonWarn variant='contained' color='primary' size='large' startIcon={<Send />}>\n                  Send Rymindr\n                </ButtonWarn>*/}\n\n                <ButtonWarn className=\"btn-booking\"\n                  onClick={handleToSubmit}\n                  variant='contained'\n                  color='primary'\n                  size='large'\n                  startIcon={<Send />}\n                  disabled={loading}\n                >\n                  {loading && <CircularSpinner />}\n                  {checkupdate ==1 ? 'Update Booking':'Create Booking'}\n                </ButtonWarn>\n              </Box>\n            </Grid>\n          </GridStyled>\n        </PaperStyled>\n      </MuiPickersUtilsProvider>\n    </>\n  )\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: state.bookevent.loading,\n    error: state.bookevent.error,\n    sucessEvent: state.bookevent.sucessEvent,\n    groups: state.bookevent.groups,\n    bookdetails: state.booklist.bookdetails,\n    businessusers: state.bookevent.businessusers,\n    matched_contact: state.bookevent.matched_contact,\n    category: state.bookevent.category\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getGroups: (data) => dispatch(getGroups(data)),\n    getBookListDetail: (data)=> dispatch(getBookListDetail(data)),\n    getBusinessUsers: (data) => dispatch(getBusinessUsers(data)),\n    createEventbook: (data, unmatch, history, sendAttachment) =>\n    dispatch(createEventbook(data, unmatch, history, sendAttachment)),\n    \n    getCategory: () => dispatch(getCategory())\n  }\n}\n\nCreateEventbook.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  createEventbook: PropTypes.func.isRequired,\n  \n  businessusers: PropTypes.array.isRequired,\n  getBusinessUsers: PropTypes.func.isRequired,\n  getGroups: PropTypes.func.isRequired,\n  getBookListDetail:PropTypes.func.isRequired,\n  matched_contact: PropTypes.any.isRequired,\n  getCategory: PropTypes.any.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(CreateEventbook))\n"]},"metadata":{},"sourceType":"module"}