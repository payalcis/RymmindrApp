{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/Rymindrs/UpcomingRymindr/Modal/RymindrModalDelete.js\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme, styled } from '@material-ui/core/styles';\nimport React, { useEffect, useMemo, useState } from 'react';\nconst ButtonStyled = styled(Button)(({\n  theme\n}) => ({\n  color: theme.palette.error.main\n}));\n\nconst DeleteRymindr = ({\n  handleClose,\n  open,\n  deleteRymindr\n}) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n  const [reason, setReason] = useState(null);\n\n  const handleChange = e => {\n    setReason(e.target.value);\n  };\n\n  const handleCloseWithValue = () => {\n    deleteRymindr(reason);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Are you sure you want to delete this Rymindr ?\")), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    label: \"Reason(Optional)\",\n    value: reason,\n    fullWidth: true,\n    onChange: handleChange,\n    variant: \"outlined\",\n    name: \"reason\",\n    rows: 4,\n    rowsMax: 100,\n    multiline: true,\n    style: {\n      width: '90%',\n      alignSelf: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonStyled, {\n    autoFocus: true,\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleCloseWithValue,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Yes\"))));\n};\n\nDeleteRymindr.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  deleteRymindr: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\nexport default DeleteRymindr;","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/Rymindrs/UpcomingRymindr/Modal/RymindrModalDelete.js"],"names":["Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","PropTypes","useMediaQuery","useTheme","styled","React","useEffect","useMemo","useState","ButtonStyled","theme","color","palette","error","main","DeleteRymindr","handleClose","open","deleteRymindr","fullScreen","breakpoints","down","reason","setReason","handleChange","e","target","value","handleCloseWithValue","width","alignSelf","propTypes","func","isRequired","bool"],"mappings":"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","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField } from '@material-ui/core'\r\nimport PropTypes from 'prop-types'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\r\nimport { useTheme, styled } from '@material-ui/core/styles'\r\nimport React, { useEffect, useMemo, useState } from 'react'\r\n\r\nconst ButtonStyled = styled(Button)(({ theme }) => ({\r\n  color: theme.palette.error.main\r\n}))\r\n\r\nconst DeleteRymindr = ({ handleClose, open, deleteRymindr }) => {\r\n  const theme = useTheme()\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'))\r\n\r\n  const [reason, setReason] = useState(null)\r\n\r\n  const handleChange = (e) => {\r\n    setReason(e.target.value)\r\n  }\r\n\r\n  const handleCloseWithValue = () => {\r\n    deleteRymindr(reason)\r\n  }\r\n \r\n  return (\r\n    <div>\r\n      <Dialog fullScreen={fullScreen} open={open} onClose={handleClose} aria-labelledby='responsive-dialog-title'>\r\n        <DialogTitle id='responsive-dialog-title' />\r\n        <DialogContent>\r\n          <DialogContentText>Are you sure you want to delete this Rymindr ?</DialogContentText>\r\n        </DialogContent>\r\n        <TextField\r\n          id='outlined-select-currency'\r\n          label='Reason(Optional)'\r\n          value={reason}\r\n          fullWidth\r\n          onChange={handleChange}\r\n          variant='outlined'\r\n          name='reason'\r\n          rows={4}\r\n          rowsMax={100}\r\n          multiline\r\n          style={{width: '90%', alignSelf: 'center'}}\r\n        ></TextField>\r\n        <DialogActions>\r\n          <ButtonStyled autoFocus onClick={handleClose}>\r\n            No\r\n          </ButtonStyled>\r\n          <Button onClick={handleCloseWithValue} color='primary' autoFocus>\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n};\r\n\r\nDeleteRymindr.propTypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n  deleteRymindr: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default DeleteRymindr\r\n"]},"metadata":{},"sourceType":"module"}