{"ast":null,"code":"\"use strict\";\n/* eslint-disable */\n// Private array of chars to use\n\nvar CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\nvar ID = {};\n\nID.uuid = function (len, radix) {\n  var chars = CHARS,\n      uuid = [],\n      i;\n  radix = radix || chars.length;\n\n  if (len) {\n    // Compact form\n    for (i = 0; i < len; i++) {\n      uuid[i] = chars[0 | Math.random() * radix];\n    }\n  } else {\n    // rfc4122, version 4 form\n    var r; // rfc4122 requires these characters\n\n    uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n    uuid[14] = '4'; // Fill in random data.  At i==19 set the high bits of clock sequence as\n    // per rfc4122, sec. 4.1.5\n\n    for (i = 0; i < 36; i++) {\n      if (!uuid[i]) {\n        r = 0 | Math.random() * 16;\n        uuid[i] = chars[i == 19 ? r & 0x3 | 0x8 : r];\n      }\n    }\n  }\n\n  return uuid.join('');\n}; // A more performant, but slightly bulkier, RFC4122v4 solution.  We boost performance\n// by minimizing calls to random()\n\n\nID.uuidFast = function () {\n  var chars = CHARS,\n      uuid = new Array(36),\n      rnd = 0,\n      r;\n\n  for (var i = 0; i < 36; i++) {\n    if (i == 8 || i == 13 || i == 18 || i == 23) {\n      uuid[i] = '-';\n    } else if (i == 14) {\n      uuid[i] = '4';\n    } else {\n      if (rnd <= 0x02) rnd = 0x2000000 + Math.random() * 0x1000000 | 0;\n      r = rnd & 0xf;\n      rnd = rnd >> 4;\n      uuid[i] = chars[i == 19 ? r & 0x3 | 0x8 : r];\n    }\n  }\n\n  return uuid.join('');\n}; // A more compact, but less performant, RFC4122v4 solution:\n\n\nID.uuidCompact = function () {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\n\nmodule.exports = ID;","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/node_modules/react-form-builder2/lib/UUID.js"],"names":["CHARS","split","ID","uuid","len","radix","chars","i","length","Math","random","r","join","uuidFast","Array","rnd","uuidCompact","replace","c","v","toString","module","exports"],"mappings":"AAAA;AAEA;AACA;;AACA,IAAIA,KAAK,GAAG,iEAAiEC,KAAjE,CAAuE,EAAvE,CAAZ;AACA,IAAIC,EAAE,GAAG,EAAT;;AAEAA,EAAE,CAACC,IAAH,GAAU,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAC9B,MAAIC,KAAK,GAAGN,KAAZ;AAAA,MACIG,IAAI,GAAG,EADX;AAAA,MAEII,CAFJ;AAGAF,EAAAA,KAAK,GAAGA,KAAK,IAAIC,KAAK,CAACE,MAAvB;;AAEA,MAAIJ,GAAJ,EAAS;AACP;AACA,SAAKG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,GAAhB,EAAqBG,CAAC,EAAtB,EAA0B;AACxBJ,MAAAA,IAAI,CAACI,CAAD,CAAJ,GAAUD,KAAK,CAAC,IAAIG,IAAI,CAACC,MAAL,KAAgBL,KAArB,CAAf;AACD;AACF,GALD,MAKO;AACL;AACA,QAAIM,CAAJ,CAFK,CAEE;;AAEPR,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,EAAD,CAAJ,GAAWA,IAAI,CAAC,EAAD,CAAJ,GAAWA,IAAI,CAAC,EAAD,CAAJ,GAAW,GAA3C;AACAA,IAAAA,IAAI,CAAC,EAAD,CAAJ,GAAW,GAAX,CALK,CAKW;AAChB;;AAEA,SAAKI,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,EAAhB,EAAoBA,CAAC,EAArB,EAAyB;AACvB,UAAI,CAACJ,IAAI,CAACI,CAAD,CAAT,EAAc;AACZI,QAAAA,CAAC,GAAG,IAAIF,IAAI,CAACC,MAAL,KAAgB,EAAxB;AACAP,QAAAA,IAAI,CAACI,CAAD,CAAJ,GAAUD,KAAK,CAACC,CAAC,IAAI,EAAL,GAAUI,CAAC,GAAG,GAAJ,GAAU,GAApB,GAA0BA,CAA3B,CAAf;AACD;AACF;AACF;;AAED,SAAOR,IAAI,CAACS,IAAL,CAAU,EAAV,CAAP;AACD,CA5BD,C,CA4BG;AACH;;;AAGAV,EAAE,CAACW,QAAH,GAAc,YAAY;AACxB,MAAIP,KAAK,GAAGN,KAAZ;AAAA,MACIG,IAAI,GAAG,IAAIW,KAAJ,CAAU,EAAV,CADX;AAAA,MAEIC,GAAG,GAAG,CAFV;AAAA,MAGIJ,CAHJ;;AAKA,OAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAIA,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,EAAf,IAAqBA,CAAC,IAAI,EAA1B,IAAgCA,CAAC,IAAI,EAAzC,EAA6C;AAC3CJ,MAAAA,IAAI,CAACI,CAAD,CAAJ,GAAU,GAAV;AACD,KAFD,MAEO,IAAIA,CAAC,IAAI,EAAT,EAAa;AAClBJ,MAAAA,IAAI,CAACI,CAAD,CAAJ,GAAU,GAAV;AACD,KAFM,MAEA;AACL,UAAIQ,GAAG,IAAI,IAAX,EAAiBA,GAAG,GAAG,YAAYN,IAAI,CAACC,MAAL,KAAgB,SAA5B,GAAwC,CAA9C;AACjBC,MAAAA,CAAC,GAAGI,GAAG,GAAG,GAAV;AACAA,MAAAA,GAAG,GAAGA,GAAG,IAAI,CAAb;AACAZ,MAAAA,IAAI,CAACI,CAAD,CAAJ,GAAUD,KAAK,CAACC,CAAC,IAAI,EAAL,GAAUI,CAAC,GAAG,GAAJ,GAAU,GAApB,GAA0BA,CAA3B,CAAf;AACD;AACF;;AAED,SAAOR,IAAI,CAACS,IAAL,CAAU,EAAV,CAAP;AACD,CApBD,C,CAoBG;;;AAGHV,EAAE,CAACc,WAAH,GAAiB,YAAY;AAC3B,SAAO,uCAAuCC,OAAvC,CAA+C,OAA/C,EAAwD,UAAUC,CAAV,EAAa;AAC1E,QAAIP,CAAC,GAAGF,IAAI,CAACC,MAAL,KAAgB,EAAhB,GAAqB,CAA7B;AAAA,QACIS,CAAC,GAAGD,CAAC,IAAI,GAAL,GAAWP,CAAX,GAAeA,CAAC,GAAG,GAAJ,GAAU,GADjC;AAEA,WAAOQ,CAAC,CAACC,QAAF,CAAW,EAAX,CAAP;AACD,GAJM,CAAP;AAKD,CAND;;AAQAC,MAAM,CAACC,OAAP,GAAiBpB,EAAjB","sourcesContent":["\"use strict\";\n\n/* eslint-disable */\n// Private array of chars to use\nvar CHARS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\nvar ID = {};\n\nID.uuid = function (len, radix) {\n  var chars = CHARS,\n      uuid = [],\n      i;\n  radix = radix || chars.length;\n\n  if (len) {\n    // Compact form\n    for (i = 0; i < len; i++) {\n      uuid[i] = chars[0 | Math.random() * radix];\n    }\n  } else {\n    // rfc4122, version 4 form\n    var r; // rfc4122 requires these characters\n\n    uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n    uuid[14] = '4'; // Fill in random data.  At i==19 set the high bits of clock sequence as\n    // per rfc4122, sec. 4.1.5\n\n    for (i = 0; i < 36; i++) {\n      if (!uuid[i]) {\n        r = 0 | Math.random() * 16;\n        uuid[i] = chars[i == 19 ? r & 0x3 | 0x8 : r];\n      }\n    }\n  }\n\n  return uuid.join('');\n}; // A more performant, but slightly bulkier, RFC4122v4 solution.  We boost performance\n// by minimizing calls to random()\n\n\nID.uuidFast = function () {\n  var chars = CHARS,\n      uuid = new Array(36),\n      rnd = 0,\n      r;\n\n  for (var i = 0; i < 36; i++) {\n    if (i == 8 || i == 13 || i == 18 || i == 23) {\n      uuid[i] = '-';\n    } else if (i == 14) {\n      uuid[i] = '4';\n    } else {\n      if (rnd <= 0x02) rnd = 0x2000000 + Math.random() * 0x1000000 | 0;\n      r = rnd & 0xf;\n      rnd = rnd >> 4;\n      uuid[i] = chars[i == 19 ? r & 0x3 | 0x8 : r];\n    }\n  }\n\n  return uuid.join('');\n}; // A more compact, but less performant, RFC4122v4 solution:\n\n\nID.uuidCompact = function () {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\n\nmodule.exports = ID;"]},"metadata":{},"sourceType":"script"}