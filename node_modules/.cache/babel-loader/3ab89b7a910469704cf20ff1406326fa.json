{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/HistoryRymindrs/UpcomingRymindr/Modal/RymindrModalDeleteHistory.js\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme, styled } from '@material-ui/core/styles';\nconst ButtonStyled = styled(Button)(({\n  theme\n}) => ({\n  color: theme.palette.error.main\n}));\n\nconst DeleteRymindrHistory = ({\n  handleCloseHistory,\n  open,\n  clearHistory\n}) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleCloseHistory,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \"Cleared Rymindrs not recoverable.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonStyled, {\n    autoFocus: true,\n    onClick: handleCloseHistory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: clearHistory,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Confirm\"))));\n};\n\nDeleteRymindrHistory.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  deleteRymindr: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n};\nexport default DeleteRymindrHistory;","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/HistoryRymindrs/UpcomingRymindr/Modal/RymindrModalDeleteHistory.js"],"names":["Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","PropTypes","React","useMediaQuery","useTheme","styled","ButtonStyled","theme","color","palette","error","main","DeleteRymindrHistory","handleCloseHistory","open","clearHistory","fullScreen","breakpoints","down","propTypes","handleClose","func","isRequired","deleteRymindr","bool"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,MAAjB,EAAyBC,aAAzB,EAAwCC,aAAxC,EAAuDC,iBAAvD,EAA0EC,WAA1E,QAA6F,mBAA7F;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,0BAAjC;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACV,MAAD,CAAN,CAAe,CAAC;AAAEY,EAAAA;AAAF,CAAD,MAAgB;AAClDC,EAAAA,KAAK,EAAED,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoBC;AADuB,CAAhB,CAAf,CAArB;;AAIA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,kBAAF;AAAsBC,EAAAA,IAAtB;AAA4BC,EAAAA;AAA5B,CAAD,KAAiD;AAC5E,QAAMR,KAAK,GAAGH,QAAQ,EAAtB;AACA,QAAMY,UAAU,GAAGb,aAAa,CAACI,KAAK,CAACU,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAhC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAEF,UAApB;AAAgC,IAAA,IAAI,EAAEF,IAAtC;AAA4C,IAAA,OAAO,EAAED,kBAArD;AAAyE,uBAAgB,yBAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,CAFF,eAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,SAAS,MAAvB;AAAwB,IAAA,OAAO,EAAEA,kBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEE,YAAjB;AAA+B,IAAA,KAAK,EAAC,SAArC;AAA+C,IAAA,SAAS,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CALF,CADF,CADF;AAkBD,CAtBD;;AAwBAH,oBAAoB,CAACO,SAArB,GAAiC;AAC/BC,EAAAA,WAAW,EAAEnB,SAAS,CAACoB,IAAV,CAAeC,UADG;AAE/BC,EAAAA,aAAa,EAAEtB,SAAS,CAACoB,IAAV,CAAeC,UAFC;AAG/BR,EAAAA,IAAI,EAAEb,SAAS,CAACuB,IAAV,CAAeF;AAHU,CAAjC;AAMA,eAAeV,oBAAf","sourcesContent":["import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { useTheme, styled } from '@material-ui/core/styles'\n\nconst ButtonStyled = styled(Button)(({ theme }) => ({\n  color: theme.palette.error.main\n}))\n\nconst DeleteRymindrHistory = ({ handleCloseHistory, open, clearHistory  }) => {\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\n\n  return (\n    <div>\n      <Dialog fullScreen={fullScreen} open={open} onClose={handleCloseHistory} aria-labelledby='responsive-dialog-title'>\n        <DialogTitle id='responsive-dialog-title' />\n        <DialogContent>\n          <DialogContentText>Cleared Rymindrs not recoverable.</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <ButtonStyled autoFocus onClick={handleCloseHistory}>\n            Cancel\n          </ButtonStyled>\n          <Button onClick={clearHistory} color='primary' autoFocus>\n          Confirm \n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n};\n\nDeleteRymindrHistory.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  deleteRymindr: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired\n}\n\nexport default DeleteRymindrHistory\n"]},"metadata":{},"sourceType":"module"}