{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/AccountSettings/DefaultCategory.js\";\nimport { Box, Button, Typography } from '@material-ui/core';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport CircularSpinner from '../../component/CircularSpinner';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCategories } from '../../store/actions';\nimport { makeDefaultCategory } from '../../store/actions/accountsettingAction';\nimport { styled } from '@material-ui/core/styles';\nimport { withSnackbar } from 'notistack';\nconst TypoStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 17,\n  color: theme.palette.text.primary,\n  fontWeight: '600',\n  paddingTop: 20,\n  marginLeft: 25\n}));\nconst BoxStyled = styled(Box)(({\n  theme\n}) => ({\n  textAlign: 'center',\n  '& div': {\n    display: 'inline-block',\n    margin: 25,\n    width: 140,\n    paddingTop: 15,\n    paddingBottom: 15,\n    borderRadius: 10,\n    '& img': {\n      width: 75,\n      height: 75\n    }\n  },\n  '& .active': {\n    background: theme.palette.primary.light,\n    '& p': {\n      opacity: 1\n    }\n  }\n}));\nconst TypoCateStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 17,\n  color: theme.palette.text.primary,\n  opacity: 0.4,\n  fontWeight: '600',\n  marginTop: 6\n}));\n\nconst DefaultCategory = props => {\n  const {\n    user_id\n  } = JSON.parse(localStorage.getItem('userData'));\n  const {\n    getCategories,\n    makeDefaultCategory,\n    enqueueSnackbar,\n    error,\n    loading,\n    categories,\n    default_cat,\n    success_message\n  } = props;\n  const [defaultCategory, setDefaultCategory] = useState(default_cat);\n\n  const makeDefault = id => {\n    setDefaultCategory(id);\n  };\n\n  const changeDefaultcategory = () => {\n    const dataTosend = {\n      user_id,\n      default_category: defaultCategory\n    };\n    makeDefaultCategory(dataTosend);\n  };\n\n  useEffect(() => {\n    getCategories({\n      user_id\n    });\n  }, []);\n  console.log(default_cat);\n  useMemo(() => {\n    default_cat && setDefaultCategory(default_cat);\n  }, [default_cat]);\n  useMemo(() => {\n    error && enqueueSnackbar(error, {\n      variant: 'error'\n    });\n  }, [error]);\n  useMemo(() => {\n    success_message && enqueueSnackbar(success_message, {\n      variant: 'success'\n    });\n  }, [success_message]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TypoStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Default Category\"), /*#__PURE__*/React.createElement(BoxStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, categories.map((item, i) => // console.log(item)\n  item.is_message_center == 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    key: i,\n    onClick: () => makeDefault(item.id),\n    className: item.id == defaultCategory ? 'active' : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.category_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TypoCateStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, item.category_name)) : '')), /*#__PURE__*/React.createElement(Box, {\n    style: {\n      textAlign: 'center',\n      marginTop: 20,\n      marginBottom: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: changeDefaultcategory,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }\n  }), \"MAKE DEFAULT\")));\n};\n\nconst mapStateToProps = ({\n  rymidr,\n  account\n}) => {\n  return {\n    loading: account.loading,\n    error: account.error,\n    categories: rymidr.categories,\n    default_cat: rymidr.default_cat,\n    success_message: account.success_message\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCategories: data => dispatch(getCategories(data)),\n    makeDefaultCategory: data => dispatch(makeDefaultCategory(data))\n  };\n};\n\nDefaultCategory.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired,\n  getCategories: PropTypes.func.isRequired,\n  makeDefaultCategory: PropTypes.func.isRequired,\n  categories: PropTypes.any.isRequired,\n  default_cat: PropTypes.any.isRequired,\n  success_message: PropTypes.any.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(DefaultCategory));","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/AccountSettings/DefaultCategory.js"],"names":["Box","Button","Typography","React","useEffect","useMemo","useState","CircularSpinner","PropTypes","connect","getCategories","makeDefaultCategory","styled","withSnackbar","TypoStyled","theme","fontSize","color","palette","text","primary","fontWeight","paddingTop","marginLeft","BoxStyled","textAlign","display","margin","width","paddingBottom","borderRadius","height","background","light","opacity","TypoCateStyled","marginTop","DefaultCategory","props","user_id","JSON","parse","localStorage","getItem","enqueueSnackbar","error","loading","categories","default_cat","success_message","defaultCategory","setDefaultCategory","makeDefault","id","changeDefaultcategory","dataTosend","default_category","console","log","variant","map","item","i","is_message_center","category_image","category_name","marginBottom","mapStateToProps","rymidr","account","mapDispatchToProps","dispatch","data","propTypes","func","isRequired","bool","string","any"],"mappings":"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","sourcesContent":["import { Box, Button, Typography } from '@material-ui/core';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport CircularSpinner from '../../component/CircularSpinner';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCategories } from '../../store/actions';\nimport { makeDefaultCategory } from '../../store/actions/accountsettingAction';\nimport { styled } from '@material-ui/core/styles';\nimport { withSnackbar } from 'notistack';\n\nconst TypoStyled = styled(Typography)(({ theme }) => ({\n  fontSize: 17,\n  color: theme.palette.text.primary,\n  fontWeight: '600',\n  paddingTop: 20,\n  marginLeft: 25,\n}));\n\nconst BoxStyled = styled(Box)(({ theme }) => ({\n  textAlign: 'center',\n  '& div': {\n    display: 'inline-block',\n    margin: 25,\n    width: 140,\n    paddingTop: 15,\n    paddingBottom: 15,\n    borderRadius: 10,\n    '& img': {\n      width: 75,\n      height: 75,\n    },\n  },\n  '& .active': {\n    background: theme.palette.primary.light,\n    '& p': {\n      opacity: 1,\n    },\n  },\n}));\n\nconst TypoCateStyled = styled(Typography)(({ theme }) => ({\n  fontSize: 17,\n  color: theme.palette.text.primary,\n  opacity: 0.4,\n  fontWeight: '600',\n  marginTop: 6,\n}));\n\nconst DefaultCategory = (props) => {\n  const { user_id } = JSON.parse(localStorage.getItem('userData'));\n  const { getCategories, makeDefaultCategory, enqueueSnackbar, error, loading, categories, default_cat,success_message } = props;\n\n  const [defaultCategory, setDefaultCategory] = useState(default_cat);\n  const makeDefault = (id) => {\n    setDefaultCategory(id);\n  };\n\n  const changeDefaultcategory = () => {\n    const dataTosend = { user_id, default_category: defaultCategory };\n    makeDefaultCategory(dataTosend);\n  };\n\n  useEffect(() => {\n    getCategories({ user_id });\n  }, []);\n  console.log(default_cat);\n\n  useMemo(() => {\n    default_cat && setDefaultCategory(default_cat);\n  }, [default_cat]);\n\n  useMemo(() => {\n    error && enqueueSnackbar(error, { variant: 'error' });\n  }, [error]);\n  useMemo(() => {\n    \n    success_message && enqueueSnackbar(success_message, { variant: 'success' });\n  }, [success_message]);\n  return (\n    <>\n      <TypoStyled>Default Category</TypoStyled>\n      <BoxStyled>\n        {categories.map((item, i) => (\n          // console.log(item)\n          (item.is_message_center == 0)?\n          <div key={i} onClick={() => makeDefault(item.id)} className={item.id == defaultCategory ? 'active' : null}>\n            <img src={item.category_image} />\n            <TypoCateStyled>{item.category_name}</TypoCateStyled>\n          </div>:''\n        ))}\n      </BoxStyled>\n\n      <Box style={{ textAlign: 'center', marginTop: 20, marginBottom: 30 }}>\n        <Button variant=\"contained\" color=\"primary\" onClick={changeDefaultcategory} disabled={loading}>\n          {loading && <CircularSpinner />}\n          MAKE DEFAULT\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nconst mapStateToProps = ({ rymidr, account }) => {\n  return {\n    loading: account.loading,\n    error: account.error,\n    categories: rymidr.categories,\n    default_cat: rymidr.default_cat,\n    success_message: account.success_message\n\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getCategories: (data) => dispatch(getCategories(data)),\n    makeDefaultCategory: (data) => dispatch(makeDefaultCategory(data)),\n  };\n};\n\nDefaultCategory.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string.isRequired,\n  getCategories: PropTypes.func.isRequired,\n  makeDefaultCategory: PropTypes.func.isRequired,\n  categories: PropTypes.any.isRequired,\n  default_cat: PropTypes.any.isRequired,\n  success_message: PropTypes.any.isRequired,\n\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(DefaultCategory));\n"]},"metadata":{},"sourceType":"module"}