{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/Bookings/EventBooking/Modal/Memberlist.js\";\nimport { Avatar, Box, Checkbox, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, Tab, Tabs, TextField, Typography, Divider } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport { makeStyles, styled, withStyles } from '@material-ui/core/styles';\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, children));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  selectAll: {\n    textAlign: 'right',\n    // fontWeight: 'bold',\n    fontSize: 16\n  },\n  nameMobile: {\n    display: 'block',\n    flexDirection: 'column'\n  }\n}));\nconst TabsStyles = styled(Tabs)(({\n  theme\n}) => ({\n  borderBottom: '1px solid #ccc',\n  '& span': {\n    justifyContent: 'center'\n  }\n}));\n\nconst TabComponent = props => {\n  const {\n    handleToggles,\n    handleMemberToggle,\n    handleAllMembersToggle,\n    handleAllGroupMembersToggle,\n    checked,\n    groupdata,\n    memberchecked,\n    memberdata,\n    handleToTagvalue\n  } = props;\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [phoneNumber, setPhoneNumber] = useState([]);\n  const [phoneErr, setPhoneErr] = useState(false);\n  const [isAllMember, setIsAllMember] = useState(false);\n  const [isAllGroupMember, setIsAllGroupMember] = useState(false);\n  var [tempMemberData, setTempMemberData] = useState(memberdata);\n  var [tempGroupdata, setTempGroupdata] = useState(groupdata);\n  var [getGroupContacts, setGroupContacts] = useState([]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleMemberToggles = value => () => {\n    handleMemberToggle(value);\n    console.log('value__', value);\n  };\n\n  const handleSelectMember = () => {\n    setIsAllMember(!isAllMember); //  console.warn('isAllMember111', isAllMember);\n\n    if (!isAllMember) {\n      memberdata.map((data, i) => {\n        if (memberchecked.indexOf(data.user_id) == -1) {\n          memberchecked.push(data.user_id);\n        }\n      });\n    } else {\n      memberchecked.splice(0, memberchecked.length);\n    }\n\n    console.warn('memberchecked333', memberchecked);\n    handleAllMembersToggle(memberchecked);\n  };\n\n  useEffect(() => {\n    let getGroupContacts = [];\n    checked.map((data, i) => {\n      let getContacts = tempGroupdata.filter(a => a.group_id == data);\n\n      if (getContacts && getContacts[0]) {\n        let result = getContacts[0].group_member_list.map(a => a.user_id);\n        getGroupContacts.push(...result);\n      }\n    });\n    setGroupContacts(getGroupContacts);\n  }, [tempGroupdata, checked]);\n\n  const handleGroupToggle = value => () => {\n    handleToggles(value);\n  }; // console.warn('checked1111 before', checked);\n\n\n  const handleSelectGroupMember = () => {\n    setIsAllGroupMember(!isAllGroupMember);\n\n    if (!isAllGroupMember) {\n      groupdata.map((data, i) => {\n        if (checked.indexOf(data.group_id) == -1) {\n          checked.push(data.group_id);\n        }\n      });\n    } else {\n      checked.splice(0, checked.length);\n    }\n\n    handleAllGroupMembersToggle(checked);\n    console.warn('checked1111 after', checked);\n  };\n\n  const handleTag = e => {\n    // console.log(e)\n    const newvalue = e.target.value; // console.log(newvalue)\n\n    var filter = /^((\\+[1-9]{1,4}[ \\-]*)|(\\([0-9]{2,3}\\)[ \\-]*)|([0-9]{2,4})[ \\-]*)*?[0-9]{3,4}?[ \\-]*[0-9]{3,4}?$/;\n\n    if (filter.test(newvalue)) {\n      var phn = newvalue.length;\n\n      if (phn == 11) {\n        const newNumber = [...phoneNumber, newvalue];\n        setPhoneNumber(Array.from(new Set(newNumber)));\n        handleToTagvalue(Array.from(new Set(newNumber)));\n        setPhoneErr(false);\n      } else {\n        setPhoneErr(true);\n      }\n    } else {\n      setPhoneErr(true);\n    }\n  };\n\n  const handleSearch = e => {\n    let tempMemberData = memberdata;\n    let tempGroupdata = groupdata;\n    let temp = [];\n    let tempGroup = [];\n\n    if (isNaN(e.target.value) == false) {\n      let tempStr = e.target.value.charAt(0) === '0' ? e.target.value.slice(1) : e.target.value;\n\n      if (tempStr.length < 14 && tempStr !== undefined) {\n        if (tempStr.length > 6) {\n          memberdata.map((data, i) => {\n            if (data.mobile_no.includes(tempStr)) {\n              temp.push(data);\n            } else {\n              return true;\n            }\n          });\n          groupdata.map((data, i) => {\n            if (data.group_name.toLowerCase().includes(tempStr.toLowerCase())) {\n              tempGroup.push(data);\n            } else {\n              return true;\n            }\n          });\n          setTempMemberData(temp);\n          setTempGroupdata(tempGroup);\n        } else {\n          setTempMemberData(tempMemberData);\n          setTempGroupdata(tempGroupdata);\n        }\n      }\n    } else {\n      if (e.target.value.length > 3) {\n        memberdata.map((data, i) => {\n          if ((data.first_name + ' ' + data.last_name).toLowerCase().includes(e.target.value.toLowerCase())) {\n            temp.push(data);\n          } else {\n            setTempMemberData(tempMemberData);\n          }\n        });\n        groupdata.map((data, i) => {\n          if (data.group_name.toLowerCase().includes(e.target.value.toLowerCase())) {\n            tempGroup.push(data);\n          } else {\n            return true;\n          }\n        });\n        setTempMemberData(temp);\n        setTempGroupdata(tempGroup);\n      }\n    }\n  }; //console.warn('memberchecked343443', memberchecked);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TabsStyles, {\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"simple tabs example\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: \"Members\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Groups\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    multiple: true,\n    id: \"tags-filled\",\n    filterSelectedOptions: false,\n    options: [],\n    freeSolo: true,\n    value: phoneNumber,\n    onChange: handleTag,\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      placeholder: \"Search by mobile number or name\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      error: phoneErr // onChange={() => setPhoneErr(false)}\n      ,\n      onChange: e => handleSearch(e),\n      helperText: phoneErr && 'Not a valid number.',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, console.log(''), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: handleSelectMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Select All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    edge: \"end\",\n    onChange: handleSelectMember,\n    checked: isAllMember // inputProps={{ 'aria-labelledby': labelId }}\n    ,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }))), tempMemberData.length > 0 ? tempMemberData.map((value, key) => {\n    let merged = [...memberchecked, ...getGroupContacts]; //console.warn('checking4545454', memberchecked.indexOf(value.user_id) !== -1, value.user_id, memberchecked, checked);\n\n    const labelId = `checkbox-list-secondary-label-${value}`;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListItem, {\n      key: key,\n      button: true,\n      onClick: handleMemberToggles(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: value.first_name,\n      src: value.profile_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }\n    })), value.first_name ? /*#__PURE__*/React.createElement(ListItem, {\n      className: classes.nameMobile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value.first_name} ${value.last_name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: value.mobile_no,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 29\n      }\n    })) : /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: value.mobile_no,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"end\",\n      onChange: handleMemberToggles(value),\n      checked: merged.indexOf(value.user_id) !== -1,\n      disabled: getGroupContacts.indexOf(value.user_id) !== -1,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }\n    }));\n  }) : null)), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    onClick: handleSelectGroupMember,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Select All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    edge: \"end\",\n    onChange: handleSelectGroupMember,\n    checked: isAllGroupMember // inputProps={{ 'aria-labelledby': labelId }}\n    ,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 15\n    }\n  }))), console.log('tempGroupdata--', tempGroupdata), tempGroupdata.map((value, key) => {\n    const labelId = `checkbox-list-secondary-label-${value}`;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, value.total != 0 && /*#__PURE__*/React.createElement(ListItem, {\n      key: key,\n      button: true,\n      onClick: handleGroupToggle(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: value.group_name,\n      src: value.group_icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value.group_name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      edge: \"end\",\n      onChange: handleGroupToggle(value),\n      checked: checked.indexOf(parseInt(value.group_id)) !== -1,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 19\n      }\n    }))));\n  }))));\n};\n\nTabComponent.propTypes = {\n  handleToggles: PropTypes.func.isRequired,\n  handleMemberToggle: PropTypes.func.isRequired,\n  checked: PropTypes.array.isRequired,\n  groupdata: PropTypes.array.isRequired,\n  memberchecked: PropTypes.array.isRequired,\n  memberdata: PropTypes.array.isRequired,\n  handleToTagvalue: PropTypes.func.isRequired\n};\nexport default TabComponent;","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/Bookings/EventBooking/Modal/Memberlist.js"],"names":["Avatar","Box","Checkbox","List","ListItem","ListItemAvatar","ListItemSecondaryAction","ListItemText","Tab","Tabs","TextField","Typography","Divider","React","useState","useEffect","Autocomplete","PropTypes","makeStyles","styled","withStyles","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","useStyles","theme","root","backgroundColor","palette","background","paper","selectAll","textAlign","fontSize","nameMobile","display","flexDirection","TabsStyles","borderBottom","justifyContent","TabComponent","handleToggles","handleMemberToggle","handleAllMembersToggle","handleAllGroupMembersToggle","checked","groupdata","memberchecked","memberdata","handleToTagvalue","classes","setValue","phoneNumber","setPhoneNumber","phoneErr","setPhoneErr","isAllMember","setIsAllMember","isAllGroupMember","setIsAllGroupMember","tempMemberData","setTempMemberData","tempGroupdata","setTempGroupdata","getGroupContacts","setGroupContacts","handleChange","event","newValue","handleMemberToggles","console","log","handleSelectMember","map","data","i","indexOf","user_id","push","splice","length","warn","getContacts","filter","a","group_id","result","group_member_list","handleGroupToggle","handleSelectGroupMember","handleTag","e","newvalue","target","test","phn","newNumber","Array","from","Set","handleSearch","temp","tempGroup","isNaN","tempStr","charAt","slice","undefined","mobile_no","includes","group_name","toLowerCase","first_name","last_name","params","key","merged","labelId","profile_image","total","group_icon","parseInt","func","array"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Box,\n  Checkbox,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  ListItemText,\n  Tab,\n  Tabs,\n  TextField,\n  Typography, Divider\n} from '@material-ui/core'\nimport React, { useState,useEffect } from 'react'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport PropTypes from 'prop-types'\nimport { makeStyles, styled, withStyles } from '@material-ui/core/styles'\n\nfunction TabPanel (props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box>{children}\n        </Box>\n      )}\n    </div>\n  )\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  selectAll: {\n    textAlign: 'right',\n    // fontWeight: 'bold',\n    fontSize: 16\n  },\n  nameMobile: {\n    display: 'block',\n    flexDirection: 'column'\n  }\n}))\n\nconst TabsStyles = styled(Tabs)(({ theme }) => ({\n  borderBottom: '1px solid #ccc',\n  '& span': {\n    justifyContent: 'center'\n  }\n}))\n\nconst TabComponent = (props) => {\n  const { handleToggles, handleMemberToggle,handleAllMembersToggle , handleAllGroupMembersToggle, checked, groupdata, memberchecked, memberdata, handleToTagvalue } = props\n  const classes = useStyles()\n  const [value, setValue] = useState(0)\n  const [phoneNumber, setPhoneNumber] = useState([])\n  const [phoneErr, setPhoneErr] = useState(false)\n  const [isAllMember, setIsAllMember] = useState(false)\n  const [isAllGroupMember, setIsAllGroupMember] = useState(false)\n\n  var [tempMemberData, setTempMemberData] = useState(memberdata)\n  var [tempGroupdata, setTempGroupdata] = useState(groupdata)\n\n  var [getGroupContacts, setGroupContacts] = useState([]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n  const handleMemberToggles = (value) => () => {\n    handleMemberToggle(value)\n    console.log('value__',value)\n  }\n\n  const handleSelectMember = () => {\n    setIsAllMember(!isAllMember)\n  //  console.warn('isAllMember111', isAllMember);\n    if(!isAllMember) {\n      memberdata.map((data, i) => {\n        if(memberchecked.indexOf(data.user_id) == -1) {\n          memberchecked.push(data.user_id)\n        }\n      })\n    }\n    else {\n      memberchecked.splice(0, memberchecked.length)\n    }\n    console.warn('memberchecked333', memberchecked);\n    handleAllMembersToggle(memberchecked)\n  }\n  \n  \n  useEffect(() => {\n    let getGroupContacts= [];\n    checked.map((data, i) => {\n      let getContacts = tempGroupdata.filter(a=>a.group_id==data);\n      if(getContacts && getContacts[0]){\n        let result = getContacts[0].group_member_list.map(a => a.user_id);\n        getGroupContacts.push(...result)\n      }\n    })\n    setGroupContacts(getGroupContacts);\n  }, [tempGroupdata,checked])\n\n  \n  const handleGroupToggle = (value) => () => {\n    handleToggles(value)\n  }\n\n  // console.warn('checked1111 before', checked);\n\n  const handleSelectGroupMember = () => {\n    setIsAllGroupMember(!isAllGroupMember)\n    if(!isAllGroupMember) {\n    groupdata.map((data, i) => {\n      if(checked.indexOf(data.group_id) == -1) {\n      checked.push(data.group_id)\n      }\n    })\n  }else\n  {\n    checked.splice(0, checked.length)\n  }\n  handleAllGroupMembersToggle(checked)\n\n  console.warn('checked1111 after', checked);\n}\n\n\n  const handleTag = (e) => {\n    // console.log(e)\n    const newvalue = e.target.value\n    // console.log(newvalue)\n    var filter = /^((\\+[1-9]{1,4}[ \\-]*)|(\\([0-9]{2,3}\\)[ \\-]*)|([0-9]{2,4})[ \\-]*)*?[0-9]{3,4}?[ \\-]*[0-9]{3,4}?$/\n    if (filter.test(newvalue)) {\n      var phn = newvalue.length\n      if (phn == 11) {\n        const newNumber = [...phoneNumber, newvalue]\n        setPhoneNumber(Array.from(new Set(newNumber)))\n        handleToTagvalue(Array.from(new Set(newNumber)))\n        setPhoneErr(false)\n      } else {\n        setPhoneErr(true)\n      }\n    } else {\n      setPhoneErr(true)\n    }\n  }\n\n  const handleSearch = (e) => {\n    let tempMemberData = memberdata;\n    let tempGroupdata = groupdata;\n\n    let temp = [];\n    let tempGroup = [];\n\n    if (isNaN(e.target.value) == false) {\n      let tempStr =  (e.target.value).charAt(0) === '0' ? (e.target.value).slice(1) : e.target.value;\n      if ((tempStr).length < 14 && tempStr !== undefined) {\n        if((tempStr).length > 6) {\n          memberdata.map((data, i) => {\n            \n            if(data.mobile_no.includes(tempStr)) {\n              temp.push(data)\n            }\n            else {\n              return true\n            }\n          })\n\n          groupdata.map((data, i) => {\n            if((data.group_name).toLowerCase().includes((tempStr).toLowerCase())) {\n              tempGroup.push(data)\n            }\n            else {\n              return true\n            }\n          })\n\n          setTempMemberData(temp)\n          setTempGroupdata(tempGroup)\n\n        }\n        else {\n          setTempMemberData(tempMemberData)\n          setTempGroupdata(tempGroupdata)\n        }       \n      }\n    }\n    else {\n      if((e.target.value).length > 3) {\n        memberdata.map((data, i) => {\n          \n          if(((data.first_name + ' ' +data.last_name).toLowerCase()).includes((e.target.value).toLowerCase())) {\n            temp.push(data)\n          }\n          else {\n            setTempMemberData(tempMemberData)\n          }\n        })\n\n        groupdata.map((data, i) => {\n          if((data.group_name).toLowerCase().includes((e.target.value).toLowerCase())) {\n            tempGroup.push(data)\n          }\n          else {\n            return true\n          }\n        })\n\n        setTempMemberData(temp)\n        setTempGroupdata(tempGroup)\n      } \n    }\n  }\n\n  //console.warn('memberchecked343443', memberchecked);\n\n  return (\n    <div className={classes.root}>\n      <TabsStyles\n        value={value}\n        onChange={handleChange}\n        aria-label='simple tabs example'\n        indicatorColor='primary'\n        textColor='primary'\n        variant='fullWidth'\n      >\n        <Tab label='Members' />\n        <Tab label='Groups' />\n      </TabsStyles>\n      <Box>\n        <Autocomplete\n          multiple\n          id='tags-filled'\n          filterSelectedOptions={false}\n          options={[]}\n          freeSolo\n          value={phoneNumber}\n          onChange={handleTag}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              placeholder='Search by mobile number or name'\n              variant='outlined'\n              margin='normal'\n              error={phoneErr}\n              // onChange={() => setPhoneErr(false)}\n              onChange={(e) => handleSearch(e)}\n              helperText={phoneErr && 'Not a valid number.'}\n            />\n          )}\n        />\n      </Box>\n      <TabPanel value={value} index={0} >\n        <List dense className={classes.root}>\n          \n          {/* <ListItem key={Math.random()} button>\n            <ListItemText className={classes.selectAll} primary=\"Select All\" />\n            <ListItemSecondaryAction>\n                <Checkbox\n                  edge='end'\n                  onChange={handleSelectMember}\n                  checked={isAllMember}\n                  // inputProps={{ 'aria-labelledby': labelId }}\n                  color='primary'\n                />\n              </ListItemSecondaryAction>\n          </ListItem> */}\n          {console.log('')}\n          <ListItem button onClick={handleSelectMember}>\n            <ListItemAvatar />\n            <ListItemText primary='Select All' />\n            <ListItemSecondaryAction>\n              <Checkbox\n                edge='end'\n                onChange={handleSelectMember}\n                checked={isAllMember}\n                // inputProps={{ 'aria-labelledby': labelId }}\n                color='primary'\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n          {\n            \n            tempMemberData.length > 0 ?\n              tempMemberData.map((value, key) => {\n                \n               \n                let merged = [...memberchecked, ...getGroupContacts];\n\n                //console.warn('checking4545454', memberchecked.indexOf(value.user_id) !== -1, value.user_id, memberchecked, checked);\n                const labelId = `checkbox-list-secondary-label-${value}`\n                return (\n                  <>\n                    <ListItem key={key} button onClick={handleMemberToggles(value)}>\n                      <ListItemAvatar>\n                        <Avatar alt={value.first_name} src={value.profile_image} />\n                      </ListItemAvatar>\n                      {\n                        value.first_name ?\n                          <ListItem className={classes.nameMobile}>\n                            <ListItemText id={labelId} primary={`${value.first_name} ${value.last_name}`} />\n                            <ListItemText id={labelId} primary={value.mobile_no} />\n                          </ListItem>\n                        :\n                          <ListItemText id={labelId} primary={value.mobile_no} />\n                      }\n                      {/* <ListItemText id={labelId} primary={value.first_name !== '' ? (`${value.first_name} ${value.last_name}`) : `${value.mobile_no}`} /> */}\n\n                      <ListItemSecondaryAction>\n                        <Checkbox\n                          edge='end'\n                          onChange={handleMemberToggles(value)}\n                          checked={merged.indexOf(value.user_id) !== -1}\n                          disabled={getGroupContacts.indexOf(value.user_id) !== -1}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                          color='primary'\n                        />\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                    <Divider variant='inset' component='li' />\n                  </>\n                )\n              })\n            : null\n          }\n        </List>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <List dense>\n          {/* <ListItem key={Math.random()} button>\n            <ListItemText className={classes.selectAll} primary=\"Select All\" />\n            <ListItemSecondaryAction>\n                <Checkbox\n                  edge='end'\n                  onChange={handleSelectGroupMember}\n                  checked={isAllGroupMember}\n                  // inputProps={{ 'aria-labelledby': labelId }}\n                  color='primary'\n                />\n              </ListItemSecondaryAction>\n          </ListItem> */}\n\n          <ListItem button onClick={handleSelectGroupMember}>\n            <ListItemAvatar />\n            <ListItemText primary='Select All' />\n            <ListItemSecondaryAction>\n              <Checkbox\n                edge='end'\n                onChange={handleSelectGroupMember}\n                checked={isAllGroupMember}\n                // inputProps={{ 'aria-labelledby': labelId }}\n                color='primary'\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n          {console.log('tempGroupdata--',tempGroupdata)}\n          {tempGroupdata.map((value, key) => {\n            const labelId = `checkbox-list-secondary-label-${value}`\n\n            \n            return (\n              <>\n              {\n                value.total!=0 &&\n              <ListItem key={key} button onClick={handleGroupToggle(value)}>\n                <ListItemAvatar>\n                  <Avatar alt={value.group_name} src={value.group_icon} />\n                </ListItemAvatar>\n                <ListItemText id={labelId} primary={`${value.group_name}`} />\n                <ListItemSecondaryAction>\n                  <Checkbox\n                    edge='end'\n                    onChange={handleGroupToggle(value)}\n                    checked={checked.indexOf(parseInt(value.group_id)) !== -1}\n                    inputProps={{ 'aria-labelledby': labelId }}\n                    color='primary'\n                  />\n                </ListItemSecondaryAction>\n              </ListItem>}\n              </>\n            )\n          })}\n        </List>\n      </TabPanel>\n    </div>\n  )\n}\n\nTabComponent.propTypes = {\n  handleToggles: PropTypes.func.isRequired,\n  handleMemberToggle: PropTypes.func.isRequired,\n  checked: PropTypes.array.isRequired,\n  groupdata: PropTypes.array.isRequired,\n  memberchecked: PropTypes.array.isRequired,\n  memberdata: PropTypes.array.isRequired,\n  handleToTagvalue: PropTypes.func.isRequired\n}\n\nexport default TabComponent\n"]},"metadata":{},"sourceType":"module"}