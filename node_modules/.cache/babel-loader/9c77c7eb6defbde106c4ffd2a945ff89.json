{"ast":null,"code":"var _jsxFileName = \"/var/www/html/RymindrAppNew/src/container/AccountSettings/EditProfile.js\";\nimport { Avatar, Box, Button, FormControl, FormControlLabel, FormHelperText, Grid, IconButton, MenuItem, TextField, Typography } from '@material-ui/core';\nimport React, { useMemo, useState } from 'react';\nimport { makeStyles, styled } from '@material-ui/core/styles';\nimport CircularSpinner from '../../component/CircularSpinner';\nimport FileBase64 from 'react-file-base64';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport countries from './country.json';\nimport { updateProfile } from '../../store/actions/accountsettingAction';\nimport { withSnackbar } from 'notistack';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0 10%'\n  },\n  input: {\n    display: 'none'\n  },\n  imgUpload: {\n    position: 'absolute',\n    background: theme.palette.primary.light,\n    borderRadius: '60%',\n    bottom: '-10px',\n    right: '10px'\n  }\n}));\nconst TypoStyled = styled(Typography)(({\n  theme\n}) => ({\n  fontSize: 17,\n  color: theme.palette.text.primary,\n  fontWeight: '600',\n  paddingTop: 20,\n  marginLeft: 25\n}));\nconst ButtonTypoStyled = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.palette.primary.main\n}));\nconst BoxStyled = styled(Box)(() => ({\n  height: 130,\n  width: 130,\n  display: 'inline-block',\n  margin: 'auto',\n  position: 'relative'\n}));\nconst AvatarStyled = styled(Avatar)(() => ({\n  height: 130,\n  width: 130\n}));\n\nconst EditProfile = props => {\n  const {\n    user_id,\n    sc_bessi_name,\n    account_type,\n    address,\n    post_code,\n    email,\n    mobile_no,\n    country_name,\n    profile_image\n  } = JSON.parse(localStorage.getItem('userData')) ? JSON.parse(localStorage.getItem('userData')) : {};\n  console.warn('countries5454', countries);\n  const formFields = {\n    user_id,\n    sc_bessi_name,\n    // last_name,\n    address,\n    post_code,\n    email,\n    mobile_no,\n    country_name: country_name ? country_name : countries[232].country,\n    business_contact: '',\n    profile_image: ''\n  };\n  const classes = useStyles();\n  const {\n    updateProfile,\n    enqueueSnackbar,\n    error,\n    sucess,\n    loading,\n    success_message\n  } = props;\n  const [values, setValues] = useState(formFields);\n  const [files, setFiles] = useState();\n  const [filesErr, setFilesErr] = useState('');\n  const [account_types, setAccountType] = useState(account_type);\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  useMemo(() => {\n    success_message && enqueueSnackbar(success_message, {\n      variant: 'success'\n    });\n  }, [success_message]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    values.account_type = account_types;\n    values.business_contact = values.mobile_no;\n    updateProfile(values);\n  };\n\n  const getFiles = files => {\n    setFilesErr('');\n    var extn = files.name.split('.');\n    var etn = ['jpg', 'jpeg', 'png'];\n    var low = extn[1].toLowerCase();\n\n    if (etn.includes(low)) {\n      setFiles(files);\n      var image = files.base64.replace(/^data:image\\/\\w+;base64,/, '');\n      updateProfile({\n        user_id,\n        profile_image: image,\n        ext: low\n      }); // console.log(sucess)\n\n      setValues({ ...values,\n        profile_image: image\n      });\n    } else {\n      // error\n      setFilesErr('This file not supportted');\n      setValues({ ...values,\n        profile_image: ''\n      });\n    }\n  };\n\n  useMemo(() => {\n    error && enqueueSnackbar(error, {\n      variant: 'error'\n    });\n  }, [error]);\n  useMemo(() => {\n    sucess && enqueueSnackbar(sucess, {\n      variant: 'sucess'\n    });\n  }, [sucess]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TypoStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, \"Edit Profile\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BoxStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AvatarStyled, {\n    alt: \"Remy Sharp\",\n    src: files ? files.base64 : profile_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: \"attachement\",\n    id: \"icon-button-file\",\n    control: /*#__PURE__*/React.createElement(FileBase64 // multiple={true}\n    , {\n      accept: \"image/*\",\n      onDone: getFiles,\n      className: \"displayNone\",\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }),\n    label: /*#__PURE__*/React.createElement(IconButton, {\n      color: \"primary\",\n      \"aria-label\": \"upload picture\",\n      className: classes.imgUpload,\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(PhotoCamera, {\n      color: \"inherit\",\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    error: !!filesErr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, filesErr)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardBoxContainer\",\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, account_types === 'Education' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardBox\",\n    onClick: () => setAccountType('Education'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../assets/images/education.svg'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ButtonTypoStyled, {\n    variant: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, \"Education\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardBox\",\n    onClick: () => setAccountType('Business'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../../assets/images/business.svg'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 52\n    }\n  }), /*#__PURE__*/React.createElement(ButtonTypoStyled, {\n    variant: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 52\n    }\n  }, \"Business\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"sc_bessi_name\",\n    value: values.sc_bessi_name,\n    label: \"School name\",\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleChange('sc_bessi_name'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"address\",\n    value: values.address,\n    label: \"Address\",\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleChange('address'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"post_code\",\n    value: values.post_code,\n    label: \"Postcode\",\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleChange('post_code'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"email\",\n    value: values.email,\n    label: \"Email\",\n    variant: \"outlined\",\n    fullWidth: true,\n    disabled: true,\n    onChange: handleChange('email'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"mobile_no\",\n    value: values.mobile_no,\n    label: \"Mobile no\",\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleChange('mobile_no'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    label: \"Select Country\",\n    value: values.country_name,\n    onChange: handleChange('country_name'),\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, countries.map(option => /*#__PURE__*/React.createElement(MenuItem, {\n    key: option.country,\n    value: option.country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, option.country)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, loading && /*#__PURE__*/React.createElement(CircularSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 29\n    }\n  }), \"SAVE PROFILE\"))))));\n};\n\nconst mapStateToProps = ({\n  account\n}) => {\n  return {\n    loading: account.loading,\n    error: account.error,\n    sucess: account.error,\n    success_message: account.success_message\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateProfile: data => dispatch(updateProfile(data))\n  };\n};\n\nEditProfile.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  sucess: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  updateProfile: PropTypes.func.isRequired,\n  success_message: PropTypes.any.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(EditProfile));","map":{"version":3,"sources":["/var/www/html/RymindrAppNew/src/container/AccountSettings/EditProfile.js"],"names":["Avatar","Box","Button","FormControl","FormControlLabel","FormHelperText","Grid","IconButton","MenuItem","TextField","Typography","React","useMemo","useState","makeStyles","styled","CircularSpinner","FileBase64","PhotoCamera","PropTypes","connect","countries","updateProfile","withSnackbar","useStyles","theme","container","padding","input","display","imgUpload","position","background","palette","primary","light","borderRadius","bottom","right","TypoStyled","fontSize","color","text","fontWeight","paddingTop","marginLeft","ButtonTypoStyled","main","BoxStyled","height","width","margin","AvatarStyled","EditProfile","props","user_id","sc_bessi_name","account_type","address","post_code","email","mobile_no","country_name","profile_image","JSON","parse","localStorage","getItem","console","warn","formFields","country","business_contact","classes","enqueueSnackbar","error","sucess","loading","success_message","values","setValues","files","setFiles","filesErr","setFilesErr","account_types","setAccountType","handleChange","prop","event","target","value","variant","handleSubmit","e","preventDefault","getFiles","extn","name","split","etn","low","toLowerCase","includes","image","base64","replace","ext","textAlign","require","map","option","mapStateToProps","account","mapDispatchToProps","dispatch","data","propTypes","func","isRequired","bool","string","any"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Box,\n  Button,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  IconButton,\n  MenuItem,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport React, { useMemo, useState } from 'react'\nimport { makeStyles, styled } from '@material-ui/core/styles'\nimport CircularSpinner from '../../component/CircularSpinner'\nimport FileBase64 from 'react-file-base64'\nimport PhotoCamera from '@material-ui/icons/PhotoCamera'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport countries from './country.json'\nimport { updateProfile } from '../../store/actions/accountsettingAction'\nimport { withSnackbar } from 'notistack'\n\nconst useStyles = makeStyles((theme) => ({\n  container: { padding: '0 10%' },\n  input: { display: 'none' },\n  imgUpload: {\n    position: 'absolute',\n    background: theme.palette.primary.light,\n    borderRadius: '60%',\n    bottom: '-10px',\n    right: '10px'\n  }\n}))\nconst TypoStyled = styled(Typography)(({ theme }) => ({\n  fontSize: 17,\n  color: theme.palette.text.primary,\n  fontWeight: '600',\n  paddingTop: 20,\n  marginLeft: 25\n}))\nconst ButtonTypoStyled = styled(Typography)(({ theme }) => ({\n  color: theme.palette.primary.main\n}))\nconst BoxStyled = styled(Box)(() => ({\n  height: 130,\n  width: 130,\n  display: 'inline-block',\n  margin: 'auto',\n  position: 'relative'\n}))\n\nconst AvatarStyled = styled(Avatar)(() => ({\n  height: 130,\n  width: 130\n}))\n\nconst EditProfile = (props) => {\n  const { user_id, sc_bessi_name, account_type, address, post_code, email, mobile_no, country_name, profile_image } = JSON.parse(localStorage.getItem('userData'))\n    ? JSON.parse(localStorage.getItem('userData'))\n    : {}\n\n    console.warn('countries5454', countries);\n  const formFields = {\n    user_id,\n    sc_bessi_name,\n    // last_name,\n    address,\n    post_code,\n    email,\n    mobile_no,\n    country_name: country_name ? country_name : countries[232].country,\n    business_contact: '',\n    profile_image: ''\n  }\n  const classes = useStyles()\n  const { updateProfile, enqueueSnackbar, error, sucess, loading, success_message } = props\n  const [values, setValues] = useState(formFields)\n  const [files, setFiles] = useState()\n  const [filesErr, setFilesErr] = useState('')\n  const [account_types, setAccountType] = useState(account_type)\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n  useMemo(() => {\n    success_message && enqueueSnackbar(success_message, { variant: 'success' })\n  }, [success_message])\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    values.account_type = account_types\n    values.business_contact = values.mobile_no\n    \n    updateProfile(values)\n  }\n\n  const getFiles = (files) => {\n    setFilesErr('')\n    var extn = files.name.split('.')\n    var etn = ['jpg', 'jpeg', 'png']\n\n    var low = extn[1].toLowerCase()\n    if (etn.includes(low)) {\n      setFiles(files)\n      var image = files.base64.replace(/^data:image\\/\\w+;base64,/, '')\n      updateProfile({ user_id, profile_image: image, ext: low })\n      // console.log(sucess)\n      setValues({ ...values, profile_image: image })\n    } else {\n      // error\n      setFilesErr('This file not supportted')\n      setValues({ ...values, profile_image: '' })\n    }\n  }\n\n  useMemo(() => {\n    error && enqueueSnackbar(error, { variant: 'error' })\n  }, [error])\n  useMemo(() => {\n    sucess && enqueueSnackbar(sucess, { variant: 'sucess' })\n  }, [sucess])\n  return (\n    <>\n      <TypoStyled>Edit Profile</TypoStyled>\n      <form onSubmit={handleSubmit}>\n        <Grid container spacing={5} className={classes.container}>\n          <Grid item xs={12} style={{ textAlign: 'center' }}>\n            <BoxStyled>\n              <AvatarStyled alt='Remy Sharp' src={files ? files.base64 : profile_image} />\n\n              <FormControlLabel\n                className='attachement'\n                id='icon-button-file'\n                control={\n                  <FileBase64\n                    // multiple={true}\n                    accept='image/*'\n                    onDone={getFiles}\n                    className='displayNone'\n                    style={{ display: 'none' }}\n                  />\n                }\n                label={\n                  <IconButton\n                    color='primary'\n                    aria-label='upload picture'\n                    className={classes.imgUpload}\n                    component='span'\n                  >\n                    <PhotoCamera color='inherit' fontSize='small' />\n                  </IconButton>\n                }\n              />\n              <FormControl error={!!filesErr}>\n                <FormHelperText>{filesErr}</FormHelperText>\n              </FormControl>\n            </BoxStyled>\n          </Grid>\n          {/* <Grid item xs={6}>\n            <TextField\n              id=\"fname\"\n              value={values.first_name}\n              label=\"First Name\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={handleChange('first_name')}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              id=\"lname\"\n              value={values.last_name}\n              label=\"Last Name\"\n              variant=\"outlined\"\n              fullWidth\n              onChange={handleChange('last_name')}\n            />\n          </Grid> */}\n          <Grid item xs={12} spacing={1}>\n            <div className='cardBoxContainer' style={{ margin: 0 }}>\n              {(account_types === 'Education') ? <div\n                className='cardBox'\n\n                onClick={() => setAccountType('Education')}\n              >\n                <img src={require('../../assets/images/education.svg')} />\n                <ButtonTypoStyled variant='button'>Education</ButtonTypoStyled>\n              </div> : <div\n                                                   className='cardBox'\n                                                   onClick={() => setAccountType('Business')}\n                                                          >\n                                                   <img src={require('../../assets/images/business.svg')} />\n                                                   <ButtonTypoStyled variant='button'>Business</ButtonTypoStyled>\n              </div>}\n\n            </div>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              id='sc_bessi_name'\n              value={values.sc_bessi_name}\n              label='School name'\n              variant='outlined'\n              fullWidth\n              onChange={handleChange('sc_bessi_name')}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              id='address'\n              value={values.address}\n              label='Address'\n              variant='outlined'\n              fullWidth\n              onChange={handleChange('address')}\n            />\n          </Grid><Grid item xs={6}>\n            <TextField\n              id='post_code'\n              value={values.post_code}\n              label='Postcode'\n              variant='outlined'\n              fullWidth\n              onChange={handleChange('post_code')}\n            />\n                 </Grid>\n          <Grid item xs={6}>\n            <TextField\n              id='email'\n              value={values.email}\n              label='Email'\n              variant='outlined'\n              fullWidth\n              disabled\n              onChange={handleChange('email')}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              id='mobile_no'\n              value={values.mobile_no}\n              label='Mobile no'\n              variant='outlined'\n              fullWidth\n              onChange={handleChange('mobile_no')}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              fullWidth\n              select\n              label='Select Country'\n              value={values.country_name}\n              onChange={handleChange('country_name')}\n              variant='outlined'\n            >\n              {countries.map((option) => (\n                <MenuItem key={option.country} value={option.country}>\n                  {option.country}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Box style={{ textAlign: 'center' }}>\n              <Button variant='contained' color='primary' type='submit' disabled={loading}>\n                {loading && <CircularSpinner />}\n                SAVE PROFILE\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </form>\n    </>\n  )\n}\nconst mapStateToProps = ({ account }) => {\n  return {\n    loading: account.loading,\n    error: account.error,\n    sucess: account.error,\n    success_message: account.success_message\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateProfile: (data) => dispatch(updateProfile(data))\n  }\n}\n\nEditProfile.propTypes = {\n  enqueueSnackbar: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  sucess: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired,\n  updateProfile: PropTypes.func.isRequired,\n  success_message: PropTypes.any.isRequired\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(EditProfile))\n"]},"metadata":{},"sourceType":"module"}